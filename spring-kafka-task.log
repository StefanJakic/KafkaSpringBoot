2023-03-18T13:10:48.942+01:00  INFO 62896 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 62896 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T13:10:48.956+01:00  INFO 62896 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T13:10:49.666+01:00  INFO 62896 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T13:10:49.688+01:00  INFO 62896 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T13:10:50.352+01:00  WARN 62896 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'springKafkaTaskApplication': Unsatisfied dependency expressed through field 'databaseMessageHandler': Error creating bean with name 'databaseMessageHandler': Unsatisfied dependency expressed through field 'jdbcTemplate': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: URL must start with 'jdbc'
2023-03-18T13:10:50.364+01:00  INFO 62896 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T13:10:50.385+01:00 ERROR 62896 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'springKafkaTaskApplication': Unsatisfied dependency expressed through field 'databaseMessageHandler': Error creating bean with name 'databaseMessageHandler': Unsatisfied dependency expressed through field 'jdbcTemplate': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: URL must start with 'jdbc'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:712) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:692) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:127) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:481) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1397) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'databaseMessageHandler': Unsatisfied dependency expressed through field 'jdbcTemplate': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: URL must start with 'jdbc'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:712) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:692) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:127) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:481) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1397) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:709) ~[spring-beans-6.0.3.jar:6.0.3]
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: URL must start with 'jdbc'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:548) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:709) ~[spring-beans-6.0.3.jar:6.0.3]
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: URL must start with 'jdbc'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1324) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1161) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1405) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1325) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789) ~[spring-beans-6.0.3.jar:6.0.3]
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: URL must start with 'jdbc'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-6.0.3.jar:6.0.3]
	... 62 common frames omitted
Caused by: java.lang.IllegalArgumentException: URL must start with 'jdbc'
	at org.springframework.util.Assert.isTrue(Assert.java:122) ~[spring-core-6.0.3.jar:6.0.3]
	at org.springframework.boot.jdbc.DatabaseDriver.fromJdbcUrl(DatabaseDriver.java:282) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:176) ~[spring-boot-autoconfigure-3.0.1.jar:3.0.1]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.initializeDataSourceBuilder(DataSourceProperties.java:123) ~[spring-boot-autoconfigure-3.0.1.jar:3.0.1]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:48) ~[spring-boot-autoconfigure-3.0.1.jar:3.0.1]
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:90) ~[spring-boot-autoconfigure-3.0.1.jar:3.0.1]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.3.jar:6.0.3]
	... 63 common frames omitted

2023-03-18T13:13:10.550+01:00  INFO 75464 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 75464 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T13:13:10.553+01:00  INFO 75464 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T13:13:11.109+01:00  INFO 75464 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T13:13:11.138+01:00  INFO 75464 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T13:13:12.379+01:00  INFO 75464 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T13:13:12.574+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T13:13:12.575+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T13:13:12.576+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679141592573
2023-03-18T13:13:12.592+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:12.595+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:12.699+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:12.699+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:12.809+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:12.809+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:13.141+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:13.141+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:13.577+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:13.578+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:14.345+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:14.346+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:15.331+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:15.331+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:16.418+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:16.418+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:17.401+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:17.401+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:18.492+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:18.493+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:19.474+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:19.475+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:20.677+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:20.678+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:21.658+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:21.658+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:22.644+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:22.644+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:23.740+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:23.740+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:24.614+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:24.614+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:25.707+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:25.707+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:26.581+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:26.581+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:27.672+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:27.673+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:28.664+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:28.664+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:29.546+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:29.546+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:30.530+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:30.530+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:31.621+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:31.622+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:32.489+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:32.490+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:33.697+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:33.697+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:34.899+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:34.899+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:35.994+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:35.994+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:36.976+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:36.976+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:38.061+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:38.061+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:39.160+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:39.161+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:40.043+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:40.043+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:41.139+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:41.139+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:42.014+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:42.015+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:42.583+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.a.k.c.a.i.AdminMetadataManager         : [AdminClient clientId=adminclient-1] Metadata update failed

org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata

2023-03-18T13:13:42.583+01:00 ERROR 75464 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not configure topics

java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960) ~[na:na]
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095) ~[na:na]
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:205) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]

2023-03-18T13:13:43.134+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:43.134+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:44.332+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:44.332+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:45.205+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:45.206+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:46.406+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:46.406+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:47.605+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:47.606+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:48.591+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:48.592+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:49.802+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:49.803+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:51.004+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:51.004+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:51.889+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:13:51.889+01:00  WARN 75464 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:52.592+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.a.k.clients.admin.KafkaAdminClient     : [AdminClient clientId=adminclient-1] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2023-03-18T13:13:52.593+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T13:13:52.593+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.a.k.c.a.i.AdminMetadataManager         : [AdminClient clientId=adminclient-1] Metadata update failed

org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata

2023-03-18T13:13:52.594+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.a.k.clients.admin.KafkaAdminClient     : [AdminClient clientId=adminclient-1] Timed out 2 remaining operation(s) during close.
2023-03-18T13:13:52.599+01:00  INFO 75464 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T13:13:52.599+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T13:13:52.599+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T13:13:52.599+01:00  INFO 75464 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T13:13:52.599+01:00  INFO 75464 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T13:13:52.600+01:00  INFO 75464 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T13:13:52.634+01:00  INFO 75464 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T13:13:52.688+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T13:13:52.688+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T13:13:52.689+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679141632688
2023-03-18T13:13:52.691+01:00  INFO 75464 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T13:13:52.701+01:00  INFO 75464 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T13:13:52.708+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T13:13:52.710+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T13:13:52.710+01:00  INFO 75464 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679141632708
2023-03-18T13:13:52.711+01:00  INFO 75464 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T13:13:52.726+01:00  INFO 75464 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 42.639 seconds (process running for 43.048)
2023-03-18T13:13:52.994+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:52.995+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:52.994+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:52.996+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:52.995+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:52.996+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.110+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.110+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.111+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.111+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.111+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.111+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.223+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.224+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.224+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.286+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.286+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.286+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.458+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.458+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.458+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.522+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.522+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.522+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:53.818+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:53.819+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:53.819+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:54.007+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:54.007+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:54.008+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:54.801+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:54.802+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:54.802+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:54.989+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:54.990+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:54.990+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:55.669+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:55.669+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:55.669+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:55.919+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:55.919+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:55.919+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:56.840+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:56.840+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:56.841+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:56.841+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:56.841+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:56.841+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:57.911+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:57.911+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:57.911+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:57.959+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:57.959+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:57.959+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:58.770+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:58.770+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:58.770+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:58.941+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:58.941+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:58.942+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:59.811+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:59.811+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:59.812+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:13:59.858+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:13:59.858+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:13:59.858+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:00.900+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:00.900+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:00.900+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:00.977+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:00.977+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:00.977+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:01.941+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:01.942+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:01.942+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:02.018+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:02.019+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:02.019+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:02.901+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:02.902+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:02.902+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:03.230+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:03.230+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:03.230+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:04.009+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:04.010+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:04.010+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:04.149+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:04.150+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:04.150+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:04.993+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:04.993+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:04.993+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:05.270+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:05.270+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:05.271+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:06.160+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:06.160+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:06.160+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:06.503+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:06.504+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:06.504+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:07.082+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:07.082+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:07.082+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:07.609+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:07.610+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:07.610+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:08.217+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:08.218+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:08.218+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:08.805+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:08.805+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:08.805+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:09.070+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:09.071+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:09.071+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:09.783+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:09.784+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:09.784+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:10.234+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:10.235+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:10.235+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:10.890+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:10.890+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:10.890+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:11.156+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:11.156+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:11.156+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:11.747+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:11.747+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:11.748+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:12.383+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:12.384+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:12.384+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:12.803+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:12.804+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:12.804+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:13.485+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:13.485+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:13.485+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:13.908+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:13.909+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:13.909+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:14.405+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:14.405+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:14.405+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:14.762+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:14.763+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:14.763+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:15.446+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:15.447+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:15.447+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:15.930+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:15.930+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:15.930+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:16.304+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:16.304+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:16.304+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:16.971+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:16.971+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:16.971+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:17.219+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:17.220+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:17.220+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:18.127+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:18.127+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:18.128+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:18.236+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:18.236+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:18.237+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:19.044+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:19.044+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:19.044+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:19.152+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:19.152+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:19.152+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:20.073+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:20.073+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:20.074+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:20.088+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:20.089+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:20.089+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:21.003+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:21.003+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:21.003+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:21.048+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:21.049+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:21.049+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:22.025+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:22.025+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:22.025+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:22.164+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:22.165+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:22.165+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:23.239+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:23.239+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:23.239+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:23.269+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:23.270+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:23.270+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:24.310+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:24.311+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:24.311+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:24.404+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:24.404+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:24.404+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:25.264+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:25.265+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:25.265+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:25.484+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:25.484+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:25.485+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:26.263+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:26.263+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:26.263+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:26.589+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:26.590+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:26.590+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:27.177+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:27.177+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:27.177+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:27.563+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:27.564+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:27.564+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:28.374+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:28.374+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:28.375+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:28.763+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:28.764+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:28.764+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:29.605+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:29.606+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:29.606+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:30.011+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:30.012+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:30.012+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:30.586+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:30.587+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:30.587+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:30.987+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:30.988+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:30.988+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:31.810+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:31.810+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:31.810+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:32.229+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:32.230+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:32.230+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:32.944+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:32.945+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:32.945+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:33.084+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:33.085+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:33.085+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:34.053+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:34.053+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:34.053+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:34.128+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:34.129+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:34.129+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:35.213+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:35.213+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:35.213+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:35.289+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:35.289+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:35.289+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:36.205+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:36.206+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:36.206+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:36.439+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:36.440+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:36.440+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:37.326+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:37.326+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:37.327+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:37.545+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:37.545+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:37.545+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:38.463+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:38.463+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:38.463+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:38.524+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:38.524+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:38.524+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:39.565+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:39.566+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:39.566+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:39.689+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:39.690+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:39.690+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:40.606+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:40.606+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:40.606+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:40.669+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:40.669+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:40.669+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:41.524+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:41.525+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:41.525+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:41.775+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:41.775+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:41.775+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:42.572+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:42.573+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:42.573+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:42.759+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:42.760+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:42.760+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:43.520+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:43.520+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:43.520+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:43.611+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:43.612+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:43.612+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:44.682+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:44.683+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:44.683+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:44.713+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:44.714+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:44.714+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:45.658+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:45.659+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:45.659+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:45.876+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:45.876+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:45.876+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:46.709+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:46.709+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:46.709+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:46.725+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:46.726+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:46.726+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:47.579+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:47.580+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:47.580+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:47.844+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:47.844+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:47.844+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:48.605+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:48.605+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:48.606+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:48.948+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:48.949+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:48.949+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:49.789+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:49.789+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:49.790+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:50.118+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:50.118+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:50.118+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:50.909+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:50.909+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:50.909+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:51.114+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:51.115+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:51.115+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:51.774+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:51.774+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:51.774+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:52.291+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:52.291+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:52.291+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:52.637+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:52.638+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:52.638+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:53.490+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:53.491+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:53.491+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:53.696+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:53.696+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:53.696+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:54.539+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:54.540+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:54.540+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:54.618+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:54.618+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:54.618+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:55.592+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:55.593+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:55.593+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:55.624+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:55.624+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:55.624+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:56.601+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:56.602+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:56.602+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:56.632+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:56.633+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:56.633+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:57.613+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:57.614+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:57.614+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:57.818+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:57.819+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:57.819+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:58.739+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:58.740+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:58.740+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:58.864+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:58.865+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:58.865+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:59.862+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:59.862+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:59.863+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:14:59.908+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:14:59.909+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:14:59.909+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:00.966+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:00.967+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:00.967+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:01.091+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:01.091+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:01.091+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:01.948+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:01.949+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:01.949+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:02.149+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:02.149+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:02.149+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:03.021+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:03.022+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:03.022+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:03.131+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:03.132+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:03.132+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:04.068+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:04.069+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:04.069+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:04.379+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:04.379+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:04.379+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:05.048+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:05.049+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:05.049+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:05.622+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:05.622+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:05.623+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:06.228+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:06.228+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:06.228+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:06.730+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:06.731+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:06.731+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:07.155+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:07.155+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:07.155+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:07.900+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:07.901+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:07.901+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:08.411+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:08.411+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:08.411+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:09.017+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:09.018+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:09.018+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:09.395+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:09.396+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:09.396+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:10.004+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:10.005+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:10.005+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:10.254+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:10.256+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:10.256+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:11.111+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:11.112+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:11.112+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:11.420+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:11.420+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:11.421+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:12.026+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:12.026+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:12.026+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:12.585+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:12.585+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:12.586+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:13.040+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:13.040+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:13.041+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:13.412+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:13.413+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:13.413+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:13.960+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:13.961+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:13.961+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:14.286+01:00  INFO 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T13:15:14.287+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:14.287+01:00  WARN 75464 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T13:15:18.209+01:00  INFO 69204 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 69204 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T13:15:18.211+01:00  INFO 69204 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T13:15:18.751+01:00  INFO 69204 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T13:15:18.777+01:00  INFO 69204 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T13:15:20.035+01:00  INFO 69204 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T13:15:20.213+01:00  INFO 69204 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T13:15:20.214+01:00  INFO 69204 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T13:15:20.215+01:00  INFO 69204 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679141720212
2023-03-18T13:15:20.230+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:20.233+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:20.350+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:20.350+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:20.571+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:20.572+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:20.789+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:20.789+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:21.228+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:21.228+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:21.989+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:21.989+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:22.866+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:22.866+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:23.956+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:23.956+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:25.164+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:25.165+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:26.366+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:26.366+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:27.347+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:27.348+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T13:15:28.330+01:00  INFO 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T13:15:28.330+01:00  WARN 69204 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:01.859+01:00  INFO 78876 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 78876 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T17:53:01.863+01:00  INFO 78876 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T17:53:02.421+01:00  INFO 78876 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T17:53:02.443+01:00  INFO 78876 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T17:53:03.766+01:00  INFO 78876 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T17:53:03.970+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T17:53:03.971+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T17:53:03.971+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158383968
2023-03-18T17:53:03.986+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:03.989+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:04.094+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:04.094+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:04.204+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:04.204+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:04.420+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:04.421+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:04.857+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:04.857+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:05.619+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:05.620+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:06.823+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:06.823+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:07.699+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:07.699+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:08.794+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:08.794+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:10.001+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:10.002+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:10.988+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:10.988+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:12.083+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:12.083+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:12.954+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:12.955+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:14.047+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:14.047+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:15.249+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:15.249+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:16.453+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:16.453+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:17.439+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:17.439+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:18.420+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:18.420+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:19.410+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:19.411+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:20.502+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:20.503+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:21.593+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:21.593+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:22.572+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:22.573+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:23.661+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:23.661+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:24.641+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:24.641+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:25.624+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:25.624+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:26.618+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:26.619+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:27.821+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:27.821+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:28.802+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:28.802+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:29.676+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:29.676+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:30.665+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:30.666+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:31.644+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:31.644+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:32.845+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:32.845+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:33.977+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.a.k.c.a.i.AdminMetadataManager         : [AdminClient clientId=adminclient-1] Metadata update failed

org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata

2023-03-18T17:53:33.981+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:33.981+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:33.992+01:00 ERROR 78876 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not configure topics

java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960) ~[na:na]
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095) ~[na:na]
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:205) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]

2023-03-18T17:53:34.978+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:34.978+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:36.071+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:36.071+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:36.946+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:36.946+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:37.943+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:37.944+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:39.037+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:39.037+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:40.133+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:40.134+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:41.223+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:41.223+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:42.110+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:42.110+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:43.310+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T17:53:43.310+01:00  WARN 78876 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:43.995+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.a.k.clients.admin.KafkaAdminClient     : [AdminClient clientId=adminclient-1] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2023-03-18T17:53:43.996+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T17:53:43.996+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.a.k.c.a.i.AdminMetadataManager         : [AdminClient clientId=adminclient-1] Metadata update failed

org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata

2023-03-18T17:53:43.997+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.a.k.clients.admin.KafkaAdminClient     : [AdminClient clientId=adminclient-1] Timed out 2 remaining operation(s) during close.
2023-03-18T17:53:44.000+01:00  INFO 78876 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:53:44.001+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T17:53:44.001+01:00  INFO 78876 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T17:53:44.001+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T17:53:44.001+01:00  INFO 78876 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T17:53:44.001+01:00  INFO 78876 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T17:53:44.033+01:00  INFO 78876 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T17:53:44.090+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T17:53:44.090+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T17:53:44.090+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158424090
2023-03-18T17:53:44.093+01:00  INFO 78876 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T17:53:44.102+01:00  INFO 78876 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T17:53:44.109+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T17:53:44.109+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T17:53:44.110+01:00  INFO 78876 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158424109
2023-03-18T17:53:44.110+01:00  INFO 78876 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T17:53:44.120+01:00  INFO 78876 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 42.697 seconds (process running for 43.097)
2023-03-18T17:53:44.351+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.351+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.351+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.351+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.352+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.352+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.454+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.454+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.454+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.454+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.455+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.455+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.625+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.625+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.626+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.626+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.626+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.626+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.858+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.858+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:44.858+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.858+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:44.858+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:44.858+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:45.216+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:45.217+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:45.217+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:45.232+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:45.233+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:45.233+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:45.892+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:45.892+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:45.892+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:46.095+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:46.096+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:46.096+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:46.744+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:46.745+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:46.745+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:47.197+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:47.197+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:47.198+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:47.725+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:47.725+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:47.725+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:48.361+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:48.362+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:48.362+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:48.768+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:48.769+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:48.769+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:49.374+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:49.375+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:49.375+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:49.608+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:49.608+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:49.608+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:50.543+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:50.543+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:50.543+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:50.712+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:50.713+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:50.713+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:51.714+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:51.715+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:51.715+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:51.823+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:51.823+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:51.823+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:52.767+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:52.767+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:52.767+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:52.877+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:52.877+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:52.877+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:53.624+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:53.624+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:53.625+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:54.047+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:54.048+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:54.048+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:54.766+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:54.767+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:54.767+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:55.098+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:55.100+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:55.101+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:55.936+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:55.937+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:55.937+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:56.073+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:56.073+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:56.073+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:56.784+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:56.784+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:56.784+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:57.233+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:57.234+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:57.234+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:57.889+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:57.890+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:57.890+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:58.340+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:58.341+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:58.341+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:58.869+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:58.869+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:58.869+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:53:59.322+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:53:59.322+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:53:59.322+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:00.086+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:00.086+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:00.086+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:00.428+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:00.428+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:00.428+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:01.250+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:01.251+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:01.251+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:01.402+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:01.403+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:01.403+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:02.103+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:02.104+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:02.104+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:02.566+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:02.567+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:02.567+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:03.083+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:03.083+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:03.083+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:03.678+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:03.679+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:03.679+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:03.942+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:03.943+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:03.943+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:04.705+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:04.706+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:04.706+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:04.907+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:04.907+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:04.907+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:05.685+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:05.686+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:05.686+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:06.137+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:06.137+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:06.138+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:06.730+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:06.730+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:06.731+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:07.245+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:07.245+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:07.245+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:07.839+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:07.839+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:07.839+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:08.497+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:08.497+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:08.498+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:08.826+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:08.826+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:08.826+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:09.540+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:09.541+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:09.541+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:09.839+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:09.839+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:09.839+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:10.399+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:10.399+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:10.399+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:10.945+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:10.946+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:10.946+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:11.256+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:11.256+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:11.256+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:12.006+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:12.007+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:12.007+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:12.368+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:12.368+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:12.368+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:13.053+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:13.053+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:13.053+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:13.535+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:13.536+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:13.536+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:14.096+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:14.097+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:14.097+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:14.487+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:14.487+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:14.487+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:15.019+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:15.020+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:15.020+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:15.655+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:15.655+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:15.655+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:16.000+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:16.001+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:16.001+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:16.772+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:16.772+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:16.772+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:16.865+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:16.866+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T17:54:16.866+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2023-03-18T17:54:18.219+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error while fetching metadata with correlation id 2 : {topicTask2=LEADER_NOT_AVAILABLE}
2023-03-18T17:54:18.219+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error while fetching metadata with correlation id 2 : {topicTask1=LEADER_NOT_AVAILABLE}
2023-03-18T17:54:18.221+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T17:54:18.221+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T17:54:18.327+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error while fetching metadata with correlation id 5 : {topicTask2=LEADER_NOT_AVAILABLE}
2023-03-18T17:54:18.327+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error while fetching metadata with correlation id 5 : {topicTask1=LEADER_NOT_AVAILABLE}
2023-03-18T17:54:18.438+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error while fetching metadata with correlation id 7 : {topicTask2=LEADER_NOT_AVAILABLE}
2023-03-18T17:54:18.438+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error while fetching metadata with correlation id 7 : {topicTask1=LEADER_NOT_AVAILABLE}
2023-03-18T17:54:18.546+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:54:18.546+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T17:54:18.546+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:54:18.552+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T17:54:18.552+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T17:54:18.555+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T17:54:18.555+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T17:54:18.582+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-20226ce9-b810-40bc-9f0a-b10ea778b403
2023-03-18T17:54:18.582+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-bd119cdc-c7c7-461d-809e-f87ad51f4382
2023-03-18T17:54:18.583+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T17:54:18.583+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T17:54:18.583+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T17:54:18.583+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T17:54:18.600+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=42, memberId='consumer-springkafkatask33;-2-20226ce9-b810-40bc-9f0a-b10ea778b403', protocol='range'}
2023-03-18T17:54:18.600+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=42, memberId='consumer-springkafkatask33;-1-bd119cdc-c7c7-461d-809e-f87ad51f4382', protocol='range'}
2023-03-18T17:54:18.603+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:54:18.603+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:54:18.607+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Finished assignment for group at generation 42: {consumer-springkafkatask33;-2-20226ce9-b810-40bc-9f0a-b10ea778b403=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask33;-1-bd119cdc-c7c7-461d-809e-f87ad51f4382=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T17:54:18.662+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=42, memberId='consumer-springkafkatask33;-2-20226ce9-b810-40bc-9f0a-b10ea778b403', protocol='range'}
2023-03-18T17:54:18.662+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=42, memberId='consumer-springkafkatask33;-1-bd119cdc-c7c7-461d-809e-f87ad51f4382', protocol='range'}
2023-03-18T17:54:18.663+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T17:54:18.663+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T17:54:18.667+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask2-0
2023-03-18T17:54:18.667+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T17:54:18.686+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=17, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T17:54:18.686+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=69, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T17:54:18.686+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T17:54:18.687+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T17:54:18.687+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask2-0]
2023-03-18T17:54:51.422+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 2147483647 disconnected.
2023-03-18T17:54:51.422+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:51.423+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight FETCH request with correlation id 90 due to node 0 being disconnected (elapsed time since creation: 361ms, elapsed time since send: 361ms, request timeout: 30000ms)
2023-03-18T17:54:51.424+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2010687348, epoch=63) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:54:51.424+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:51.424+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 2147483647 disconnected.
2023-03-18T17:54:51.425+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:51.425+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight FETCH request with correlation id 89 due to node 0 being disconnected (elapsed time since creation: 363ms, elapsed time since send: 363ms, request timeout: 30000ms)
2023-03-18T17:54:51.425+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-18T17:54:51.425+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight METADATA request with correlation id 90 due to node 0 being disconnected (elapsed time since creation: 254ms, elapsed time since send: 254ms, request timeout: 30000ms)
2023-03-18T17:54:51.426+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node -1 disconnected.
2023-03-18T17:54:51.427+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=605818969, epoch=63) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:54:51.427+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-18T17:54:53.555+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:53.555+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:53.556+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:54:53.556+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:54:55.709+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:55.710+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:54:55.710+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=605818969, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:54:55.772+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:55.772+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:54:55.773+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2010687348, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:54:57.934+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:57.934+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:54:58.041+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:54:58.042+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:00.447+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:00.448+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:00.448+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=605818969, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:00.493+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:00.493+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:00.494+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2010687348, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:03.171+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:03.171+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:03.329+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:03.329+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:06.209+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:06.210+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:06.210+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=605818969, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:06.349+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:06.350+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:09.290+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:09.291+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:09.291+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=605818969, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:09.463+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:09.463+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:09.464+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2010687348, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:10.325+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error while fetching metadata with correlation id 99 : {topicTask1=LEADER_NOT_AVAILABLE}
2023-03-18T17:55:10.344+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error while fetching metadata with correlation id 98 : {topicTask2=LEADER_NOT_AVAILABLE, topicTask1=LEADER_NOT_AVAILABLE}
2023-03-18T17:55:10.436+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:55:10.436+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:55:10.442+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T17:55:10.448+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T17:55:10.449+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:55:10.450+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T17:55:10.452+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T17:55:23.174+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:23.175+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 2147483647 disconnected.
2023-03-18T17:55:23.175+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight FETCH request with correlation id 132 due to node 0 being disconnected (elapsed time since creation: 337ms, elapsed time since send: 337ms, request timeout: 30000ms)
2023-03-18T17:55:23.175+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2004618097, epoch=24) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:23.175+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:23.175+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 2147483647 disconnected.
2023-03-18T17:55:23.176+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight FETCH request with correlation id 133 due to node 0 being disconnected (elapsed time since creation: 338ms, elapsed time since send: 338ms, request timeout: 30000ms)
2023-03-18T17:55:23.177+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-18T17:55:23.177+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight METADATA request with correlation id 134 due to node 0 being disconnected (elapsed time since creation: 232ms, elapsed time since send: 232ms, request timeout: 30000ms)
2023-03-18T17:55:23.178+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=28714451, epoch=24) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:23.178+01:00  INFO 78876 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2023-03-18T17:55:25.307+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:25.308+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:25.308+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2004618097, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:25.322+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:25.322+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:25.322+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=28714451, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:27.470+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:27.470+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:27.486+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:27.486+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:29.706+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:29.706+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:29.707+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Error sending fetch request (sessionId=28714451, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:29.754+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:29.754+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:29.754+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Error sending fetch request (sessionId=2004618097, epoch=INITIAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2023-03-18T17:55:32.226+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:32.227+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:55:32.241+01:00  INFO 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Node 0 disconnected.
2023-03-18T17:55:32.241+01:00  WARN 78876 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Connection to node 0 (host.docker.internal/192.168.137.218:9092) could not be established. Broker may not be available.
2023-03-18T17:56:36.477+01:00  INFO 69364 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 69364 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T17:56:36.480+01:00  INFO 69364 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T17:56:36.970+01:00  INFO 69364 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T17:56:36.992+01:00  INFO 69364 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T17:56:38.151+01:00  INFO 69364 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = ["localhost:9092";]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T17:56:38.187+01:00 ERROR 69364 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not create admin

org.apache.kafka.common.KafkaException: Failed to create new KafkaAdminClient
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:553) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.Admin.create(Admin.java:144) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:49) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.createAdmin(KafkaAdmin.java:312) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:192) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: "localhost:9092";
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:505) ~[kafka-clients-3.3.1.jar:na]
	... 14 common frames omitted

2023-03-18T17:56:38.196+01:00  INFO 69364 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:56:38.197+01:00  INFO 69364 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T17:56:38.198+01:00  INFO 69364 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T17:56:38.238+01:00  INFO 69364 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = ["localhost:9092";]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T17:56:38.330+01:00  INFO 69364 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T17:56:38.331+01:00  INFO 69364 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T17:56:38.333+01:00  INFO 69364 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T17:56:38.335+01:00  INFO 69364 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask33;-1 unregistered
2023-03-18T17:56:38.335+01:00  WARN 69364 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T17:56:38.336+01:00  INFO 69364 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:56:38.336+01:00  INFO 69364 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T17:56:38.337+01:00  INFO 69364 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T17:56:38.355+01:00  INFO 69364 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T17:56:38.382+01:00 ERROR 69364 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: "localhost:9092";
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T17:57:52.161+01:00  INFO 82396 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 82396 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T17:57:52.164+01:00  INFO 82396 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T17:57:52.669+01:00  INFO 82396 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T17:57:52.691+01:00  INFO 82396 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T17:57:53.768+01:00  INFO 82396 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = ["localhost:9092";]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T17:57:53.795+01:00 ERROR 82396 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not create admin

org.apache.kafka.common.KafkaException: Failed to create new KafkaAdminClient
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:553) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.Admin.create(Admin.java:144) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:49) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.createAdmin(KafkaAdmin.java:312) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:192) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: "localhost:9092";
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:505) ~[kafka-clients-3.3.1.jar:na]
	... 14 common frames omitted

2023-03-18T17:57:53.805+01:00  INFO 82396 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:57:53.805+01:00  INFO 82396 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T17:57:53.806+01:00  INFO 82396 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T17:57:53.844+01:00  INFO 82396 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = ["localhost:9092";]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T17:57:53.933+01:00  INFO 82396 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T17:57:53.934+01:00  INFO 82396 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T17:57:53.937+01:00  INFO 82396 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T17:57:53.939+01:00  INFO 82396 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask33;-1 unregistered
2023-03-18T17:57:53.939+01:00  WARN 82396 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T17:57:53.940+01:00  INFO 82396 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:57:53.940+01:00  INFO 82396 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T17:57:53.941+01:00  INFO 82396 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T17:57:53.957+01:00  INFO 82396 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T17:57:53.977+01:00 ERROR 82396 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: "localhost:9092";
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T17:59:37.494+01:00  INFO 80908 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 80908 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T17:59:37.497+01:00  INFO 80908 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T17:59:38.102+01:00  INFO 80908 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T17:59:38.129+01:00  INFO 80908 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T17:59:39.370+01:00  INFO 80908 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092;]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T17:59:39.403+01:00 ERROR 80908 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not create admin

org.apache.kafka.common.KafkaException: Failed to create new KafkaAdminClient
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:553) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.Admin.create(Admin.java:144) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:49) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.createAdmin(KafkaAdmin.java:312) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:192) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: localhost:9092;
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:505) ~[kafka-clients-3.3.1.jar:na]
	... 14 common frames omitted

2023-03-18T17:59:39.411+01:00  INFO 80908 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:59:39.412+01:00  INFO 80908 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T17:59:39.413+01:00  INFO 80908 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T17:59:39.446+01:00  INFO 80908 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092;]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T17:59:39.560+01:00  INFO 80908 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T17:59:39.561+01:00  INFO 80908 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T17:59:39.563+01:00  INFO 80908 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T17:59:39.564+01:00  INFO 80908 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask33;-1 unregistered
2023-03-18T17:59:39.565+01:00  WARN 80908 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T17:59:39.566+01:00  INFO 80908 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:59:39.566+01:00  INFO 80908 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T17:59:39.567+01:00  INFO 80908 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T17:59:39.579+01:00  INFO 80908 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T17:59:39.602+01:00 ERROR 80908 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: localhost:9092;
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T17:59:58.281+01:00  INFO 32424 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 32424 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T17:59:58.284+01:00  INFO 32424 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T17:59:58.776+01:00  INFO 32424 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T17:59:58.794+01:00  INFO 32424 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T17:59:59.818+01:00  INFO 32424 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092;]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T17:59:59.844+01:00 ERROR 32424 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not create admin

org.apache.kafka.common.KafkaException: Failed to create new KafkaAdminClient
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:553) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.Admin.create(Admin.java:144) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:49) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.createAdmin(KafkaAdmin.java:312) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:192) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: localhost:9092;
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:505) ~[kafka-clients-3.3.1.jar:na]
	... 14 common frames omitted

2023-03-18T17:59:59.854+01:00  INFO 32424 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:59:59.854+01:00  INFO 32424 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T17:59:59.855+01:00  INFO 32424 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T17:59:59.884+01:00  INFO 32424 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092;]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T17:59:59.979+01:00  INFO 32424 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T17:59:59.979+01:00  INFO 32424 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T17:59:59.981+01:00  INFO 32424 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T17:59:59.982+01:00  INFO 32424 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask33;-1 unregistered
2023-03-18T17:59:59.983+01:00  WARN 32424 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T17:59:59.983+01:00  INFO 32424 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T17:59:59.984+01:00  INFO 32424 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T17:59:59.984+01:00  INFO 32424 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T17:59:59.997+01:00  INFO 32424 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T18:00:00.020+01:00 ERROR 32424 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: localhost:9092;
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T18:00:06.401+01:00  INFO 43824 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 43824 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:00:06.403+01:00  INFO 43824 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:00:06.967+01:00  INFO 43824 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:00:06.987+01:00  INFO 43824 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:00:08.109+01:00  INFO 43824 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [127.0.0.1:9092;]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:00:08.146+01:00 ERROR 43824 --- [main] o.springframework.kafka.core.KafkaAdmin  : Could not create admin

org.apache.kafka.common.KafkaException: Failed to create new KafkaAdminClient
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:553) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.Admin.create(Admin.java:144) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:49) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.KafkaAdmin.createAdmin(KafkaAdmin.java:312) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:192) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:174) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972) ~[spring-beans-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:915) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: 127.0.0.1:9092;
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:505) ~[kafka-clients-3.3.1.jar:na]
	... 14 common frames omitted

2023-03-18T18:00:08.159+01:00  INFO 43824 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:00:08.160+01:00  INFO 43824 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:00:08.162+01:00  INFO 43824 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:00:08.204+01:00  INFO 43824 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [127.0.0.1:9092;]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:00:08.315+01:00  INFO 43824 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:00:08.315+01:00  INFO 43824 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:00:08.318+01:00  INFO 43824 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:00:08.320+01:00  INFO 43824 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask33;-1 unregistered
2023-03-18T18:00:08.320+01:00  WARN 43824 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T18:00:08.321+01:00  INFO 43824 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:00:08.322+01:00  INFO 43824 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T18:00:08.323+01:00  INFO 43824 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T18:00:08.355+01:00  INFO 43824 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T18:00:08.392+01:00 ERROR 43824 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers: 127.0.0.1:9092;
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:59) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T18:00:32.580+01:00  INFO 82112 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 82112 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:00:32.584+01:00  INFO 82112 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:00:33.102+01:00  INFO 82112 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:00:33.121+01:00  INFO 82112 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:00:34.529+01:00  INFO 82112 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:00:34.743+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:00:34.745+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:00:34.745+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158834741
2023-03-18T18:00:35.142+01:00  INFO 82112 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:00:35.147+01:00  INFO 82112 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:00:35.147+01:00  INFO 82112 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:00:35.147+01:00  INFO 82112 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:00:35.154+01:00  INFO 82112 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:00:35.155+01:00  INFO 82112 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:00:35.155+01:00  INFO 82112 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:00:35.185+01:00  INFO 82112 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:00:35.225+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:00:35.225+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:00:35.225+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158835225
2023-03-18T18:00:35.227+01:00  INFO 82112 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:00:35.238+01:00  INFO 82112 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:00:35.248+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:00:35.249+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:00:35.249+01:00  INFO 82112 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158835248
2023-03-18T18:00:35.250+01:00  INFO 82112 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:00:35.261+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:00:35.261+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:00:35.262+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:00:35.263+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:00:35.263+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:00:35.267+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:00:35.267+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:00:35.269+01:00  INFO 82112 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 3.131 seconds (process running for 3.508)
2023-03-18T18:00:35.270+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:00:35.270+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:00:35.303+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-b9de5a38-bb82-4332-be40-3bf6b82a8ac2
2023-03-18T18:00:35.303+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-bc47c637-f545-45e9-bc11-347dbef15afd
2023-03-18T18:00:35.304+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:00:35.304+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:00:35.304+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:00:35.304+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:00:35.314+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=44, memberId='consumer-springkafkatask33;-1-b9de5a38-bb82-4332-be40-3bf6b82a8ac2', protocol='range'}
2023-03-18T18:00:35.318+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=44, memberId='consumer-springkafkatask33;-2-bc47c637-f545-45e9-bc11-347dbef15afd', protocol='range'}
2023-03-18T18:00:35.324+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:00:35.325+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:00:35.328+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Finished assignment for group at generation 44: {consumer-springkafkatask33;-1-b9de5a38-bb82-4332-be40-3bf6b82a8ac2=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask33;-2-bc47c637-f545-45e9-bc11-347dbef15afd=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:00:35.339+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=44, memberId='consumer-springkafkatask33;-2-bc47c637-f545-45e9-bc11-347dbef15afd', protocol='range'}
2023-03-18T18:00:35.339+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=44, memberId='consumer-springkafkatask33;-1-b9de5a38-bb82-4332-be40-3bf6b82a8ac2', protocol='range'}
2023-03-18T18:00:35.340+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:00:35.340+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:00:35.343+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:00:35.343+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:00:35.366+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=17, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:00:35.367+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:00:35.366+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=69, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:00:35.369+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:00:35.369+01:00  INFO 82112 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask2-0]
2023-03-18T18:01:59.158+01:00  INFO 79848 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 79848 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:01:59.161+01:00  INFO 79848 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:01:59.681+01:00  INFO 79848 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:01:59.698+01:00  INFO 79848 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:02:00.788+01:00  INFO 79848 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:02:00.941+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:00.942+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:00.942+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158920940
2023-03-18T18:02:01.219+01:00  INFO 79848 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:02:01.223+01:00  INFO 79848 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:02:01.223+01:00  INFO 79848 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:02:01.224+01:00  INFO 79848 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:02:01.232+01:00  INFO 79848 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:02:01.233+01:00  INFO 79848 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:02:01.234+01:00  INFO 79848 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:02:01.265+01:00  INFO 79848 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:02:01.321+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:01.321+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:01.321+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158921321
2023-03-18T18:02:01.324+01:00  INFO 79848 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:02:01.331+01:00  INFO 79848 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:02:01.341+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:01.342+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:01.343+01:00  INFO 79848 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158921341
2023-03-18T18:02:01.343+01:00  INFO 79848 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:02:01.353+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:02:01.354+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:02:01.357+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:02:01.357+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:02:01.358+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:02:01.358+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:02:01.359+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:02:01.361+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:01.362+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:01.368+01:00  INFO 79848 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.66 seconds (process running for 3.028)
2023-03-18T18:02:01.386+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-3e6bd04b-9ebd-4899-8276-beaf15d69844
2023-03-18T18:02:01.386+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-ddfaa3d5-accd-4b8e-9404-960228c0ebfb
2023-03-18T18:02:01.387+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:02:01.387+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:02:01.387+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:01.387+01:00  INFO 79848 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:13.768+01:00  INFO 81584 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81584 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:02:13.773+01:00  INFO 81584 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:02:14.368+01:00  INFO 81584 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:02:14.390+01:00  INFO 81584 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:02:15.415+01:00  INFO 81584 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:02:15.583+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:15.585+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:15.585+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158935582
2023-03-18T18:02:15.876+01:00  INFO 81584 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:02:15.880+01:00  INFO 81584 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:02:15.885+01:00  INFO 81584 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:02:15.886+01:00  INFO 81584 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:02:15.891+01:00  INFO 81584 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:02:15.892+01:00  INFO 81584 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:02:15.893+01:00  INFO 81584 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:02:15.918+01:00  INFO 81584 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:02:15.958+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:15.958+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:15.958+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158935958
2023-03-18T18:02:15.960+01:00  INFO 81584 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:02:15.968+01:00  INFO 81584 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:02:15.984+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:15.985+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:15.985+01:00  INFO 81584 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158935984
2023-03-18T18:02:15.986+01:00  INFO 81584 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:02:15.993+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:02:15.994+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:02:15.997+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:02:15.999+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:02:16.002+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:16.005+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:02:16.007+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:02:16.009+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:02:16.011+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:16.012+01:00  INFO 81584 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.725 seconds (process running for 3.158)
2023-03-18T18:02:16.025+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-f02baa9a-90f7-4970-8d82-f7acb5500f2a
2023-03-18T18:02:16.026+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-4d603873-7f99-48ae-87d9-af3a7914d607
2023-03-18T18:02:16.026+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:02:16.026+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:02:16.026+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:16.026+01:00  INFO 81584 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:27.282+01:00  INFO 81556 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81556 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:02:27.285+01:00  INFO 81556 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:02:27.820+01:00  INFO 81556 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:02:27.842+01:00  INFO 81556 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:02:29.116+01:00  INFO 81556 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:02:29.286+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:29.287+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:29.287+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158949284
2023-03-18T18:02:29.581+01:00  INFO 81556 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:02:29.585+01:00  INFO 81556 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:02:29.586+01:00  INFO 81556 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:02:29.586+01:00  INFO 81556 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:02:29.590+01:00  INFO 81556 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:02:29.594+01:00  INFO 81556 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:02:29.595+01:00  INFO 81556 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:02:29.622+01:00  INFO 81556 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:02:29.672+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:29.672+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:29.672+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158949671
2023-03-18T18:02:29.674+01:00  INFO 81556 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:02:29.683+01:00  INFO 81556 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:02:29.691+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:02:29.691+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:02:29.691+01:00  INFO 81556 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679158949691
2023-03-18T18:02:29.692+01:00  INFO 81556 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:02:29.704+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:02:29.704+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:02:29.705+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:02:29.706+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:02:29.706+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:02:29.708+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:02:29.708+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:02:29.708+01:00  INFO 81556 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.902 seconds (process running for 3.299)
2023-03-18T18:02:29.711+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:29.711+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:29.729+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-f4f11dc3-3f7a-492e-b3e6-0bf5e12c1034
2023-03-18T18:02:29.729+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-debdcd0f-fe0e-40c9-9608-643655699a99
2023-03-18T18:02:29.730+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:02:29.730+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:02:29.730+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:29.730+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:02:38.521+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=45, memberId='consumer-springkafkatask33;-1-f4f11dc3-3f7a-492e-b3e6-0bf5e12c1034', protocol='range'}
2023-03-18T18:02:38.521+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=45, memberId='consumer-springkafkatask33;-2-debdcd0f-fe0e-40c9-9608-643655699a99', protocol='range'}
2023-03-18T18:03:08.539+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Disconnecting from node 2147483647 due to request timeout.
2023-03-18T18:03:08.542+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight SYNC_GROUP request with correlation id 6 due to node 2147483647 being disconnected (elapsed time since creation: 30017ms, elapsed time since send: 30016ms, request timeout: 30000ms)
2023-03-18T18:03:08.542+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 7 due to node 2147483647 being disconnected (elapsed time since creation: 27005ms, elapsed time since send: 27005ms, request timeout: 30000ms)
2023-03-18T18:03:08.542+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 8 due to node 2147483647 being disconnected (elapsed time since creation: 23995ms, elapsed time since send: 23995ms, request timeout: 30000ms)
2023-03-18T18:03:08.542+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 9 due to node 2147483647 being disconnected (elapsed time since creation: 20982ms, elapsed time since send: 20982ms, request timeout: 30000ms)
2023-03-18T18:03:08.543+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 10 due to node 2147483647 being disconnected (elapsed time since creation: 17979ms, elapsed time since send: 17979ms, request timeout: 30000ms)
2023-03-18T18:03:08.543+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 11 due to node 2147483647 being disconnected (elapsed time since creation: 14972ms, elapsed time since send: 14972ms, request timeout: 30000ms)
2023-03-18T18:03:08.543+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 12 due to node 2147483647 being disconnected (elapsed time since creation: 11958ms, elapsed time since send: 11958ms, request timeout: 30000ms)
2023-03-18T18:03:08.543+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 13 due to node 2147483647 being disconnected (elapsed time since creation: 8944ms, elapsed time since send: 8944ms, request timeout: 30000ms)
2023-03-18T18:03:08.543+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 14 due to node 2147483647 being disconnected (elapsed time since creation: 5932ms, elapsed time since send: 5932ms, request timeout: 30000ms)
2023-03-18T18:03:08.543+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 15 due to node 2147483647 being disconnected (elapsed time since creation: 2929ms, elapsed time since send: 2929ms, request timeout: 30000ms)
2023-03-18T18:03:08.553+01:00  INFO 81556 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null. isDisconnected: true. Rediscovery will be attempted.
2023-03-18T18:03:08.555+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Disconnecting from node 2147483647 due to request timeout.
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight SYNC_GROUP request with correlation id 6 due to node 2147483647 being disconnected (elapsed time since creation: 30033ms, elapsed time since send: 30032ms, request timeout: 30000ms)
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 7 due to node 2147483647 being disconnected (elapsed time since creation: 27021ms, elapsed time since send: 27021ms, request timeout: 30000ms)
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 8 due to node 2147483647 being disconnected (elapsed time since creation: 24011ms, elapsed time since send: 24011ms, request timeout: 30000ms)
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 9 due to node 2147483647 being disconnected (elapsed time since creation: 20998ms, elapsed time since send: 20998ms, request timeout: 30000ms)
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 10 due to node 2147483647 being disconnected (elapsed time since creation: 17995ms, elapsed time since send: 17995ms, request timeout: 30000ms)
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 11 due to node 2147483647 being disconnected (elapsed time since creation: 14988ms, elapsed time since send: 14988ms, request timeout: 30000ms)
2023-03-18T18:03:08.556+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 12 due to node 2147483647 being disconnected (elapsed time since creation: 11974ms, elapsed time since send: 11974ms, request timeout: 30000ms)
2023-03-18T18:03:08.557+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 13 due to node 2147483647 being disconnected (elapsed time since creation: 8960ms, elapsed time since send: 8960ms, request timeout: 30000ms)
2023-03-18T18:03:08.557+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 14 due to node 2147483647 being disconnected (elapsed time since creation: 5948ms, elapsed time since send: 5948ms, request timeout: 30000ms)
2023-03-18T18:03:08.557+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cancelled in-flight HEARTBEAT request with correlation id 15 due to node 2147483647 being disconnected (elapsed time since creation: 2945ms, elapsed time since send: 2945ms, request timeout: 30000ms)
2023-03-18T18:03:08.559+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:08.560+01:00  INFO 81556 --- [kafka-coordinator-heartbeat-thread | springkafkatask33;] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null. isDisconnected: true. Rediscovery will be attempted.
2023-03-18T18:03:08.560+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2023-03-18T18:03:08.560+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Requesting disconnect from last known coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:08.563+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:08.564+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Group coordinator host.docker.internal:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2023-03-18T18:03:08.564+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Requesting disconnect from last known coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:08.665+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:08.667+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'null' (DisconnectException)
2023-03-18T18:03:08.667+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:08.670+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=45, memberId='consumer-springkafkatask33;-2-debdcd0f-fe0e-40c9-9608-643655699a99', protocol='range'}
2023-03-18T18:03:08.680+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:08.682+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'null' (DisconnectException)
2023-03-18T18:03:08.682+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:08.684+01:00  INFO 81556 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=45, memberId='consumer-springkafkatask33;-1-f4f11dc3-3f7a-492e-b3e6-0bf5e12c1034', protocol='range'}
2023-03-18T18:03:23.870+01:00  INFO 79196 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 79196 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:03:23.873+01:00  INFO 79196 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:03:24.427+01:00  INFO 79196 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:03:24.469+01:00  INFO 79196 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:03:25.649+01:00  INFO 79196 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:03:25.801+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:03:25.802+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:03:25.802+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159005800
2023-03-18T18:03:26.089+01:00  INFO 79196 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:03:26.092+01:00  INFO 79196 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:03:26.093+01:00  INFO 79196 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:03:26.093+01:00  INFO 79196 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:03:26.097+01:00  INFO 79196 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:03:26.098+01:00  INFO 79196 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:03:26.099+01:00  INFO 79196 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:03:26.129+01:00  INFO 79196 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:03:26.194+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:03:26.194+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:03:26.194+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159006193
2023-03-18T18:03:26.197+01:00  INFO 79196 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:03:26.207+01:00  INFO 79196 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:03:26.215+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:03:26.215+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:03:26.216+01:00  INFO 79196 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159006215
2023-03-18T18:03:26.216+01:00  INFO 79196 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:03:26.230+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:03:26.230+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:03:26.231+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:03:26.231+01:00  INFO 79196 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.863 seconds (process running for 3.264)
2023-03-18T18:03:26.232+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:03:26.232+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:03:26.234+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:26.234+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:26.237+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:26.237+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:26.268+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-8f3da1c7-578b-462a-8bb6-0f778b98eea3
2023-03-18T18:03:26.269+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:03:26.269+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-0dda2aeb-3b91-47c3-be63-d5d0662aaac0
2023-03-18T18:03:26.269+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:26.270+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:03:26.270+01:00  INFO 79196 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:43.510+01:00  INFO 79780 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 79780 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:03:43.513+01:00  INFO 79780 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:03:44.032+01:00  INFO 79780 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:03:44.065+01:00  INFO 79780 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:03:45.178+01:00  INFO 79780 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:03:45.335+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:03:45.335+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:03:45.335+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159025334
2023-03-18T18:03:45.593+01:00  INFO 79780 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:03:45.601+01:00  INFO 79780 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:03:45.601+01:00  INFO 79780 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:03:45.602+01:00  INFO 79780 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:03:45.606+01:00  INFO 79780 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:03:45.607+01:00  INFO 79780 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:03:45.608+01:00  INFO 79780 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:03:45.631+01:00  INFO 79780 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:03:45.671+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:03:45.671+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:03:45.671+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159025671
2023-03-18T18:03:45.673+01:00  INFO 79780 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:03:45.681+01:00  INFO 79780 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:03:45.687+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:03:45.687+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:03:45.688+01:00  INFO 79780 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159025687
2023-03-18T18:03:45.688+01:00  INFO 79780 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:03:45.697+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:03:45.697+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:03:45.698+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:03:45.700+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:03:45.700+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:03:45.701+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:45.701+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:03:45.704+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:45.704+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:45.705+01:00  INFO 79780 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.728 seconds (process running for 3.127)
2023-03-18T18:03:45.728+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-c17fb632-8d56-4204-a5a4-1f3cd44f1fd8
2023-03-18T18:03:45.728+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-ff36a784-402f-4260-a1c9-d620bfd266b8
2023-03-18T18:03:45.729+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:03:45.729+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:03:45.729+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:03:45.729+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:04:08.545+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=46, memberId='consumer-springkafkatask33;-2-ff36a784-402f-4260-a1c9-d620bfd266b8', protocol='range'}
2023-03-18T18:04:08.546+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=46, memberId='consumer-springkafkatask33;-1-c17fb632-8d56-4204-a5a4-1f3cd44f1fd8', protocol='range'}
2023-03-18T18:04:08.552+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:04:08.556+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Finished assignment for group at generation 46: {consumer-springkafkatask33;-2-ff36a784-402f-4260-a1c9-d620bfd266b8=Assignment(partitions=[topicTask1-1]), consumer-springkafkatask33;-1-0dda2aeb-3b91-47c3-be63-d5d0662aaac0=Assignment(partitions=[topicTask1-0]), consumer-springkafkatask33;-1-c17fb632-8d56-4204-a5a4-1f3cd44f1fd8=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask33;-2-8f3da1c7-578b-462a-8bb6-0f778b98eea3=Assignment(partitions=[])}
2023-03-18T18:04:08.563+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=46, memberId='consumer-springkafkatask33;-1-c17fb632-8d56-4204-a5a4-1f3cd44f1fd8', protocol='range'}
2023-03-18T18:04:08.563+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=46, memberId='consumer-springkafkatask33;-2-ff36a784-402f-4260-a1c9-d620bfd266b8', protocol='range'}
2023-03-18T18:04:08.563+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask1-1])
2023-03-18T18:04:08.563+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:04:08.567+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask1-1
2023-03-18T18:04:08.567+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:04:08.580+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=69, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:04:08.580+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:04:08.582+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask1-1]
2023-03-18T18:04:08.582+01:00  INFO 79780 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask2-0]
2023-03-18T18:04:46.782+01:00  INFO 76500 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 76500 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:04:46.785+01:00  INFO 76500 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:04:47.258+01:00  INFO 76500 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:04:47.277+01:00  INFO 76500 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:04:48.439+01:00  INFO 76500 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:04:48.605+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:04:48.607+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:04:48.607+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159088604
2023-03-18T18:04:48.870+01:00  INFO 76500 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:04:48.874+01:00  INFO 76500 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:04:48.875+01:00  INFO 76500 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:04:48.875+01:00  INFO 76500 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:04:48.879+01:00  INFO 76500 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:04:48.880+01:00  INFO 76500 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:04:48.880+01:00  INFO 76500 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:04:48.907+01:00  INFO 76500 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:04:48.950+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:04:48.950+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:04:48.951+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159088950
2023-03-18T18:04:48.954+01:00  INFO 76500 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:04:48.962+01:00  INFO 76500 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:04:48.969+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:04:48.970+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:04:48.970+01:00  INFO 76500 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159088969
2023-03-18T18:04:48.970+01:00  INFO 76500 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:04:48.981+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:04:48.981+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:04:48.982+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:04:48.983+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:04:48.983+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:04:48.986+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:04:48.986+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:04:48.990+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:04:48.990+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:04:48.993+01:00  INFO 76500 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.668 seconds (process running for 3.036)
2023-03-18T18:04:49.012+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-385cf15a-9249-46bf-8a4d-dfd5a91baee5
2023-03-18T18:04:49.012+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-ac4ee2ca-277a-4248-ad84-266b00c2c135
2023-03-18T18:04:49.012+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:04:49.012+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:04:49.013+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:04:49.013+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:05:23.637+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=47, memberId='consumer-springkafkatask33;-1-385cf15a-9249-46bf-8a4d-dfd5a91baee5', protocol='range'}
2023-03-18T18:05:23.637+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully joined group with generation Generation{generationId=47, memberId='consumer-springkafkatask33;-2-ac4ee2ca-277a-4248-ad84-266b00c2c135', protocol='range'}
2023-03-18T18:05:23.643+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:05:23.645+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Finished assignment for group at generation 47: {consumer-springkafkatask33;-1-385cf15a-9249-46bf-8a4d-dfd5a91baee5=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask33;-2-ac4ee2ca-277a-4248-ad84-266b00c2c135=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:05:23.650+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=47, memberId='consumer-springkafkatask33;-2-ac4ee2ca-277a-4248-ad84-266b00c2c135', protocol='range'}
2023-03-18T18:05:23.650+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Successfully synced group in generation Generation{generationId=47, memberId='consumer-springkafkatask33;-1-385cf15a-9249-46bf-8a4d-dfd5a91baee5', protocol='range'}
2023-03-18T18:05:23.651+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:05:23.651+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:05:23.653+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:05:23.653+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:05:23.664+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=69, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:05:23.664+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=17, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:05:23.665+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:05:23.665+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask2-0]
2023-03-18T18:05:23.665+01:00  INFO 76500 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask33;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:05:55.812+01:00  INFO 82860 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 82860 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:05:55.816+01:00  INFO 82860 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:05:56.421+01:00  INFO 82860 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:05:56.441+01:00  INFO 82860 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:05:57.770+01:00  INFO 82860 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:05:58.001+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:05:58.003+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:05:58.003+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159157999
2023-03-18T18:05:58.019+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:05:58.022+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:05:58.127+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:05:58.127+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:05:58.235+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:05:58.235+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:05:58.455+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:05:58.456+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:05:58.893+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:05:58.893+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:05:59.770+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:05:59.770+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:00.755+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:00.755+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:01.959+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:01.959+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:03.049+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:03.050+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:03.920+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:03.920+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:04.903+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:04.903+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:05.887+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:05.887+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:07.087+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:07.088+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:08.073+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:08.073+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:09.054+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:09.054+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:10.254+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:10.255+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:11.239+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:11.239+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:12.437+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:12.437+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:13.421+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:13.421+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:14.309+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:14.310+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:15.504+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:15.504+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:16.374+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:16.374+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:17.566+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:17.566+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:18.771+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:18.772+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:19.868+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Node -1 disconnected.
2023-03-18T18:06:19.869+01:00  WARN 82860 --- [kafka-admin-client-thread | adminclient-1] org.apache.kafka.clients.NetworkClient   : [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2023-03-18T18:06:21.431+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:06:21.435+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:06:21.436+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:06:21.436+01:00  INFO 82860 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:06:21.442+01:00  INFO 82860 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:06:21.443+01:00  INFO 82860 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:06:21.444+01:00  INFO 82860 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:06:21.470+01:00  INFO 82860 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:06:21.508+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:06:21.509+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:06:21.509+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159181508
2023-03-18T18:06:21.510+01:00  INFO 82860 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Subscribed to topic(s): topicTask2
2023-03-18T18:06:21.517+01:00  INFO 82860 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:06:21.524+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:06:21.525+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:06:21.525+01:00  INFO 82860 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159181524
2023-03-18T18:06:21.525+01:00  INFO 82860 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Subscribed to topic(s): topicTask1
2023-03-18T18:06:21.537+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:06:21.537+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:06:21.538+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:06:21.539+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:06:21.540+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:06:21.545+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:06:21.545+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:06:21.546+01:00  INFO 82860 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 26.242 seconds (process running for 26.691)
2023-03-18T18:06:21.549+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:06:21.550+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:06:21.579+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-2-9fa5c895-82a3-43af-aaf4-e4138409c62c
2023-03-18T18:06:21.579+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33;-1-8ea67ddd-0320-4301-b7c4-5b895a5ea0fb
2023-03-18T18:06:21.580+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:06:21.580+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:06:21.580+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-2, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:06:21.580+01:00  INFO 82860 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33;-1, groupId=springkafkatask33;] (Re-)joining group
2023-03-18T18:07:12.561+01:00  INFO 81192 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81192 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:07:12.565+01:00  INFO 81192 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:07:13.110+01:00  INFO 81192 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:07:13.131+01:00  INFO 81192 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:07:14.429+01:00  INFO 81192 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:07:14.593+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:07:14.594+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:07:14.594+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159234591
2023-03-18T18:07:14.872+01:00  INFO 81192 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:07:14.876+01:00  INFO 81192 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:07:14.876+01:00  INFO 81192 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:07:14.876+01:00  INFO 81192 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:07:14.880+01:00  INFO 81192 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:07:14.881+01:00  INFO 81192 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:07:14.881+01:00  INFO 81192 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:07:14.908+01:00  INFO 81192 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:07:14.946+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:07:14.947+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:07:14.947+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159234946
2023-03-18T18:07:14.951+01:00  INFO 81192 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Subscribed to topic(s): topicTask1
2023-03-18T18:07:14.962+01:00  INFO 81192 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:07:14.972+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:07:14.972+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:07:14.973+01:00  INFO 81192 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159234972
2023-03-18T18:07:14.974+01:00  INFO 81192 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Subscribed to topic(s): topicTask2
2023-03-18T18:07:14.989+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:07:14.989+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:07:14.990+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:07:14.992+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:07:14.992+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:07:14.994+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:07:14.993+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:07:14.998+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:07:14.998+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:07:15.000+01:00  INFO 81192 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.928 seconds (process running for 3.337)
2023-03-18T18:07:15.024+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-1-22490a04-d3a4-4898-8c89-a0e3a8878b96
2023-03-18T18:07:15.024+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-2-c5faef84-53af-4a66-9ada-7bb29d0ee285
2023-03-18T18:07:15.025+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:07:15.025+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:07:15.025+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:07:15.025+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:07:15.030+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask333;-1-22490a04-d3a4-4898-8c89-a0e3a8878b96', protocol='range'}
2023-03-18T18:07:15.030+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask333;-2-c5faef84-53af-4a66-9ada-7bb29d0ee285', protocol='range'}
2023-03-18T18:07:15.036+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:07:15.037+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:07:15.039+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Finished assignment for group at generation 1: {consumer-springkafkatask333;-1-22490a04-d3a4-4898-8c89-a0e3a8878b96=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask333;-2-c5faef84-53af-4a66-9ada-7bb29d0ee285=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:07:15.111+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask333;-2-c5faef84-53af-4a66-9ada-7bb29d0ee285', protocol='range'}
2023-03-18T18:07:15.111+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask333;-1-22490a04-d3a4-4898-8c89-a0e3a8878b96', protocol='range'}
2023-03-18T18:07:15.112+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:07:15.112+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:07:15.116+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:07:15.116+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:07:15.134+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Found no committed offset for partition topicTask1-0
2023-03-18T18:07:15.134+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Found no committed offset for partition topicTask2-0
2023-03-18T18:07:15.134+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Found no committed offset for partition topicTask1-1
2023-03-18T18:07:15.172+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:07:15.172+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:07:15.173+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:07:15.174+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask2-0]
2023-03-18T18:07:15.174+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:07:15.257+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:07:15.257+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.258+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.258+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.259+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.259+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.259+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.259+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.260+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.260+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.260+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.260+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.260+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.261+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.261+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.261+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.262+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.262+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.263+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.263+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.263+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.263+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.264+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.264+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.264+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.264+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.265+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.265+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.265+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.265+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.266+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.266+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.266+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.266+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.266+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.266+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.267+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.267+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.267+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.267+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.268+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.269+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.269+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.269+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.269+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.269+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.270+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.270+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.270+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.270+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.270+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.271+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.271+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.271+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.271+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.271+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.271+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.272+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.272+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.272+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.272+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.272+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.272+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:15.274+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.274+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:07:15.275+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.275+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:07:15.275+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.275+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:07:15.276+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.276+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:07:15.276+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.276+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:07:15.276+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.277+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:07:15.277+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.277+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:07:15.277+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.278+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:07:15.278+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.279+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:07:15.279+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.279+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:07:15.279+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.279+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:15.279+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.280+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:07:15.280+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:15.280+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:07:15.317+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:15.318+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:07:15.318+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:07:15.318+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:07:15.319+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:15.320+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:07:15.320+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:15.324+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:07:15.325+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:07:15.325+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:07:15.325+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:15.331+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:16.384+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.tryToSendToDatabase(DatabaseMessageHandler.java:93) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.handleMessage(DatabaseMessageHandler.java:85) ~[classes/:na]
	at com.springkafka.task.SpringKafkaTaskApplication.listen(SpringKafkaTaskApplication.java:107) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2859) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2839) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$56(KafkaMessageListenerContainer.java:2762) ~[spring-kafka-3.0.1.jar:3.0.1]
	at io.micrometer.observation.Observation.observe(Observation.java:559) ~[micrometer-observation-1.10.2.jar:1.10.2]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2760) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2612) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2498) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2144) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1499) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1463) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1338) ~[spring-kafka-3.0.1.jar:3.0.1]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 45 common frames omitted

2023-03-18T18:07:16.389+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.390+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Fail to send message to database Failed to obtain JDBC Connection
2023-03-18T18:07:16.397+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:07:16.408+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:07:16.420+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:07:16.420+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:07:16.420+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159236419
2023-03-18T18:07:16.426+01:00  INFO 81192 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:07:16.427+01:00  INFO 81192 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:07:16.437+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:07:16.438+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.438+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:07:16.439+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:07:16.439+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:07:16.440+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.440+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:07:16.440+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.440+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:07:16.440+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:07:16.440+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:07:16.441+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.441+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:07:16.441+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.442+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:07:16.442+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.443+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:07:16.443+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.443+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:07:16.444+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.444+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:07:16.444+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.444+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:07:16.445+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.445+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:07:16.445+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.446+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:07:16.446+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.447+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:07:16.447+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.447+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:07:16.448+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.448+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:07:16.448+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.449+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:07:16.453+01:00  INFO 81192 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2000 with epoch 0
2023-03-18T18:07:16.458+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.458+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:07:16.459+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.459+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:07:16.460+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.460+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:07:16.461+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.461+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:07:16.462+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.462+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:07:16.462+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.462+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:07:16.463+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.463+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:07:16.463+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.463+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:07:16.464+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.464+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:07:16.464+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.464+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:07:16.465+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.465+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:07:16.466+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.466+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:07:16.466+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:07:16.466+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:07:16.467+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.467+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:07:16.467+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:07:16.467+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:07:16.468+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.468+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:07:16.469+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:07:16.469+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:07:16.470+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.471+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:07:16.471+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:07:16.471+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:07:16.472+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.472+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:07:16.472+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:07:16.472+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:07:16.474+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.474+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:07:16.474+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:07:16.474+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.475+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:07:16.475+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.475+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:07:16.476+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.476+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:07:16.479+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.480+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:07:16.482+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.482+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:07:16.482+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:07:16.483+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.483+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:07:16.483+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:07:16.483+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:07:16.484+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.484+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:07:16.484+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.484+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:07:16.484+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.485+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:07:16.485+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.485+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:07:16.486+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.486+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:07:16.486+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:07:16.487+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.488+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:07:16.488+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:07:16.488+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:07:16.489+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.489+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:07:16.489+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.489+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:07:16.490+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.490+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:07:16.490+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.490+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.491+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.491+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:07:16.491+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:07:16.493+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.495+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:07:16.495+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:07:16.495+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:16.496+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.496+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:07:16.496+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.496+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:07:16.497+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.497+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:07:16.497+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:07:16.498+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:07:16.498+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.499+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:07:16.499+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.499+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:07:16.499+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:07:16.499+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:07:16.499+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.500+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:16.500+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.500+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:07:16.501+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.501+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:07:16.502+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:07:16.503+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:07:16.504+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.504+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:07:16.504+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.504+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:07:16.505+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:07:16.505+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:07:16.505+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.505+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:16.505+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.505+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:07:16.506+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.506+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:07:16.507+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:07:16.507+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:07:16.508+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.508+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:07:16.509+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.509+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.509+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:07:16.509+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.510+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.510+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.510+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:07:16.512+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.512+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:07:16.512+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.514+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:07:16.514+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.514+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:07:16.515+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.516+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:07:16.516+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.516+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.517+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:07:16.517+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.517+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.518+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:07:16.519+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.519+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.519+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:07:16.519+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.520+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:07:16.521+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:07:16.521+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.522+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:07:16.522+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.522+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.522+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:07:16.522+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.523+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.523+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.523+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:07:16.524+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.525+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:07:16.525+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.526+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:07:16.527+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:07:16.528+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.529+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.529+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:07:16.529+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.529+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.529+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:07:16.529+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.530+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.530+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:07:16.531+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.531+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:07:16.532+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.532+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:07:16.532+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:07:16.533+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.533+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:07:16.534+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:07:16.534+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:07:16.535+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.535+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:07:16.535+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.535+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.535+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:07:16.536+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:07:16.537+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.537+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:07:16.537+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.537+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.538+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:07:16.538+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:07:16.538+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.538+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:16.539+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.539+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:07:16.540+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.540+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:07:16.541+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:07:16.541+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.542+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:07:16.542+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:07:16.542+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:07:16.543+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.543+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.543+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:07:16.544+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.544+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:07:16.544+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:07:16.544+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:07:16.544+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.544+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:07:16.546+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.546+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:07:16.546+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:07:16.546+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:07:16.547+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.547+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:07:16.548+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:07:16.548+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:07:16.549+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.549+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:07:16.549+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.549+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:07:16.549+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:07:16.550+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:07:16.550+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.550+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.550+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:16.550+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.551+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:07:16.554+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.554+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:07:16.554+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.555+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:07:16.555+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.555+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:07:16.556+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.557+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:07:16.557+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.557+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:07:16.557+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:07:16.557+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:07:16.557+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.558+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:07:16.558+01:00 ERROR 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:07:16.559+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:07:16.560+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.560+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:07:16.560+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:07:16.560+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:07:16.560+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:07:16.561+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-18T18:07:16.563+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:16.567+01:00  INFO 81192 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:07:18.929+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:18.929+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:19.954+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:19.955+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:23.932+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:23.932+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:24.945+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:24.946+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:28.931+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:28.931+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:29.955+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:29.955+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:33.934+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:33.934+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:34.945+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:34.946+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:38.930+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:38.930+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:39.943+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:39.944+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:43.937+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:43.938+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:44.954+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:44.955+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:48.930+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:48.930+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:49.941+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:49.942+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:53.940+01:00  INFO 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-18T18:07:53.941+01:00  INFO 81192 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-18T18:07:54.950+01:00 ERROR 81192 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:07:54.952+01:00 ERROR 81192 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB

org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:60) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.lambda$scheduleSendingMessagesFromCache$0(DatabaseMessageHandler.java:114) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-18T18:12:40.788+01:00  INFO 66432 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 66432 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:12:40.791+01:00  INFO 66432 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:12:41.374+01:00  INFO 66432 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:12:41.396+01:00  INFO 66432 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:12:42.606+01:00  INFO 66432 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:12:42.803+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:12:42.805+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:12:42.805+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159562802
2023-03-18T18:12:43.185+01:00  INFO 66432 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:12:43.190+01:00  INFO 66432 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:12:43.190+01:00  INFO 66432 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:12:43.190+01:00  INFO 66432 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:12:43.196+01:00  INFO 66432 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:12:43.197+01:00  INFO 66432 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:12:43.198+01:00  INFO 66432 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:12:43.234+01:00  INFO 66432 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:12:43.288+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:12:43.289+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:12:43.289+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159563288
2023-03-18T18:12:43.291+01:00  INFO 66432 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Subscribed to topic(s): topicTask2
2023-03-18T18:12:43.300+01:00  INFO 66432 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:12:43.308+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:12:43.309+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:12:43.310+01:00  INFO 66432 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159563308
2023-03-18T18:12:43.312+01:00  INFO 66432 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Subscribed to topic(s): topicTask1
2023-03-18T18:12:43.322+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:12:43.324+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:12:43.324+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:12:43.324+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:12:43.325+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:12:43.329+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:12:43.329+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:12:43.333+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:12:43.333+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:12:43.339+01:00  INFO 66432 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 3.067 seconds (process running for 3.459)
2023-03-18T18:12:43.382+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e
2023-03-18T18:12:43.383+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:12:43.383+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:12:43.389+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-2-6d17dc54-d74c-4b58-a097-d49999de0929
2023-03-18T18:12:43.390+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:12:43.390+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:12:43.395+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=3, memberId='consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e', protocol='range'}
2023-03-18T18:12:43.398+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Finished assignment for group at generation 3: {consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:12:43.407+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=3, memberId='consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e', protocol='range'}
2023-03-18T18:12:43.408+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting generation due to: encountered REBALANCE_IN_PROGRESS from SYNC_GROUP response
2023-03-18T18:12:43.408+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: encountered REBALANCE_IN_PROGRESS from SYNC_GROUP response
2023-03-18T18:12:43.409+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2023-03-18T18:12:43.409+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:12:43.413+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=4, memberId='consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e', protocol='range'}
2023-03-18T18:12:43.415+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=4, memberId='consumer-springkafkatask333;-2-6d17dc54-d74c-4b58-a097-d49999de0929', protocol='range'}
2023-03-18T18:12:43.419+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:12:43.420+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:12:43.420+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Finished assignment for group at generation 4: {consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask333;-2-6d17dc54-d74c-4b58-a097-d49999de0929=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:12:43.426+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=4, memberId='consumer-springkafkatask333;-1-7941a391-ae1e-47cc-a171-ba7b80b1681e', protocol='range'}
2023-03-18T18:12:43.427+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:12:43.426+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=4, memberId='consumer-springkafkatask333;-2-6d17dc54-d74c-4b58-a097-d49999de0929', protocol='range'}
2023-03-18T18:12:43.428+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:12:43.431+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:12:43.432+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:12:43.475+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=17, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:12:43.475+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=82, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:12:43.475+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:12:43.478+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask2-0]
2023-03-18T18:12:43.479+01:00  INFO 66432 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:16:42.910+01:00  INFO 81608 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81608 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:16:42.913+01:00  INFO 81608 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:16:43.593+01:00  INFO 81608 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:16:43.612+01:00  INFO 81608 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:16:45.075+01:00  INFO 81608 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:16:45.286+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:16:45.287+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:16:45.288+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159805284
2023-03-18T18:16:45.566+01:00  INFO 81608 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:16:45.575+01:00  INFO 81608 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:16:45.575+01:00  INFO 81608 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:16:45.575+01:00  INFO 81608 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:16:45.580+01:00  INFO 81608 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:16:45.581+01:00  INFO 81608 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:16:45.582+01:00  INFO 81608 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:16:45.605+01:00  INFO 81608 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:16:45.642+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:16:45.643+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:16:45.643+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159805642
2023-03-18T18:16:45.645+01:00  INFO 81608 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Subscribed to topic(s): topicTask1
2023-03-18T18:16:45.653+01:00  INFO 81608 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:16:45.661+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:16:45.661+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:16:45.661+01:00  INFO 81608 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159805661
2023-03-18T18:16:45.662+01:00  INFO 81608 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Subscribed to topic(s): topicTask2
2023-03-18T18:16:45.671+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:16:45.672+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:16:45.672+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:16:45.673+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:16:45.673+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:16:45.675+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:16:45.675+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:16:45.680+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:16:45.680+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:16:45.683+01:00  INFO 81608 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 3.285 seconds (process running for 3.732)
2023-03-18T18:16:45.701+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-1-e40dc27a-34f3-430a-8537-bbd84927bafa
2023-03-18T18:16:45.702+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:16:45.702+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-2-5418f620-cfc1-4c9f-b50a-a2b9d3e3566d
2023-03-18T18:16:45.703+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:16:45.703+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:16:45.704+01:00  INFO 81608 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:17:00.699+01:00  INFO 81560 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81560 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:17:00.701+01:00  INFO 81560 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:17:01.239+01:00  INFO 81560 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:17:01.262+01:00  INFO 81560 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:17:02.447+01:00  INFO 81560 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:17:02.608+01:00  INFO 81560 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:17:02.609+01:00  INFO 81560 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:17:02.609+01:00  INFO 81560 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159822607
2023-03-18T18:17:02.926+01:00  INFO 81560 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:17:02.929+01:00  INFO 81560 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:17:02.930+01:00  INFO 81560 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:17:02.930+01:00  INFO 81560 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:17:02.934+01:00  INFO 81560 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:17:02.934+01:00  INFO 81560 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:17:02.935+01:00  INFO 81560 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:17:02.968+01:00  INFO 81560 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:98092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:17:02.980+01:00  INFO 81560 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:17:02.981+01:00  INFO 81560 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:17:02.981+01:00  INFO 81560 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:17:02.981+01:00  INFO 81560 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask333;-1 unregistered
2023-03-18T18:17:02.981+01:00  WARN 81560 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T18:17:02.982+01:00  INFO 81560 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:17:02.982+01:00  INFO 81560 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T18:17:02.983+01:00  INFO 81560 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T18:17:02.994+01:00  INFO 81560 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T18:17:03.018+01:00 ERROR 81560 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid port in bootstrap.servers: localhost:98092
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:82) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T18:19:03.878+01:00  INFO 80748 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 80748 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:19:03.881+01:00  INFO 80748 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:19:04.453+01:00  INFO 80748 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:19:04.477+01:00  INFO 80748 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:19:05.710+01:00  INFO 80748 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:19:05.878+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:19:05.880+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:19:05.880+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159945877
2023-03-18T18:19:06.185+01:00  INFO 80748 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:19:06.189+01:00  INFO 80748 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:19:06.189+01:00  INFO 80748 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:19:06.189+01:00  INFO 80748 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:19:06.193+01:00  INFO 80748 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:19:06.194+01:00  INFO 80748 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:19:06.195+01:00  INFO 80748 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:19:06.226+01:00  INFO 80748 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:19:06.277+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:19:06.278+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:19:06.278+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159946277
2023-03-18T18:19:06.279+01:00  INFO 80748 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Subscribed to topic(s): topicTask1
2023-03-18T18:19:06.287+01:00  INFO 80748 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:19:06.294+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:19:06.295+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:19:06.295+01:00  INFO 80748 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159946294
2023-03-18T18:19:06.296+01:00  INFO 80748 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Subscribed to topic(s): topicTask2
2023-03-18T18:19:06.307+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:19:06.307+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:19:06.308+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:19:06.309+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:19:06.309+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:19:06.311+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:19:06.311+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:19:06.312+01:00  INFO 80748 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.918 seconds (process running for 3.376)
2023-03-18T18:19:06.314+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:19:06.314+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:19:06.333+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-2-86139783-a792-48d0-beed-db30c32911c5
2023-03-18T18:19:06.333+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-1-8d4daab0-1f77-4f17-a6ec-99a9d933a33c
2023-03-18T18:19:06.334+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:19:06.334+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:19:06.334+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:19:06.334+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:19:06.338+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=7, memberId='consumer-springkafkatask333;-1-8d4daab0-1f77-4f17-a6ec-99a9d933a33c', protocol='range'}
2023-03-18T18:19:06.338+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=7, memberId='consumer-springkafkatask333;-2-86139783-a792-48d0-beed-db30c32911c5', protocol='range'}
2023-03-18T18:19:06.351+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:19:06.352+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:19:06.355+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Finished assignment for group at generation 7: {consumer-springkafkatask333;-1-8d4daab0-1f77-4f17-a6ec-99a9d933a33c=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask333;-2-86139783-a792-48d0-beed-db30c32911c5=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:19:06.363+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=7, memberId='consumer-springkafkatask333;-1-8d4daab0-1f77-4f17-a6ec-99a9d933a33c', protocol='range'}
2023-03-18T18:19:06.364+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=7, memberId='consumer-springkafkatask333;-2-86139783-a792-48d0-beed-db30c32911c5', protocol='range'}
2023-03-18T18:19:06.364+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:19:06.364+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:19:06.370+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:19:06.370+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:19:06.388+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=82, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:19:06.388+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=17, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:19:06.389+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:19:06.391+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:19:06.391+01:00  INFO 80748 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask2-0]
2023-03-18T18:19:20.909+01:00  INFO 78724 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 78724 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:19:20.911+01:00  INFO 78724 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:19:21.386+01:00  INFO 78724 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:19:21.409+01:00  INFO 78724 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:19:22.558+01:00  INFO 78724 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:19:22.733+01:00  INFO 78724 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:19:22.735+01:00  INFO 78724 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:19:22.735+01:00  INFO 78724 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679159962732
2023-03-18T18:19:23.006+01:00  INFO 78724 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:19:23.011+01:00  INFO 78724 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:19:23.011+01:00  INFO 78724 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:19:23.012+01:00  INFO 78724 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:19:23.016+01:00  INFO 78724 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:19:23.016+01:00  INFO 78724 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:19:23.017+01:00  INFO 78724 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:19:23.047+01:00  INFO 78724 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:89092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:19:23.061+01:00  INFO 78724 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:19:23.061+01:00  INFO 78724 --- [main] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:19:23.061+01:00  INFO 78724 --- [main] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:19:23.062+01:00  INFO 78724 --- [main] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-springkafkatask333;-1 unregistered
2023-03-18T18:19:23.063+01:00  WARN 78724 --- [main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
2023-03-18T18:19:23.063+01:00  INFO 78724 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:19:23.064+01:00  INFO 78724 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 0 subscriber(s).
2023-03-18T18:19:23.065+01:00  INFO 78724 --- [main] o.s.i.endpoint.EventDrivenConsumer       : stopped bean '_org.springframework.integration.errorLogger'
2023-03-18T18:19:23.083+01:00  INFO 78724 --- [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-03-18T18:19:23.114+01:00 ERROR 78724 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-6.0.3.jar:6.0.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:932) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:587) ~[spring-context-6.0.3.jar:6.0.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:432) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302) ~[spring-boot-3.0.1.jar:3.0.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) ~[spring-boot-3.0.1.jar:3.0.1]
	at com.springkafka.task.SpringKafkaTaskApplication.main(SpringKafkaTaskApplication.java:41) ~[classes/:na]
Caused by: org.apache.kafka.common.KafkaException: Failed to construct kafka consumer
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:830) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:666) ~[kafka-clients-3.3.1.jar:na]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createRawConsumer(DefaultKafkaConsumerFactory.java:483) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:451) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumerWithAdjustedProperties(DefaultKafkaConsumerFactory.java:427) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createKafkaConsumer(DefaultKafkaConsumerFactory.java:394) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.core.DefaultKafkaConsumerFactory.createConsumer(DefaultKafkaConsumerFactory.java:371) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.<init>(KafkaMessageListenerContainer.java:846) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer.doStart(KafkaMessageListenerContainer.java:379) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.ConcurrentMessageListenerContainer.doStart(ConcurrentMessageListenerContainer.java:226) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.AbstractMessageListenerContainer.start(AbstractMessageListenerContainer.java:531) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.startIfNecessary(KafkaListenerEndpointRegistry.java:383) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.config.KafkaListenerEndpointRegistry.start(KafkaListenerEndpointRegistry.java:328) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-6.0.3.jar:6.0.3]
	... 12 common frames omitted
Caused by: org.apache.kafka.common.config.ConfigException: Invalid port in bootstrap.servers: localhost:89092
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:82) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:48) ~[kafka-clients-3.3.1.jar:na]
	at org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:732) ~[kafka-clients-3.3.1.jar:na]
	... 26 common frames omitted

2023-03-18T18:19:59.711+01:00  INFO 81012 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81012 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:19:59.714+01:00  INFO 81012 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:20:00.294+01:00  INFO 81012 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:20:00.315+01:00  INFO 81012 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:20:01.399+01:00  INFO 81012 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:20:01.547+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:01.548+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:01.548+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160001546
2023-03-18T18:20:01.802+01:00  INFO 81012 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:20:01.805+01:00  INFO 81012 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:20:01.806+01:00  INFO 81012 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:20:01.806+01:00  INFO 81012 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:20:01.809+01:00  INFO 81012 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:20:01.810+01:00  INFO 81012 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:20:01.810+01:00  INFO 81012 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:20:01.838+01:00  INFO 81012 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:20:01.878+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:01.879+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:01.879+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160001878
2023-03-18T18:20:01.881+01:00  INFO 81012 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Subscribed to topic(s): topicTask1
2023-03-18T18:20:01.888+01:00  INFO 81012 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333;-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333;
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:20:01.897+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:01.898+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:01.899+01:00  INFO 81012 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160001897
2023-03-18T18:20:01.900+01:00  INFO 81012 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Subscribed to topic(s): topicTask2
2023-03-18T18:20:01.905+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:20:01.906+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:20:01.907+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:20:01.908+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:20:01.910+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:20:01.911+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:20:01.911+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:20:01.911+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:20:01.913+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:20:01.918+01:00  INFO 81012 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.644 seconds (process running for 3.009)
2023-03-18T18:20:01.933+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-1-fbff97c2-2413-40d8-958f-2fe50c0e04ec
2023-03-18T18:20:01.933+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333;-2-ebf54049-54bc-4444-a5ef-234a7aaf8a41
2023-03-18T18:20:01.934+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:20:01.934+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:20:01.934+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:20:01.934+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] (Re-)joining group
2023-03-18T18:20:01.938+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=9, memberId='consumer-springkafkatask333;-1-fbff97c2-2413-40d8-958f-2fe50c0e04ec', protocol='range'}
2023-03-18T18:20:01.938+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully joined group with generation Generation{generationId=9, memberId='consumer-springkafkatask333;-2-ebf54049-54bc-4444-a5ef-234a7aaf8a41', protocol='range'}
2023-03-18T18:20:01.944+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:20:01.947+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Finished assignment for group at generation 9: {consumer-springkafkatask333;-2-ebf54049-54bc-4444-a5ef-234a7aaf8a41=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask333;-1-fbff97c2-2413-40d8-958f-2fe50c0e04ec=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:20:01.955+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=9, memberId='consumer-springkafkatask333;-1-fbff97c2-2413-40d8-958f-2fe50c0e04ec', protocol='range'}
2023-03-18T18:20:01.955+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Successfully synced group in generation Generation{generationId=9, memberId='consumer-springkafkatask333;-2-ebf54049-54bc-4444-a5ef-234a7aaf8a41', protocol='range'}
2023-03-18T18:20:01.956+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:20:01.956+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:20:01.961+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:20:01.961+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:20:01.980+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-2, groupId=springkafkatask333;] Setting offset for partition topicTask2-0 to the committed offset FetchPosition{offset=82, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:20:01.980+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=17, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:20:01.982+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333;-1, groupId=springkafkatask333;] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=78, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-18T18:20:01.985+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask2-0]
2023-03-18T18:20:01.995+01:00  INFO 81012 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333;: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:20:12.253+01:00  INFO 77412 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 77412 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:20:12.257+01:00  INFO 77412 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:20:12.769+01:00  INFO 77412 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:20:12.788+01:00  INFO 77412 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:20:14.063+01:00  INFO 77412 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:20:14.256+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:14.257+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:14.258+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160014254
2023-03-18T18:20:14.564+01:00  INFO 77412 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:20:14.569+01:00  INFO 77412 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:20:14.570+01:00  INFO 77412 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:20:14.570+01:00  INFO 77412 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:20:14.575+01:00  INFO 77412 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:20:14.575+01:00  INFO 77412 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:20:14.576+01:00  INFO 77412 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:20:14.605+01:00  INFO 77412 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:20:14.640+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:14.641+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:14.641+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160014640
2023-03-18T18:20:14.644+01:00  INFO 77412 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Subscribed to topic(s): topicTask1
2023-03-18T18:20:14.655+01:00  INFO 77412 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask333-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask333
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:20:14.664+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:14.664+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:14.665+01:00  INFO 77412 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160014664
2023-03-18T18:20:14.666+01:00  INFO 77412 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Subscribed to topic(s): topicTask2
2023-03-18T18:20:14.680+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:20:14.680+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:20:14.683+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:20:14.684+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:20:14.684+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:20:14.686+01:00  INFO 77412 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.933 seconds (process running for 3.319)
2023-03-18T18:20:14.687+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:20:14.687+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:20:14.691+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] (Re-)joining group
2023-03-18T18:20:14.692+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] (Re-)joining group
2023-03-18T18:20:14.713+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333-1-e3e3e662-df54-45a7-86f0-3e8184d9377d
2023-03-18T18:20:14.713+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask333-2-938599ff-1b45-49ce-8d1b-ccb262ef40c2
2023-03-18T18:20:14.714+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:20:14.714+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:20:14.714+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] (Re-)joining group
2023-03-18T18:20:14.714+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] (Re-)joining group
2023-03-18T18:20:14.719+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask333-1-e3e3e662-df54-45a7-86f0-3e8184d9377d', protocol='range'}
2023-03-18T18:20:14.719+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask333-2-938599ff-1b45-49ce-8d1b-ccb262ef40c2', protocol='range'}
2023-03-18T18:20:14.725+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:20:14.725+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:20:14.728+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Finished assignment for group at generation 1: {consumer-springkafkatask333-1-e3e3e662-df54-45a7-86f0-3e8184d9377d=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask333-2-938599ff-1b45-49ce-8d1b-ccb262ef40c2=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:20:14.734+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask333-2-938599ff-1b45-49ce-8d1b-ccb262ef40c2', protocol='range'}
2023-03-18T18:20:14.734+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask333-1-e3e3e662-df54-45a7-86f0-3e8184d9377d', protocol='range'}
2023-03-18T18:20:14.735+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:20:14.735+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:20:14.738+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:20:14.738+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:20:14.748+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Found no committed offset for partition topicTask1-0
2023-03-18T18:20:14.748+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Found no committed offset for partition topicTask2-0
2023-03-18T18:20:14.748+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Found no committed offset for partition topicTask1-1
2023-03-18T18:20:14.758+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask333-2, groupId=springkafkatask333] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:20:14.758+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:20:14.759+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask333-1, groupId=springkafkatask333] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:20:14.760+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333: partitions assigned: [topicTask2-0]
2023-03-18T18:20:14.760+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask333: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:20:14.802+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:20:14.802+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.802+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.802+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.803+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.803+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.803+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.803+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.804+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.804+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.804+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.804+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.804+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.805+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.805+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.806+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.806+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.807+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.808+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.808+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.808+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.809+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.809+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.809+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.810+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.810+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.810+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.810+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.811+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.811+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.811+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.812+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.812+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.812+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.812+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.813+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.813+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.813+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.813+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.814+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.814+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.814+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.814+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.814+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.815+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.815+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.815+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.816+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.817+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.817+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.817+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.818+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.818+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.818+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.818+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.818+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.819+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.819+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.819+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.819+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.819+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.820+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:20:14.820+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.821+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.821+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.821+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.822+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.822+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.822+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:20:14.823+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.823+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:20:14.823+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.824+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:20:14.824+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.824+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:20:14.825+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.825+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:20:14.825+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.825+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:20:14.825+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.826+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:14.826+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.826+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:20:14.826+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.827+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:20:14.858+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.858+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:20:14.859+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:20:14.859+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:20:14.860+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.860+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:20:14.860+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.864+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:20:14.864+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:20:14.872+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:20:14.881+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:20:14.896+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:20:14.897+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:20:14.897+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160014896
2023-03-18T18:20:14.903+01:00  INFO 77412 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:20:14.904+01:00  INFO 77412 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:20:14.904+01:00  INFO 77412 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2001 with epoch 0
2023-03-18T18:20:14.912+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:20:14.913+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.913+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:20:14.913+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:20:14.914+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:20:14.915+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.915+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:20:14.915+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.915+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:20:14.915+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:20:14.918+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:20:14.918+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.918+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:20:14.918+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.919+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:20:14.919+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.919+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:20:14.919+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.919+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:20:14.920+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.920+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:20:14.920+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.920+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:20:14.920+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.921+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:20:14.921+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.921+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:20:14.921+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.921+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:20:14.922+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.922+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:20:14.922+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.922+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:20:14.925+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.925+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.925+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:20:14.926+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.927+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:20:14.928+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.929+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:20:14.929+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.930+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:20:14.930+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.931+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.931+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:20:14.932+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.932+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:20:14.932+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.932+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:20:14.933+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.933+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:20:14.933+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.934+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:20:14.934+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.934+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:20:14.935+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.935+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:20:14.936+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.936+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:20:14.936+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:20:14.936+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:20:14.937+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.937+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:20:14.937+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:20:14.937+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:20:14.938+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.938+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:20:14.938+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:20:14.938+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:20:14.939+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.939+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:20:14.939+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:20:14.939+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:20:14.940+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.940+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:20:14.940+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:20:14.940+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:20:14.941+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.941+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:20:14.941+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:20:14.942+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.942+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:20:14.942+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.942+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:20:14.943+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.943+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:20:14.945+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.946+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:20:14.946+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.947+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:20:14.947+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:20:14.948+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.948+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:20:14.948+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:20:14.948+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:20:14.949+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.949+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:20:14.949+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.949+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:20:14.950+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.950+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:20:14.950+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.950+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:20:14.951+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.951+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:20:14.952+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:20:14.952+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.952+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:20:14.952+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:20:14.952+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:20:14.953+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.953+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:20:14.953+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.953+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:20:14.953+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.953+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:20:14.954+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.954+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:20:14.954+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:20:14.956+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.956+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:20:14.956+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:20:14.956+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:14.957+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.957+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:20:14.957+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.957+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:20:14.958+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.958+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:20:14.958+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:20:14.958+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:20:14.959+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.959+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:20:14.959+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.959+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:20:14.959+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:20:14.960+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:14.960+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.960+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:20:14.964+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.965+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:20:14.965+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:20:14.965+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:20:14.966+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.966+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:20:14.967+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.967+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:20:14.967+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:20:14.967+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:14.968+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.968+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:14.968+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:20:14.969+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.969+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:20:14.970+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:20:14.970+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:20:14.972+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.972+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.972+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:20:14.972+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.972+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:20:14.972+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:20:14.973+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:20:14.974+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.974+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:20:14.974+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:14.976+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:20:14.977+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.977+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:20:14.978+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.978+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:20:14.978+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.978+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:20:14.978+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:20:14.979+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:20:14.980+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.981+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:20:14.981+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:14.981+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:20:14.984+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:20:14.985+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.986+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.986+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:20:14.987+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.987+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:20:14.987+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:20:14.988+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:20:14.989+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.989+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:20:14.989+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:14.990+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:20:14.990+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:20:14.991+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.991+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:20:14.992+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:14.992+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:20:14.992+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:20:14.992+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:20:14.993+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.994+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.994+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:20:14.994+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:14.994+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:20:14.994+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:20:14.995+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.996+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:20:14.996+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:20:14.996+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:20:14.997+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:14.998+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:14.998+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:20:14.998+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:14.998+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:20:14.998+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:20:15.000+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.001+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:20:15.001+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:15.001+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:20:15.001+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:20:15.002+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:15.004+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:15.004+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:20:15.006+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.006+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:20:15.006+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:20:15.007+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.008+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:15.008+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:20:15.008+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:20:15.009+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:20:15.010+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.011+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:20:15.011+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:15.011+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:20:15.011+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:20:15.011+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:20:15.014+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.014+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:20:15.014+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:20:15.015+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:20:15.016+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.016+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:20:15.016+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:20:15.017+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:20:15.017+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:15.017+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.018+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:20:15.018+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:15.018+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:20:15.018+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:20:15.019+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:15.019+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:15.019+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:20:15.020+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.020+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:20:15.020+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:15.020+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:20:15.020+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:20:15.021+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.021+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:20:15.022+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:15.022+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:20:15.022+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:20:15.022+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:20:15.022+01:00 ERROR 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:20:15.022+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:20:15.023+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:15.023+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.023+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:20:15.024+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:20:15.024+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:20:15.024+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:20:15.025+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:20:15.025+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:20:15.025+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:20:15.025+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:20:15.025+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:20:15.026+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:20:15.030+01:00  INFO 77412 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:21:15.007+01:00  INFO 77412 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:22:11.077+01:00  INFO 63888 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 63888 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:22:11.081+01:00  INFO 63888 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:22:11.687+01:00  INFO 63888 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:22:11.708+01:00  INFO 63888 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:22:13.063+01:00  INFO 63888 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:22:13.251+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:22:13.254+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:22:13.257+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160133249
2023-03-18T18:22:13.563+01:00  INFO 63888 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:22:13.568+01:00  INFO 63888 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:22:13.569+01:00  INFO 63888 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:22:13.570+01:00  INFO 63888 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:22:13.576+01:00  INFO 63888 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:22:13.576+01:00  INFO 63888 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:22:13.577+01:00  INFO 63888 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:22:13.604+01:00  INFO 63888 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask8-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask8
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:22:13.641+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:22:13.642+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:22:13.642+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160133641
2023-03-18T18:22:13.643+01:00  INFO 63888 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Subscribed to topic(s): topicTask2
2023-03-18T18:22:13.658+01:00  INFO 63888 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask8-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask8
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:22:13.665+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:22:13.666+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:22:13.666+01:00  INFO 63888 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160133665
2023-03-18T18:22:13.667+01:00  INFO 63888 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Subscribed to topic(s): topicTask1
2023-03-18T18:22:13.677+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:22:13.677+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:22:13.679+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:22:13.681+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:22:13.681+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:22:13.682+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:22:13.682+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:22:13.684+01:00  INFO 63888 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 3.105 seconds (process running for 3.513)
2023-03-18T18:22:13.685+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] (Re-)joining group
2023-03-18T18:22:13.685+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] (Re-)joining group
2023-03-18T18:22:13.704+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask8-1-c060f123-914a-4685-b050-c94657bda12a
2023-03-18T18:22:13.705+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:22:13.705+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask8-2-599d81e6-a062-43a0-b0a7-6f9cb3be8fa0
2023-03-18T18:22:13.706+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] (Re-)joining group
2023-03-18T18:22:13.706+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:22:13.706+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] (Re-)joining group
2023-03-18T18:22:13.711+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask8-1-c060f123-914a-4685-b050-c94657bda12a', protocol='range'}
2023-03-18T18:22:13.711+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask8-2-599d81e6-a062-43a0-b0a7-6f9cb3be8fa0', protocol='range'}
2023-03-18T18:22:13.716+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:22:13.717+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:22:13.720+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Finished assignment for group at generation 1: {consumer-springkafkatask8-1-c060f123-914a-4685-b050-c94657bda12a=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask8-2-599d81e6-a062-43a0-b0a7-6f9cb3be8fa0=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:22:13.727+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask8-2-599d81e6-a062-43a0-b0a7-6f9cb3be8fa0', protocol='range'}
2023-03-18T18:22:13.727+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask8-1-c060f123-914a-4685-b050-c94657bda12a', protocol='range'}
2023-03-18T18:22:13.728+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:22:13.728+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:22:13.732+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:22:13.732+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:22:13.742+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Found no committed offset for partition topicTask1-0
2023-03-18T18:22:13.742+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Found no committed offset for partition topicTask2-0
2023-03-18T18:22:13.742+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Found no committed offset for partition topicTask1-1
2023-03-18T18:22:13.757+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:22:13.757+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask8-1, groupId=springkafkatask8] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:22:13.759+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask8-2, groupId=springkafkatask8] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:22:13.760+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask8: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:22:13.760+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask8: partitions assigned: [topicTask2-0]
2023-03-18T18:22:13.802+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:22:13.802+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.802+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.803+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.803+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.804+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.804+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.804+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.805+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.805+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.805+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.805+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.805+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.806+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.806+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.806+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.807+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.808+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.808+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.808+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.808+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.809+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.809+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.809+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.809+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.809+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.809+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.810+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.810+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.810+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.811+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.811+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.811+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.811+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.812+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.812+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.812+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.812+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.812+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.812+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.813+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.813+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.813+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.813+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.813+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.814+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.814+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.814+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.814+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.815+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.815+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.815+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.815+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.815+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.816+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.816+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.816+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.816+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.816+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.817+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.818+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.818+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.818+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.818+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.819+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.819+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.819+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.819+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.819+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.819+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.820+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:22:13.820+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.820+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.820+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.820+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:22:13.821+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.822+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.822+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.822+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.822+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.822+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:22:13.822+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.822+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.823+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.823+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.823+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:22:13.824+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.824+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:22:13.824+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.824+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:22:13.825+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.825+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:22:13.825+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.826+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:13.826+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.826+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:22:13.827+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.827+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:22:13.872+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:13.873+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:22:13.874+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:22:13.874+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:22:13.875+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:13.875+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:22:13.876+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:13.882+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:22:13.882+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:22:13.890+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:22:13.909+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:22:13.930+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:22:13.931+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:22:13.931+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160133930
2023-03-18T18:22:13.943+01:00  INFO 63888 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:22:13.944+01:00  INFO 63888 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:22:13.949+01:00  INFO 63888 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2002 with epoch 0
2023-03-18T18:22:13.970+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:22:13.972+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:13.973+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:22:13.973+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:22:13.974+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:22:13.975+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:13.975+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:22:13.975+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:13.975+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:22:13.976+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:22:13.977+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:22:13.978+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.978+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:22:13.979+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.979+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:22:13.980+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.980+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:22:13.980+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.980+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:22:13.981+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.982+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:22:13.983+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.983+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:22:13.986+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.986+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.987+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:22:13.988+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.988+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:22:13.991+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.992+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:13.992+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:22:13.993+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.995+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:22:13.996+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.996+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:22:13.999+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:13.999+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:22:14.001+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.001+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:22:14.002+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.003+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:22:14.003+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.004+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:22:14.004+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.005+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:22:14.005+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.005+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:22:14.005+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.005+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:22:14.006+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.006+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:22:14.006+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.006+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:22:14.006+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.007+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:22:14.008+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.008+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:22:14.011+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.012+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:22:14.012+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:22:14.012+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:22:14.013+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.013+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:22:14.013+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:22:14.014+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:22:14.014+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.015+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:22:14.015+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:22:14.015+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:22:14.016+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.016+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:22:14.017+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:22:14.017+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:22:14.018+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.018+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:22:14.018+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:22:14.018+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:22:14.020+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.020+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:22:14.020+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:22:14.020+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.020+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:22:14.021+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.021+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:22:14.021+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.022+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:22:14.024+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.025+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:22:14.026+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.026+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:22:14.026+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:22:14.027+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.027+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:22:14.028+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:22:14.028+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:22:14.028+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.028+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:22:14.028+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.028+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:22:14.029+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.029+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:22:14.029+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.029+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:22:14.030+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.030+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:22:14.030+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:22:14.031+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.031+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:22:14.031+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:22:14.031+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:22:14.032+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.032+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:22:14.032+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.032+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:22:14.033+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.033+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:22:14.034+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.034+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:22:14.034+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:22:14.037+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.037+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:22:14.037+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:22:14.037+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:14.038+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.038+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:22:14.039+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.039+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:22:14.040+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.040+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:22:14.040+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:22:14.041+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:22:14.042+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.042+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:22:14.043+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.043+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:22:14.043+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:22:14.043+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:14.045+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.047+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:22:14.049+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.049+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:22:14.049+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:22:14.052+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:22:14.051+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.053+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.054+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:22:14.054+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.054+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:22:14.054+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:22:14.055+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:14.056+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.056+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:22:14.059+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.059+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:22:14.059+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:22:14.060+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:22:14.060+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.061+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.063+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:22:14.064+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.064+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:22:14.064+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:22:14.065+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:22:14.067+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.067+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:22:14.067+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.068+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:22:14.070+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:22:14.072+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.072+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:22:14.072+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.072+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:22:14.072+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:22:14.073+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:22:14.074+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.074+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:22:14.074+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.075+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.075+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:22:14.075+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:22:14.076+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.076+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:22:14.076+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.076+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:22:14.084+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.086+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:22:14.087+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:22:14.089+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.089+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:22:14.089+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.090+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:22:14.090+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:22:14.091+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.091+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:22:14.092+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.092+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:22:14.092+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:22:14.092+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:22:14.093+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.093+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:22:14.094+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.094+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:22:14.094+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:22:14.095+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.095+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:22:14.095+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:22:14.099+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.115+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:22:14.116+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.117+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:22:14.117+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.117+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:22:14.117+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:22:14.118+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.119+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:22:14.119+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.119+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:22:14.119+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:22:14.121+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:14.121+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.122+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:22:14.123+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.124+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:22:14.124+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:22:14.128+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.129+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:22:14.129+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.129+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:22:14.129+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:22:14.133+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.134+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:22:14.135+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.136+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.135+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:22:14.137+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:22:14.138+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:22:14.139+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.139+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:22:14.140+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:22:14.140+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:22:14.141+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.141+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:22:14.141+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:22:14.142+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:22:14.142+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.143+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:22:14.143+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.143+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:22:14.143+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:22:14.143+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:14.144+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.147+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:22:14.149+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.150+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:22:14.150+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.150+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:22:14.150+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:22:14.152+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.154+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:22:14.154+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.154+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:22:14.154+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:22:14.155+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:22:14.155+01:00 ERROR 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:22:14.155+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:22:14.156+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.157+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.157+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:22:14.157+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:22:14.157+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:22:14.158+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:22:14.158+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:22:14.159+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:22:14.159+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:22:14.159+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:22:14.159+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:22:14.160+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.163+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:22:14.167+01:00  INFO 63888 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:23:32.668+01:00  INFO 71128 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 71128 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:23:32.671+01:00  INFO 71128 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:23:33.194+01:00  INFO 71128 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:23:33.219+01:00  INFO 71128 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:23:34.393+01:00  INFO 71128 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:23:34.560+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:23:34.561+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:23:34.561+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160214558
2023-03-18T18:23:34.826+01:00  INFO 71128 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:23:34.830+01:00  INFO 71128 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:23:34.830+01:00  INFO 71128 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:23:34.831+01:00  INFO 71128 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:23:34.835+01:00  INFO 71128 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:23:34.836+01:00  INFO 71128 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:23:34.837+01:00  INFO 71128 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:23:34.865+01:00  INFO 71128 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask9-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask9
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:23:34.902+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:23:34.902+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:23:34.902+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160214902
2023-03-18T18:23:34.903+01:00  INFO 71128 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Subscribed to topic(s): topicTask1
2023-03-18T18:23:34.910+01:00  INFO 71128 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask9-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask9
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:23:34.916+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:23:34.916+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:23:34.917+01:00  INFO 71128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160214916
2023-03-18T18:23:34.917+01:00  INFO 71128 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Subscribed to topic(s): topicTask2
2023-03-18T18:23:34.928+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:23:34.928+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:23:34.929+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:23:34.930+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:23:34.930+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:23:34.931+01:00  INFO 71128 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.76 seconds (process running for 3.205)
2023-03-18T18:23:34.931+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:23:34.931+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:23:34.934+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:23:34.934+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:23:34.949+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask9-2-1e977cd5-8b26-4ec5-b65d-049d852add7b
2023-03-18T18:23:34.950+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask9-1-f67cd1ef-4999-47ed-84d0-50b05bd43227
2023-03-18T18:23:34.950+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:23:34.950+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:23:34.951+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:23:34.951+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:23:34.955+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask9-2-1e977cd5-8b26-4ec5-b65d-049d852add7b', protocol='range'}
2023-03-18T18:23:34.955+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask9-1-f67cd1ef-4999-47ed-84d0-50b05bd43227', protocol='range'}
2023-03-18T18:23:34.960+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:23:34.961+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:23:34.964+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Finished assignment for group at generation 1: {consumer-springkafkatask9-1-f67cd1ef-4999-47ed-84d0-50b05bd43227=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask9-2-1e977cd5-8b26-4ec5-b65d-049d852add7b=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:23:34.970+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask9-1-f67cd1ef-4999-47ed-84d0-50b05bd43227', protocol='range'}
2023-03-18T18:23:34.970+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask9-2-1e977cd5-8b26-4ec5-b65d-049d852add7b', protocol='range'}
2023-03-18T18:23:34.971+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:23:34.971+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:23:34.975+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:23:34.975+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:23:34.989+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Found no committed offset for partition topicTask1-0
2023-03-18T18:23:34.989+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Found no committed offset for partition topicTask2-0
2023-03-18T18:23:34.990+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Found no committed offset for partition topicTask1-1
2023-03-18T18:23:35.003+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:23:35.003+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:23:35.005+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:23:35.006+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask9: partitions assigned: [topicTask2-0]
2023-03-18T18:23:35.006+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask9: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:23:35.053+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:23:35.053+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.054+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.054+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.054+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.055+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.055+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.055+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.055+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.055+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.056+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.056+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.056+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.056+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.057+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.057+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.057+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.058+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.058+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.058+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.058+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.059+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.059+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.060+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.060+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.060+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.060+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.060+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.060+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.061+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.061+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.061+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.061+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.062+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.062+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.062+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.063+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.063+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.063+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.063+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.063+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.064+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.064+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.064+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.064+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.065+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.065+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.065+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.065+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.066+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.066+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.066+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.067+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.067+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.067+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.068+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.068+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.069+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.069+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.069+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.069+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.070+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.070+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.070+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.070+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.070+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.071+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.071+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.071+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.072+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.072+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.072+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.072+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.072+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.073+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.074+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.074+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.074+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:23:35.075+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.075+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.075+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.075+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:23:35.075+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.075+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.075+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.075+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.076+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.076+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:23:35.076+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.077+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.077+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.077+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.077+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:23:35.077+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.077+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.077+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.078+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.078+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:23:35.078+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.078+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.078+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.078+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.079+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.079+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.080+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.080+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.080+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:23:35.080+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.080+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.080+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.080+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.080+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.081+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:23:35.081+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.081+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:23:35.110+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.111+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:23:35.111+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:23:35.112+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:23:35.112+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.113+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:23:35.113+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.120+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:23:35.121+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:23:35.128+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:23:35.140+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:23:35.157+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:23:35.158+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:23:35.158+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160215157
2023-03-18T18:23:35.170+01:00  INFO 71128 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:23:35.171+01:00  INFO 71128 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:23:35.171+01:00  INFO 71128 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2003 with epoch 0
2023-03-18T18:23:35.179+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:23:35.181+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.181+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:23:35.181+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:23:35.182+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:23:35.183+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.183+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:23:35.183+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.183+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:23:35.183+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:23:35.186+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:23:35.186+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.186+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:23:35.187+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.187+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:23:35.187+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.187+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:23:35.188+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.188+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:23:35.188+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.188+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:23:35.188+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.189+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:23:35.189+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.189+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:23:35.189+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.189+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:23:35.190+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.190+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:23:35.190+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.190+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:23:35.191+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.192+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:23:35.195+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.198+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.199+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:23:35.200+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.200+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.201+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:23:35.202+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.203+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:23:35.204+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.204+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:23:35.204+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.205+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:23:35.205+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.205+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:23:35.205+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.206+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:23:35.206+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.206+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:23:35.206+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.206+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:23:35.206+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.207+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:23:35.208+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.208+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:23:35.209+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.209+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:23:35.209+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:23:35.209+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:23:35.210+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.210+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:23:35.210+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:23:35.210+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:23:35.211+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.211+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:23:35.211+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:23:35.211+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:23:35.212+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.212+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:23:35.212+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:23:35.212+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:23:35.213+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.213+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:23:35.213+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:23:35.213+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:23:35.215+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.215+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:23:35.215+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:23:35.215+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.216+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:23:35.216+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.216+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:23:35.216+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.216+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:23:35.219+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.219+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:23:35.220+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.221+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:23:35.221+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:23:35.221+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.222+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:23:35.222+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:23:35.222+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:23:35.222+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.222+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:23:35.222+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.222+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:23:35.223+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.223+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:23:35.223+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.223+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:23:35.224+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.224+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:23:35.224+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:23:35.224+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.224+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:23:35.224+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:23:35.225+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:23:35.225+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.225+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:23:35.225+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.225+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:23:35.226+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.226+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:23:35.227+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.227+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:23:35.227+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:23:35.229+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.229+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:23:35.229+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:23:35.229+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.229+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.229+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:23:35.230+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.230+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:23:35.230+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.231+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:23:35.231+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:23:35.231+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:23:35.231+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.232+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:23:35.232+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.232+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:23:35.232+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:23:35.232+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.233+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.233+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:23:35.233+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.234+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:23:35.234+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:23:35.234+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:23:35.234+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.234+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:23:35.234+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.235+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:23:35.235+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:23:35.235+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.235+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.236+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:23:35.238+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.239+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:23:35.239+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:23:35.239+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:23:35.240+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.240+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:23:35.241+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.241+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:23:35.241+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:23:35.241+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.242+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:23:35.243+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.251+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:23:35.252+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.253+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:23:35.253+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:23:35.254+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.255+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:23:35.255+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.255+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:23:35.255+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:23:35.256+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:23:35.256+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.257+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.258+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:23:35.258+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.258+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:23:35.259+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:23:35.260+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.261+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:23:35.261+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.261+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:23:35.261+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:23:35.265+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.264+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:23:35.267+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.267+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:23:35.268+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.268+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:23:35.268+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:23:35.269+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.270+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.270+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.270+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:23:35.270+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.270+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:23:35.271+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:23:35.271+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:23:35.272+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.272+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:23:35.272+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.272+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:23:35.273+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:23:35.274+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.274+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:23:35.274+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:23:35.278+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:23:35.278+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.280+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.280+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:23:35.280+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.280+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:23:35.281+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:23:35.282+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.282+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:23:35.282+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.282+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:23:35.282+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:23:35.283+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.283+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.283+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:23:35.284+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.284+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:23:35.284+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:23:35.285+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.285+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:23:35.285+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:23:35.285+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:23:35.286+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.286+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:23:35.287+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.287+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:23:35.287+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:23:35.287+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:23:35.288+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.288+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.288+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:23:35.288+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:23:35.289+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:23:35.289+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.290+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:23:35.290+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:23:35.290+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:23:35.291+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.291+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:23:35.291+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.291+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:23:35.291+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:23:35.291+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.292+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.292+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:23:35.293+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.294+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:23:35.294+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.295+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:23:35.295+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.295+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:23:35.297+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.297+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:23:35.298+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.298+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:23:35.298+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:23:35.298+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:23:35.299+01:00 ERROR 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:23:35.300+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:23:35.301+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.301+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:23:35.301+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:23:35.301+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:23:35.301+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.301+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:23:35.303+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:23:35.304+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:23:35.304+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:23:35.304+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:23:35.304+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:23:35.309+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:23:35.313+01:00  INFO 71128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:24:35.277+01:00  INFO 71128 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:24:59.602+01:00  INFO 75904 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 75904 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:24:59.604+01:00  INFO 75904 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:25:00.132+01:00  INFO 75904 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:25:00.156+01:00  INFO 75904 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:25:01.297+01:00  INFO 75904 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:25:01.453+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:01.455+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:01.455+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160301452
2023-03-18T18:25:01.719+01:00  INFO 75904 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:25:01.723+01:00  INFO 75904 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:25:01.723+01:00  INFO 75904 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:25:01.723+01:00  INFO 75904 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:25:01.727+01:00  INFO 75904 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:25:01.728+01:00  INFO 75904 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:25:01.728+01:00  INFO 75904 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:25:01.758+01:00  INFO 75904 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask9-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask9
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:25:01.795+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:01.795+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:01.795+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160301794
2023-03-18T18:25:01.797+01:00  INFO 75904 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Subscribed to topic(s): topicTask1
2023-03-18T18:25:01.803+01:00  INFO 75904 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask9-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask9
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:25:01.810+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:01.811+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:01.811+01:00  INFO 75904 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160301810
2023-03-18T18:25:01.811+01:00  INFO 75904 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Subscribed to topic(s): topicTask2
2023-03-18T18:25:01.819+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:25:01.819+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:25:01.821+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:25:01.822+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:25:01.823+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:25:01.824+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:25:01.824+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:25:01.828+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:25:01.828+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:25:01.829+01:00  INFO 75904 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.676 seconds (process running for 3.048)
2023-03-18T18:25:01.851+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask9-2-4f77c21f-d284-4b13-a806-eb65cbbbfc8e
2023-03-18T18:25:01.851+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask9-1-410e522a-bfcb-4fb3-8155-3c2d669de118
2023-03-18T18:25:01.852+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:25:01.852+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:25:01.852+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-1, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:25:01.852+01:00  INFO 75904 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask9-2, groupId=springkafkatask9] (Re-)joining group
2023-03-18T18:25:23.897+01:00  INFO 81948 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81948 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:25:23.899+01:00  INFO 81948 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:25:24.452+01:00  INFO 81948 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:25:24.478+01:00  INFO 81948 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:25:25.756+01:00  INFO 81948 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:25:25.941+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:25.942+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:25.942+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160325940
2023-03-18T18:25:26.249+01:00  INFO 81948 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:25:26.255+01:00  INFO 81948 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:25:26.255+01:00  INFO 81948 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:25:26.256+01:00  INFO 81948 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:25:26.261+01:00  INFO 81948 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:25:26.263+01:00  INFO 81948 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:25:26.264+01:00  INFO 81948 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:25:26.295+01:00  INFO 81948 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask10-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask10
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:25:26.334+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:26.335+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:26.335+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160326334
2023-03-18T18:25:26.337+01:00  INFO 81948 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Subscribed to topic(s): topicTask1
2023-03-18T18:25:26.343+01:00  INFO 81948 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask10-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask10
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:25:26.353+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:26.353+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:26.354+01:00  INFO 81948 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160326353
2023-03-18T18:25:26.355+01:00  INFO 81948 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Subscribed to topic(s): topicTask2
2023-03-18T18:25:26.374+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:25:26.374+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:25:26.375+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:25:26.377+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:25:26.377+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:25:26.377+01:00  INFO 81948 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.903 seconds (process running for 3.3)
2023-03-18T18:25:26.378+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:25:26.378+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:25:26.382+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] (Re-)joining group
2023-03-18T18:25:26.382+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] (Re-)joining group
2023-03-18T18:25:26.402+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7
2023-03-18T18:25:26.402+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask10-2-4bf9ff4b-bde8-402b-8c7c-5a38cb4ae2e9
2023-03-18T18:25:26.402+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:25:26.402+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:25:26.403+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] (Re-)joining group
2023-03-18T18:25:26.403+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] (Re-)joining group
2023-03-18T18:25:26.406+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7', protocol='range'}
2023-03-18T18:25:26.409+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Finished assignment for group at generation 1: {consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:25:26.414+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7', protocol='range'}
2023-03-18T18:25:26.414+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Resetting generation due to: encountered REBALANCE_IN_PROGRESS from SYNC_GROUP response
2023-03-18T18:25:26.415+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Request joining group due to: encountered REBALANCE_IN_PROGRESS from SYNC_GROUP response
2023-03-18T18:25:26.415+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2023-03-18T18:25:26.415+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] (Re-)joining group
2023-03-18T18:25:26.418+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Successfully joined group with generation Generation{generationId=2, memberId='consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7', protocol='range'}
2023-03-18T18:25:26.418+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Successfully joined group with generation Generation{generationId=2, memberId='consumer-springkafkatask10-2-4bf9ff4b-bde8-402b-8c7c-5a38cb4ae2e9', protocol='range'}
2023-03-18T18:25:26.423+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:25:26.424+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Finished assignment for group at generation 2: {consumer-springkafkatask10-2-4bf9ff4b-bde8-402b-8c7c-5a38cb4ae2e9=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:25:26.427+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Successfully synced group in generation Generation{generationId=2, memberId='consumer-springkafkatask10-1-3fdf30fa-5dd7-4989-8d52-11d1845479f7', protocol='range'}
2023-03-18T18:25:26.427+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Successfully synced group in generation Generation{generationId=2, memberId='consumer-springkafkatask10-2-4bf9ff4b-bde8-402b-8c7c-5a38cb4ae2e9', protocol='range'}
2023-03-18T18:25:26.428+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:25:26.428+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:25:26.431+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:25:26.431+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:25:26.449+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Found no committed offset for partition topicTask1-0
2023-03-18T18:25:26.449+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Found no committed offset for partition topicTask2-0
2023-03-18T18:25:26.450+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Found no committed offset for partition topicTask1-1
2023-03-18T18:25:26.460+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask10-2, groupId=springkafkatask10] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:25:26.460+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:25:26.462+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask10: partitions assigned: [topicTask2-0]
2023-03-18T18:25:26.463+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask10-1, groupId=springkafkatask10] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:25:26.463+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask10: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:25:26.507+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.507+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:25:26.507+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.507+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.507+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.507+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.508+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.508+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.508+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.508+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.508+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.508+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.509+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.509+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.509+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.509+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.510+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.510+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.510+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.510+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.510+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.511+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.511+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.511+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.511+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.512+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.512+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.512+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.512+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.512+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.513+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.514+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.514+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.514+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.514+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.515+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.516+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.516+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.516+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.516+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.516+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.517+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.517+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.517+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.517+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.517+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.517+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.518+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.518+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.518+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.519+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.519+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.519+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.519+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.519+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.520+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.520+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.520+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.520+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.521+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.521+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.521+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.522+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.522+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.522+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.522+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.522+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.522+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.523+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:25:26.523+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:25:26.524+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.525+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.525+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.525+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.526+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.526+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.526+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.527+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:25:26.527+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.528+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.528+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.528+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:25:26.528+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.528+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.528+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.528+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.528+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.529+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.529+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.529+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.529+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.529+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:25:26.529+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.529+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.529+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:25:26.573+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.573+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:25:26.574+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:25:26.574+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:25:26.575+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.575+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:25:26.575+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.578+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:25:26.579+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:25:26.585+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:25:26.592+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:25:26.605+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:25:26.606+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:25:26.606+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160326605
2023-03-18T18:25:26.613+01:00  INFO 81948 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:25:26.613+01:00  INFO 81948 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:25:26.614+01:00  INFO 81948 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2004 with epoch 0
2023-03-18T18:25:26.625+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:25:26.627+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.627+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:25:26.627+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:25:26.627+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:25:26.628+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.628+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:25:26.629+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.629+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:25:26.629+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:25:26.631+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:25:26.632+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.632+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:25:26.632+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.633+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:25:26.633+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.633+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:25:26.633+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.633+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:25:26.634+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.634+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:25:26.634+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.635+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:25:26.635+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.635+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:25:26.636+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.636+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:25:26.638+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.639+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:25:26.640+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.640+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.640+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:25:26.641+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.641+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:25:26.648+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.649+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.649+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:25:26.651+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.651+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:25:26.652+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.652+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:25:26.653+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.653+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:25:26.654+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.655+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:25:26.655+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.655+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:25:26.655+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.655+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:25:26.656+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.656+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:25:26.656+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.657+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:25:26.657+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.657+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:25:26.658+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.659+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:25:26.660+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.660+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:25:26.660+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:25:26.660+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:25:26.661+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.661+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:25:26.661+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:25:26.661+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:25:26.662+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.662+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:25:26.662+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:25:26.662+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:25:26.663+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.663+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:25:26.663+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:25:26.663+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:25:26.664+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.664+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:25:26.664+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:25:26.664+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:25:26.665+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.666+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:25:26.666+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:25:26.666+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.666+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:25:26.666+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.667+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:25:26.667+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.667+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:25:26.670+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.671+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:25:26.672+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.672+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:25:26.672+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:25:26.673+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.673+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:25:26.674+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:25:26.674+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:25:26.674+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.674+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:25:26.674+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.675+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:25:26.675+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.675+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:25:26.675+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.675+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:25:26.676+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.676+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:25:26.676+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:25:26.677+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.677+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:25:26.677+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:25:26.677+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:25:26.677+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.677+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:25:26.678+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.678+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:25:26.678+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.678+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:25:26.679+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.679+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:25:26.679+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:25:26.680+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.681+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:25:26.681+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:25:26.681+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.681+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.681+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:25:26.681+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.681+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:25:26.682+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.682+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:25:26.682+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:25:26.682+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:25:26.683+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.683+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:25:26.683+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.683+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:25:26.683+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:25:26.684+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.684+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.684+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:25:26.685+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.685+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:25:26.685+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:25:26.685+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:25:26.687+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.690+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.690+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:25:26.690+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.690+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:25:26.690+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:25:26.691+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.691+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.691+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:25:26.694+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.695+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:25:26.695+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.695+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:25:26.695+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:25:26.696+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.696+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:25:26.697+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.697+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:25:26.697+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:25:26.697+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:25:26.698+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.699+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:25:26.699+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.701+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:25:26.701+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:25:26.702+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.703+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.703+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:25:26.703+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.703+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:25:26.703+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:25:26.703+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:25:26.705+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.705+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:25:26.705+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.705+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:25:26.706+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:25:26.707+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.708+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.708+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:25:26.708+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.708+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:25:26.708+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:25:26.708+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:25:26.709+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.709+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:25:26.709+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.710+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:25:26.711+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:25:26.712+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.713+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.713+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:25:26.713+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.714+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:25:26.714+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:25:26.714+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:25:26.715+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.715+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:25:26.715+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.715+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:25:26.716+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:25:26.717+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.717+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:25:26.717+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:25:26.717+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:25:26.718+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.718+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.718+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:25:26.718+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.719+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:25:26.719+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:25:26.719+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.720+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:25:26.720+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.720+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:25:26.720+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:25:26.721+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.721+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.722+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:25:26.723+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.723+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:25:26.723+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:25:26.724+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.725+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:25:26.725+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:25:26.725+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:25:26.726+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.726+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.726+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:25:26.726+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.726+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:25:26.727+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:25:26.727+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:25:26.728+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.728+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:25:26.728+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:25:26.729+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:25:26.730+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.730+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:25:26.731+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:25:26.731+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:25:26.732+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.733+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.733+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:25:26.734+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.734+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:25:26.734+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.734+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:25:26.734+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:25:26.735+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.735+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:25:26.736+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.736+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:25:26.736+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:25:26.736+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:25:26.736+01:00 ERROR 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:25:26.737+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:25:26.737+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.739+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.741+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:25:26.742+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:25:26.742+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:25:26.742+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:25:26.743+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:25:26.748+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:25:26.749+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:25:26.749+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:25:26.749+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:25:26.749+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:25:26.756+01:00  INFO 81948 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 -> 
2023-03-18T18:26:08.960+01:00  INFO 81720 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 81720 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:26:08.964+01:00  INFO 81720 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:26:09.513+01:00  INFO 81720 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:26:09.537+01:00  INFO 81720 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:26:10.837+01:00  INFO 81720 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:26:11.015+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:26:11.017+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:26:11.018+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160371014
2023-03-18T18:26:11.297+01:00  INFO 81720 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:26:11.300+01:00  INFO 81720 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:26:11.301+01:00  INFO 81720 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:26:11.301+01:00  INFO 81720 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:26:11.305+01:00  INFO 81720 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:26:11.305+01:00  INFO 81720 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:26:11.306+01:00  INFO 81720 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:26:11.329+01:00  INFO 81720 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask11-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask11
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:26:11.368+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:26:11.368+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:26:11.369+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160371368
2023-03-18T18:26:11.371+01:00  INFO 81720 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Subscribed to topic(s): topicTask1
2023-03-18T18:26:11.381+01:00  INFO 81720 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask11-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask11
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:26:11.388+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:26:11.388+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:26:11.388+01:00  INFO 81720 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160371388
2023-03-18T18:26:11.389+01:00  INFO 81720 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Subscribed to topic(s): topicTask2
2023-03-18T18:26:11.403+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:26:11.403+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:26:11.404+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:26:11.406+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:26:11.406+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:26:11.408+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:26:11.408+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:26:11.412+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] (Re-)joining group
2023-03-18T18:26:11.412+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] (Re-)joining group
2023-03-18T18:26:11.412+01:00  INFO 81720 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.948 seconds (process running for 3.392)
2023-03-18T18:26:11.435+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a
2023-03-18T18:26:11.436+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:26:11.437+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] (Re-)joining group
2023-03-18T18:26:11.437+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask11-2-2355f90b-81e1-430b-aa25-496c08791b27
2023-03-18T18:26:11.438+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:26:11.438+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] (Re-)joining group
2023-03-18T18:26:11.441+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a', protocol='range'}
2023-03-18T18:26:11.451+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Finished assignment for group at generation 1: {consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:26:11.459+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a', protocol='range'}
2023-03-18T18:26:11.459+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Resetting generation due to: encountered REBALANCE_IN_PROGRESS from SYNC_GROUP response
2023-03-18T18:26:11.459+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Request joining group due to: encountered REBALANCE_IN_PROGRESS from SYNC_GROUP response
2023-03-18T18:26:11.460+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2023-03-18T18:26:11.460+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] (Re-)joining group
2023-03-18T18:26:11.462+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Successfully joined group with generation Generation{generationId=2, memberId='consumer-springkafkatask11-2-2355f90b-81e1-430b-aa25-496c08791b27', protocol='range'}
2023-03-18T18:26:11.462+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Successfully joined group with generation Generation{generationId=2, memberId='consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a', protocol='range'}
2023-03-18T18:26:11.467+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:26:11.467+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Finished assignment for group at generation 2: {consumer-springkafkatask11-2-2355f90b-81e1-430b-aa25-496c08791b27=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:26:11.470+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Successfully synced group in generation Generation{generationId=2, memberId='consumer-springkafkatask11-2-2355f90b-81e1-430b-aa25-496c08791b27', protocol='range'}
2023-03-18T18:26:11.470+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Successfully synced group in generation Generation{generationId=2, memberId='consumer-springkafkatask11-1-3aaba0e3-1a82-4b54-ac93-489f6d08243a', protocol='range'}
2023-03-18T18:26:11.471+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:26:11.471+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:26:11.474+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:26:11.474+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:26:11.482+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Found no committed offset for partition topicTask2-0
2023-03-18T18:26:11.482+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Found no committed offset for partition topicTask1-0
2023-03-18T18:26:11.483+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Found no committed offset for partition topicTask1-1
2023-03-18T18:26:11.490+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:26:11.490+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask11-2, groupId=springkafkatask11] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:26:11.491+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask11-1, groupId=springkafkatask11] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:26:11.492+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask11: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:26:11.492+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask11: partitions assigned: [topicTask2-0]
2023-03-18T18:26:11.526+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : stefan
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : it is working
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : are you ok?
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : it is nice
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : offset is growing
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : what is heppen
2023-03-18T18:26:11.527+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : is still working?
2023-03-18T18:26:11.528+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : helloooooo
2023-03-18T18:26:11.528+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : again
2023-03-18T18:26:11.528+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:26:11.528+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:26:11.528+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:26:11.529+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:26:11.529+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:26:11.529+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e6
2023-03-18T18:26:11.530+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e7
2023-03-18T18:26:11.530+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e8
2023-03-18T18:26:11.530+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e9
2023-03-18T18:26:11.530+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : wtf
2023-03-18T18:26:11.530+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e10
2023-03-18T18:26:11.531+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e11
2023-03-18T18:26:11.531+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e12
2023-03-18T18:26:11.531+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"ime": "stefan"}
2023-03-18T18:26:11.531+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:26:11.532+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:26:11.533+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:26:11.533+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:26:11.533+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "100"}
2023-03-18T18:26:11.533+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "99999"}
2023-03-18T18:26:11.533+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"}
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"}
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"}
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e6
2023-03-18T18:26:11.534+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : 67
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"}
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "100"}
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:26:11.535+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:26:11.536+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"}
2023-03-18T18:26:11.536+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.536+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.536+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.536+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.537+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.537+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.537+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.537+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.537+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.538+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.539+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.539+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.539+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.539+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.539+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.540+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.540+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.540+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.540+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.540+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.540+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.541+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.541+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:26:11.541+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.542+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.542+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.542+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:26:11.543+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.543+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.543+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.543+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:26:11.543+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.543+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.543+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.543+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.544+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:26:11.544+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.547+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.548+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.548+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.548+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.548+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.548+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.548+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.547+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.549+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.549+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.549+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:26:11.549+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.549+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.550+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.550+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.550+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.550+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.550+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:26:11.550+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.550+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.551+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.551+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.551+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.551+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:26:11.551+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.552+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.552+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.552+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.552+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.552+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.552+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.552+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.553+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.553+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.553+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.553+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.553+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.553+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:26:11.554+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.554+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.554+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.554+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.554+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.554+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:26:11.554+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.555+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.555+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.591+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.591+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:26:11.592+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:26:11.592+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:26:11.593+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.593+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:26:11.593+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.597+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.597+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:26:11.605+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:26:11.615+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:26:11.629+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:26:11.630+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:26:11.630+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160371629
2023-03-18T18:26:11.636+01:00  INFO 81720 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:26:11.638+01:00  INFO 81720 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2005 with epoch 0
2023-03-18T18:26:11.642+01:00  INFO 81720 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:26:11.658+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:26:11.659+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.660+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:26:11.660+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:26:11.660+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:26:11.661+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.661+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:26:11.661+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.661+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.662+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:26:11.663+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:26:11.663+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.664+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:26:11.664+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.664+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:26:11.665+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.665+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:26:11.665+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.665+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:26:11.666+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.666+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:26:11.666+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.666+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:26:11.666+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.667+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:26:11.667+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.667+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:26:11.667+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.667+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:26:11.667+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.667+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:26:11.667+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.668+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:26:11.671+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.671+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:26:11.671+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.672+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.673+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:26:11.674+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.674+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:26:11.675+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.675+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:26:11.676+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.676+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:26:11.677+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.677+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:26:11.677+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.678+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:26:11.678+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.678+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:26:11.679+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.679+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:26:11.679+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.680+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:26:11.681+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.682+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:26:11.683+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.683+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:26:11.683+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:26:11.683+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:26:11.685+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.685+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:26:11.685+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:26:11.685+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:26:11.685+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:26:11.687+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.688+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:26:11.688+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:26:11.688+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:26:11.689+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.689+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:26:11.689+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:26:11.689+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:26:11.690+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.691+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:26:11.691+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:26:11.691+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:26:11.692+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.692+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:26:11.692+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:26:11.693+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.693+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:26:11.693+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.693+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:26:11.693+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.693+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:26:11.695+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.696+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:26:11.696+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.696+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:26:11.697+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:26:11.697+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.697+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:26:11.698+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:26:11.698+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:26:11.698+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.698+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:26:11.698+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.698+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:26:11.699+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.699+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:26:11.699+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.699+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:26:11.700+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.700+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:26:11.700+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:26:11.701+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.702+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:26:11.702+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:26:11.702+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:26:11.702+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.702+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:26:11.703+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.703+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:26:11.703+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.703+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:26:11.704+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.704+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:26:11.704+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:26:11.706+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.706+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:26:11.706+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:26:11.707+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.707+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.707+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:26:11.708+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.708+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:26:11.709+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.709+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:26:11.709+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:26:11.709+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:26:11.710+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.710+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:26:11.710+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.710+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.710+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:26:11.711+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.711+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.711+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:26:11.712+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.713+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:26:11.713+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:26:11.713+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:26:11.715+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.715+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:26:11.715+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.715+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.716+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.716+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:26:11.717+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.718+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.718+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:26:11.720+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.720+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:26:11.721+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:26:11.721+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:26:11.721+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:26:11.723+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.724+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:26:11.724+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.724+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.724+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:26:11.725+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:26:11.726+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.726+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:26:11.726+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.728+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:26:11.729+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:26:11.730+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.731+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.731+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:26:11.731+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.731+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.731+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:26:11.732+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:26:11.733+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.734+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:26:11.734+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.735+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:26:11.735+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:26:11.737+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.737+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.737+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:26:11.737+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.737+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.738+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:26:11.738+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:26:11.741+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.742+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:26:11.742+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.743+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:26:11.743+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:26:11.748+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.749+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:26:11.749+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.750+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.750+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:26:11.752+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:26:11.754+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.754+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:26:11.754+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.754+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:26:11.755+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:26:11.756+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.756+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:26:11.756+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:26:11.756+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:26:11.757+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.757+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:26:11.758+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.758+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:26:11.758+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:26:11.761+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.761+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:26:11.761+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.761+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.762+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.762+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:26:11.762+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.763+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.764+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:26:11.765+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.765+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:26:11.766+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:26:11.768+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.768+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:26:11.769+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.769+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:26:11.769+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:26:11.769+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:26:11.771+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.771+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:26:11.771+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.771+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.771+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:26:11.772+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:26:11.773+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.774+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:26:11.774+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:26:11.774+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:26:11.776+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.777+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:26:11.778+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:26:11.778+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:26:11.779+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:26:11.780+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.780+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:26:11.781+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.781+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.781+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:26:11.781+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.782+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.783+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:26:11.784+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.784+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:26:11.784+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.785+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:26:11.785+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:26:11.789+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.789+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.790+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:26:11.790+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.790+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.790+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:26:11.790+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:26:11.791+01:00 ERROR 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:26:11.791+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:26:11.793+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.794+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:26:11.794+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:26:11.795+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:26:11.795+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:26:11.796+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.796+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:26:11.797+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:26:11.798+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:26:11.798+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:26:11.798+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:26:11.802+01:00  INFO 81720 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:11.769+01:00  INFO 81720 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:27:17.597+01:00  INFO 73128 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 73128 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:27:17.600+01:00  INFO 73128 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:27:18.079+01:00  INFO 73128 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:27:18.100+01:00  INFO 73128 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:27:19.352+01:00  INFO 73128 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:27:19.513+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:27:19.515+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:27:19.515+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160439511
2023-03-18T18:27:19.788+01:00  INFO 73128 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:27:19.791+01:00  INFO 73128 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:27:19.791+01:00  INFO 73128 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:27:19.792+01:00  INFO 73128 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:27:19.795+01:00  INFO 73128 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:27:19.796+01:00  INFO 73128 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:27:19.797+01:00  INFO 73128 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:27:19.822+01:00  INFO 73128 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask12-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask12
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:27:19.857+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:27:19.857+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:27:19.857+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160439857
2023-03-18T18:27:19.859+01:00  INFO 73128 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Subscribed to topic(s): topicTask1
2023-03-18T18:27:19.865+01:00  INFO 73128 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask12-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask12
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:27:19.872+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:27:19.873+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:27:19.873+01:00  INFO 73128 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160439872
2023-03-18T18:27:19.874+01:00  INFO 73128 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Subscribed to topic(s): topicTask2
2023-03-18T18:27:19.884+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:27:19.884+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:27:19.885+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:27:19.887+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:27:19.887+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:27:19.889+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:27:19.889+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:27:19.892+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] (Re-)joining group
2023-03-18T18:27:19.892+01:00  INFO 73128 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.761 seconds (process running for 3.127)
2023-03-18T18:27:19.892+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] (Re-)joining group
2023-03-18T18:27:19.910+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask12-2-a1da7fa7-a4dd-47a3-8f68-6ddb1134e19e
2023-03-18T18:27:19.910+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask12-1-0a0574eb-cdbb-479c-871c-de1bb8db7ef5
2023-03-18T18:27:19.910+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:27:19.911+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:27:19.911+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] (Re-)joining group
2023-03-18T18:27:19.911+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] (Re-)joining group
2023-03-18T18:27:19.914+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask12-1-0a0574eb-cdbb-479c-871c-de1bb8db7ef5', protocol='range'}
2023-03-18T18:27:19.914+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask12-2-a1da7fa7-a4dd-47a3-8f68-6ddb1134e19e', protocol='range'}
2023-03-18T18:27:19.921+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:27:19.922+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:27:19.926+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Finished assignment for group at generation 1: {consumer-springkafkatask12-1-0a0574eb-cdbb-479c-871c-de1bb8db7ef5=Assignment(partitions=[topicTask1-0, topicTask1-1]), consumer-springkafkatask12-2-a1da7fa7-a4dd-47a3-8f68-6ddb1134e19e=Assignment(partitions=[topicTask2-0])}
2023-03-18T18:27:19.933+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask12-2-a1da7fa7-a4dd-47a3-8f68-6ddb1134e19e', protocol='range'}
2023-03-18T18:27:19.933+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask12-1-0a0574eb-cdbb-479c-871c-de1bb8db7ef5', protocol='range'}
2023-03-18T18:27:19.934+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:27:19.934+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:27:19.938+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:27:19.938+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:27:19.948+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Found no committed offset for partition topicTask2-0
2023-03-18T18:27:19.949+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Found no committed offset for partition topicTask1-0
2023-03-18T18:27:19.949+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Found no committed offset for partition topicTask1-1
2023-03-18T18:27:19.961+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:27:19.961+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask12-2, groupId=springkafkatask12] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:27:19.964+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask12-1, groupId=springkafkatask12] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:27:19.964+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask12: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:27:19.964+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask12: partitions assigned: [topicTask2-0]
2023-03-18T18:27:20.020+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:27:20.020+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.021+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : stefan
2023-03-18T18:27:20.021+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.022+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : it is working
2023-03-18T18:27:20.022+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.022+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : are you ok?
2023-03-18T18:27:20.022+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.023+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : it is nice
2023-03-18T18:27:20.023+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.023+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : offset is growing
2023-03-18T18:27:20.023+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.023+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : what is heppen
2023-03-18T18:27:20.024+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.024+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : is still working?
2023-03-18T18:27:20.024+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.025+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : helloooooo
2023-03-18T18:27:20.025+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.025+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : again
2023-03-18T18:27:20.026+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.026+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:27:20.026+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.026+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:27:20.027+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.027+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:27:20.027+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.028+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:27:20.028+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.028+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:27:20.028+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.029+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e6
2023-03-18T18:27:20.030+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.030+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e7
2023-03-18T18:27:20.030+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.030+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e8
2023-03-18T18:27:20.031+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.031+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e9
2023-03-18T18:27:20.031+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.032+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : wtf
2023-03-18T18:27:20.032+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.032+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e10
2023-03-18T18:27:20.032+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.033+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e11
2023-03-18T18:27:20.033+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.033+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e12
2023-03-18T18:27:20.033+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.034+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"ime": "stefan"}
2023-03-18T18:27:20.034+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.034+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:27:20.034+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.034+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:27:20.035+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.035+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:27:20.035+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.035+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:27:20.035+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.035+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:27:20.036+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.036+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:27:20.036+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.036+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:27:20.036+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.037+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "100"}
2023-03-18T18:27:20.038+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.038+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "99999"}
2023-03-18T18:27:20.038+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.038+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"}
2023-03-18T18:27:20.038+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.039+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"}
2023-03-18T18:27:20.039+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.040+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"}
2023-03-18T18:27:20.040+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.040+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:27:20.040+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.041+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:27:20.041+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.041+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:27:20.041+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.041+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.041+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:27:20.041+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e6
2023-03-18T18:27:20.042+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.042+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : 67
2023-03-18T18:27:20.042+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.042+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.042+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:27:20.043+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:27:20.043+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.043+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.043+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"}
2023-03-18T18:27:20.043+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:27:20.043+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.043+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:27:20.043+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.044+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.044+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:27:20.044+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.044+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:27:20.044+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:27:20.044+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.045+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.045+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "100"}
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:27:20.045+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.046+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:27:20.046+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.046+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.046+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:27:20.046+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:27:20.046+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.046+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:27:20.046+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.047+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.047+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:27:20.047+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:27:20.047+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.047+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.047+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"}
2023-03-18T18:27:20.047+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:27:20.048+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.048+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.049+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.049+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.050+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.050+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.050+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.050+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.050+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.051+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.051+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.050+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:27:20.051+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.051+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.052+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.052+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.052+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.052+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:27:20.052+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.053+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.053+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.053+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.053+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.054+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.055+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.055+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.055+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.055+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.055+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.055+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.056+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.057+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.058+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.059+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.059+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.059+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.059+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.059+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.059+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.060+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.060+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.060+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.060+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.060+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.060+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.061+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.062+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.062+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.062+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.062+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.062+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.062+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.063+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.063+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.063+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.063+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.063+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.064+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.065+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.065+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.065+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.065+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.066+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.066+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.066+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.066+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.066+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.067+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.067+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.067+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.068+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.069+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.069+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.069+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.070+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.070+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.070+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.070+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.071+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.071+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.071+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.071+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.071+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.071+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.072+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.072+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.072+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.072+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.072+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.072+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.073+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.074+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.074+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.074+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.074+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.074+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.074+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.075+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.076+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.077+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.078+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.078+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.078+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.078+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.078+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.078+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.101+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.102+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:27:20.102+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:27:20.102+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:27:20.103+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.103+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:27:20.103+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.110+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.111+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:27:20.117+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:27:20.124+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:27:20.137+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:27:20.138+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:27:20.138+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160440137
2023-03-18T18:27:20.145+01:00  INFO 73128 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:27:20.146+01:00  INFO 73128 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:27:20.146+01:00  INFO 73128 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2006 with epoch 0
2023-03-18T18:27:20.153+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:27:20.156+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.156+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:27:20.156+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:27:20.156+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:27:20.157+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.157+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:27:20.158+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.158+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.158+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:27:20.159+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:27:20.160+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.160+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:27:20.160+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.161+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:27:20.161+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.161+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:27:20.161+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.161+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:27:20.162+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.162+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:27:20.162+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.162+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:27:20.162+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.162+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:27:20.163+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.163+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:27:20.163+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.163+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:27:20.163+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.163+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:27:20.164+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.164+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:27:20.167+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.168+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.168+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.169+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:27:20.172+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.172+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:27:20.173+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.173+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:27:20.174+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.174+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:27:20.175+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.175+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:27:20.176+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.176+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:27:20.176+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.177+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:27:20.177+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.177+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:27:20.177+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.177+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:27:20.177+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.177+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:27:20.178+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.178+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:27:20.179+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.179+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:27:20.180+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.180+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:27:20.180+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:27:20.180+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:27:20.181+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.181+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:27:20.181+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:27:20.181+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:27:20.182+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.182+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:27:20.182+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:27:20.182+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:27:20.183+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.183+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:27:20.183+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:27:20.183+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:27:20.184+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.185+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:27:20.185+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:27:20.186+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:27:20.187+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.188+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:27:20.188+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:27:20.188+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.188+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:27:20.189+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.189+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:27:20.189+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.189+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:27:20.192+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.192+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:27:20.193+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.193+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:27:20.194+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:27:20.194+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.194+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:27:20.195+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:27:20.195+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:27:20.195+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.195+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:27:20.195+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.195+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:27:20.196+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.196+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:27:20.196+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.196+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:27:20.197+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.197+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:27:20.197+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:27:20.198+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.198+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:27:20.198+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:27:20.198+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:27:20.198+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.199+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:27:20.199+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.199+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:27:20.199+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.200+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:27:20.201+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.202+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:27:20.202+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:27:20.204+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.204+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:27:20.205+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:27:20.205+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.205+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.205+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:27:20.206+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.206+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:27:20.206+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.207+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:27:20.207+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:27:20.207+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:27:20.208+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.208+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:27:20.208+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.208+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.208+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:27:20.209+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.209+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.209+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:27:20.210+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.210+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:27:20.210+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:27:20.210+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:27:20.211+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.212+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:27:20.212+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.212+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.212+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.212+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.213+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:27:20.213+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.214+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.214+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:27:20.215+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.216+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:27:20.217+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.217+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:27:20.217+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:27:20.218+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:27:20.219+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.219+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:27:20.219+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.219+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.219+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:27:20.220+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:27:20.221+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.222+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:27:20.223+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.224+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.224+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:27:20.224+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.224+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:27:20.225+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.225+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:27:20.226+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.226+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.226+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:27:20.226+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:27:20.227+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.227+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:27:20.228+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.229+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:27:20.230+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:27:20.231+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.231+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.232+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.232+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:27:20.232+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.233+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.233+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:27:20.234+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:27:20.235+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.236+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:27:20.236+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.236+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:27:20.236+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:27:20.238+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.238+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.239+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.239+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:27:20.239+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.239+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.239+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:27:20.240+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:27:20.241+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.241+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:27:20.242+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.242+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:27:20.242+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:27:20.244+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.244+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:27:20.245+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.245+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:27:20.245+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.245+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:27:20.246+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.246+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:27:20.246+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.246+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:27:20.247+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:27:20.248+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.248+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:27:20.248+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.248+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.249+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:27:20.249+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.249+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.250+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:27:20.251+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.252+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:27:20.252+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:27:20.253+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.253+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:27:20.253+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:27:20.254+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:27:20.255+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.255+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:27:20.255+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.255+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:27:20.255+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.256+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.256+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:27:20.256+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:27:20.259+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.260+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:27:20.261+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:27:20.262+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.262+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:27:20.262+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:27:20.262+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.263+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:27:20.263+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:27:20.268+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:27:20.269+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.270+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:27:20.270+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.270+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.270+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:27:20.270+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.271+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.271+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:27:20.272+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.272+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:27:20.272+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.272+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:27:20.272+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:27:20.274+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.275+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.275+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.275+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:27:20.275+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.275+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.276+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:27:20.276+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:27:20.277+01:00 ERROR 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:27:20.277+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:27:20.278+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.279+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:27:20.279+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:27:20.281+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:27:20.281+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:27:20.282+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.282+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.282+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:27:20.283+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:27:20.284+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:27:20.284+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:27:20.284+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:27:20.293+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:27:20.294+01:00  INFO 73128 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:20.253+01:00  INFO 73128 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:28:30.507+01:00  INFO 68764 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 68764 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:28:30.511+01:00  INFO 68764 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:28:31.000+01:00  INFO 68764 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:28:31.021+01:00  INFO 68764 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:28:32.201+01:00  INFO 68764 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:28:32.346+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:32.347+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:32.348+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160512345
2023-03-18T18:28:32.614+01:00  INFO 68764 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:28:32.618+01:00  INFO 68764 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:28:32.618+01:00  INFO 68764 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:28:32.618+01:00  INFO 68764 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:28:32.622+01:00  INFO 68764 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:28:32.623+01:00  INFO 68764 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:28:32.623+01:00  INFO 68764 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:28:32.648+01:00  INFO 68764 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask_3-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask_3
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:28:32.687+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:32.688+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:32.688+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160512687
2023-03-18T18:28:32.691+01:00  INFO 68764 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Subscribed to topic(s): topicTask1
2023-03-18T18:28:32.698+01:00  INFO 68764 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask_3-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask_3
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:28:32.704+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:32.705+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:32.705+01:00  INFO 68764 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160512704
2023-03-18T18:28:32.706+01:00  INFO 68764 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Subscribed to topic(s): topicTask2
2023-03-18T18:28:32.716+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:28:32.716+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:28:32.717+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:28:32.718+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:28:32.719+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:28:32.720+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:28:32.720+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:28:32.723+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:32.723+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:32.723+01:00  INFO 68764 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.642 seconds (process running for 3.026)
2023-03-18T18:28:32.742+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask_3-2-0918dd1e-241d-4828-9e8c-304b3391cc5f
2023-03-18T18:28:32.742+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask_3-1-038260e0-1b33-4880-9900-44b1c612e2ea
2023-03-18T18:28:32.743+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:28:32.743+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:28:32.743+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:32.743+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:32.747+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask_3-1-038260e0-1b33-4880-9900-44b1c612e2ea', protocol='range'}
2023-03-18T18:28:32.747+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Successfully joined group with generation Generation{generationId=1, memberId='consumer-springkafkatask_3-2-0918dd1e-241d-4828-9e8c-304b3391cc5f', protocol='range'}
2023-03-18T18:28:32.753+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:28:32.753+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:28:32.756+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Finished assignment for group at generation 1: {consumer-springkafkatask_3-2-0918dd1e-241d-4828-9e8c-304b3391cc5f=Assignment(partitions=[topicTask2-0]), consumer-springkafkatask_3-1-038260e0-1b33-4880-9900-44b1c612e2ea=Assignment(partitions=[topicTask1-0, topicTask1-1])}
2023-03-18T18:28:32.763+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask_3-1-038260e0-1b33-4880-9900-44b1c612e2ea', protocol='range'}
2023-03-18T18:28:32.763+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Successfully synced group in generation Generation{generationId=1, memberId='consumer-springkafkatask_3-2-0918dd1e-241d-4828-9e8c-304b3391cc5f', protocol='range'}
2023-03-18T18:28:32.764+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Notifying assignor about the new Assignment(partitions=[topicTask2-0])
2023-03-18T18:28:32.764+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1])
2023-03-18T18:28:32.766+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Adding newly assigned partitions: topicTask2-0
2023-03-18T18:28:32.766+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Adding newly assigned partitions: topicTask1-0, topicTask1-1
2023-03-18T18:28:32.782+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Found no committed offset for partition topicTask1-0
2023-03-18T18:28:32.782+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Found no committed offset for partition topicTask2-0
2023-03-18T18:28:32.782+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Found no committed offset for partition topicTask1-1
2023-03-18T18:28:32.796+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:28:32.796+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Resetting offset for partition topicTask2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:28:32.798+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Resetting offset for partition topicTask1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-18T18:28:32.799+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask_3: partitions assigned: [topicTask2-0]
2023-03-18T18:28:32.799+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : springkafkatask_3: partitions assigned: [topicTask1-0, topicTask1-1]
2023-03-18T18:28:32.844+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.844+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1679002982175, serialized key size = -1, serialized value size = 6, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = stefan)
2023-03-18T18:28:32.845+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : stefan
2023-03-18T18:28:32.845+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.845+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : it is working
2023-03-18T18:28:32.845+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.846+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : are you ok?
2023-03-18T18:28:32.846+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.846+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : it is nice
2023-03-18T18:28:32.846+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.846+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : offset is growing
2023-03-18T18:28:32.847+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.847+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : what is heppen
2023-03-18T18:28:32.847+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.847+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : is still working?
2023-03-18T18:28:32.848+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.848+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : helloooooo
2023-03-18T18:28:32.848+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.848+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : again
2023-03-18T18:28:32.848+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.848+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:28:32.849+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.849+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:28:32.849+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.849+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:28:32.849+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.849+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:28:32.850+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.850+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:28:32.850+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.851+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e6
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e7
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e8
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e9
2023-03-18T18:28:32.852+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : wtf
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e10
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e11
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e12
2023-03-18T18:28:32.853+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.854+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"ime": "stefan"}
2023-03-18T18:28:32.854+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.854+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:28:32.854+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.854+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:28:32.855+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.856+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:28:32.856+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.856+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:28:32.857+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.857+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:28:32.857+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.857+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:28:32.858+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.858+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:28:32.858+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.858+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:28:32.859+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.859+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:28:32.859+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.859+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"firstName":"John", "lastName":"Doe"}
2023-03-18T18:28:32.859+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.860+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "100"}
2023-03-18T18:28:32.860+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.860+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "99999"}
2023-03-18T18:28:32.860+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.860+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"}
2023-03-18T18:28:32.861+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.861+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"}
2023-03-18T18:28:32.861+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.861+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"}
2023-03-18T18:28:32.861+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.862+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e6
2023-03-18T18:28:32.863+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.863+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : 67
2023-03-18T18:28:32.863+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.863+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"}
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.864+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e1
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1679003213564, serialized key size = -1, serialized value size = 13, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is working)
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.864+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e2
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:28:32.866+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 2, CreateTime = 1679003530954, serialized key size = -1, serialized value size = 11, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = are you ok?)
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "50", "callId" : "100"}
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 3, CreateTime = 1679003560380, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = it is nice)
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e3
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e4
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 4, CreateTime = 1679003593913, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = offset is growing)
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : e5
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.866+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"}
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 5, CreateTime = 1679005634036, serialized key size = -1, serialized value size = 14, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = what is heppen)
2023-03-18T18:28:32.866+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"}
2023-03-18T18:28:32.867+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1679005644567, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = is still working?)
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.867+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 7, CreateTime = 1679005893020, serialized key size = -1, serialized value size = 10, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = helloooooo)
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.867+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.867+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 8, CreateTime = 1679005899472, serialized key size = -1, serialized value size = 5, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = again)
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.868+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.868+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 9, CreateTime = 1679006583398, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.869+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 10, CreateTime = 1679006588874, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.869+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.869+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 11, CreateTime = 1679070637715, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.870+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 12, CreateTime = 1679070645278, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.870+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.870+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 13, CreateTime = 1679070768147, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:28:32.871+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.871+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.871+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.871+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.871+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.872+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.873+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.873+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.873+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.873+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.873+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.873+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.874+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.874+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.874+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.874+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.874+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.874+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.875+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.875+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.875+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.875+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.875+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.876+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.877+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.878+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.878+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.878+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.878+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.878+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.878+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.879+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.880+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.881+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.882+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.883+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.883+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.883+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.883+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.883+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.883+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.884+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.885+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.885+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.885+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.885+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.885+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.886+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.887+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.888+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.889+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.890+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.891+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.892+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.892+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.892+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.892+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:32.892+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.893+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.894+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.895+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:32.915+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:32.915+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:28:32.915+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:28:32.916+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 14, CreateTime = 1679070799657, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "100"})
2023-03-18T18:28:32.917+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:32.917+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-18T18:28:32.917+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:32.922+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.922+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:28:32.931+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-18T18:28:32.940+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-18T18:28:32.955+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:32.955+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:32.955+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160512955
2023-03-18T18:28:32.963+01:00  INFO 68764 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:28:32.963+01:00  INFO 68764 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:28:32.964+01:00  INFO 68764 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 2007 with epoch 0
2023-03-18T18:28:32.973+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1679070825611, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99"})
2023-03-18T18:28:32.974+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:32.974+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:28:32.974+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99  ]
2023-03-18T18:28:32.975+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1679070829375, serialized key size = -1, serialized value size = 59, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "250", "callId" : "99"})
2023-03-18T18:28:32.975+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:32.975+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=99  ]
2023-03-18T18:28:32.975+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:32.975+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.975+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 99
2023-03-18T18:28:32.978+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 0, CreateTime = 1679006686376, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:28:32.978+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.978+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 1, CreateTime = 1679006692330, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:28:32.978+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.979+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 2, CreateTime = 1679006739929, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:28:32.979+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.979+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 3, CreateTime = 1679006742047, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:28:32.979+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.979+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 4, CreateTime = 1679006761713, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e7)
2023-03-18T18:28:32.980+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.980+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 5, CreateTime = 1679006773363, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e8)
2023-03-18T18:28:32.981+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.981+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 6, CreateTime = 1679006814765, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e9)
2023-03-18T18:28:32.981+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.981+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 7, CreateTime = 1679006819959, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = wtf)
2023-03-18T18:28:32.981+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.981+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 8, CreateTime = 1679006845118, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e10)
2023-03-18T18:28:32.982+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.982+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 9, CreateTime = 1679006849400, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e11)
2023-03-18T18:28:32.982+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.982+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 10, CreateTime = 1679006879556, serialized key size = -1, serialized value size = 3, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e12)
2023-03-18T18:28:32.983+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.983+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 11, CreateTime = 1679006953828, serialized key size = -1, serialized value size = 17, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"ime": "stefan"})
2023-03-18T18:28:32.986+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.987+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.987+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:32.987+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=99, callStartTimestamp=50, callEndTimestamp=250, callDuration=200]
2023-03-18T18:28:32.992+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.992+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 12, CreateTime = 1679006991827, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:28:32.993+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.994+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 13, CreateTime = 1679007003806, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:28:32.995+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.995+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 14, CreateTime = 1679007016319, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:28:32.996+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.996+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 15, CreateTime = 1679007025595, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:28:32.997+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.998+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 16, CreateTime = 1679007200030, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:28:32.998+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.998+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 17, CreateTime = 1679007204668, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:28:32.998+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.999+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 18, CreateTime = 1679007218827, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:28:32.999+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.999+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 19, CreateTime = 1679007222452, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:28:32.999+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.999+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 20, CreateTime = 1679007234361, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:28:32.999+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:32.999+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 21, CreateTime = 1679007260482, serialized key size = -1, serialized value size = 38, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"firstName":"John", "lastName":"Doe"})
2023-03-18T18:28:33.000+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.001+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 22, CreateTime = 1679007373930, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:28:33.002+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.002+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:28:33.002+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:28:33.002+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 23, CreateTime = 1679007394134, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "99999"})
2023-03-18T18:28:33.003+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.003+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:28:33.003+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=99999  ]
2023-03-18T18:28:33.003+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 24, CreateTime = 1679007419755, serialized key size = -1, serialized value size = 64, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "-88888"})
2023-03-18T18:28:33.004+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.004+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:28:33.004+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=-88888  ]
2023-03-18T18:28:33.004+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 25, CreateTime = 1679007449005, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto"})
2023-03-18T18:28:33.005+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.005+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:28:33.005+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto  ]
2023-03-18T18:28:33.005+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 26, CreateTime = 1679007463418, serialized key size = -1, serialized value size = 66, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "nesto333"})
2023-03-18T18:28:33.006+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.006+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:28:33.006+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=nesto333  ]
2023-03-18T18:28:33.006+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 27, CreateTime = 1679007475461, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:28:33.007+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.007+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:28:33.007+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 28, CreateTime = 1679007887110, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:28:33.007+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.008+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 29, CreateTime = 1679007891327, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:28:33.008+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.008+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 30, CreateTime = 1679008297964, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e6)
2023-03-18T18:28:33.008+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.008+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 31, CreateTime = 1679008305787, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = 67)
2023-03-18T18:28:33.012+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.012+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 32, CreateTime = 1679008542099, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:28:33.013+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.013+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:28:33.014+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 33, CreateTime = 1679008625416, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:28:33.014+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.015+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:28:33.015+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:28:33.015+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 34, CreateTime = 1679008783433, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e1)
2023-03-18T18:28:33.015+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.016+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 35, CreateTime = 1679008791522, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e2)
2023-03-18T18:28:33.016+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.016+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 36, CreateTime = 1679008823350, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:28:33.016+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.016+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 37, CreateTime = 1679008833444, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:28:33.017+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.017+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 38, CreateTime = 1679008864198, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:28:33.017+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.017+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:28:33.018+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 39, CreateTime = 1679008934645, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "50", "callId" : "100"})
2023-03-18T18:28:33.018+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.018+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-18T18:28:33.018+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:28:33.018+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 40, CreateTime = 1679009078173, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e3)
2023-03-18T18:28:33.019+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.019+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 41, CreateTime = 1679009085200, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e4)
2023-03-18T18:28:33.019+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.019+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 42, CreateTime = 1679009098587, serialized key size = -1, serialized value size = 2, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e5)
2023-03-18T18:28:33.020+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.020+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 43, CreateTime = 1679009107736, serialized key size = -1, serialized value size = 73, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-50", "callId" : "nesto777777777"})
2023-03-18T18:28:33.020+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.021+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:28:33.021+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 44, CreateTime = 1679009125765, serialized key size = -1, serialized value size = 69, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "nesto88888"})
2023-03-18T18:28:33.022+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.022+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=nesto88888  ]
2023-03-18T18:28:33.023+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:28:33.023+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 45, CreateTime = 1679045824804, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:33.023+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.023+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 46, CreateTime = 1679045840509, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = w)
2023-03-18T18:28:33.024+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.024+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 47, CreateTime = 1679045863537, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:28:33.025+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.025+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:28:33.025+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:28:33.025+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 48, CreateTime = 1679045895772, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:28:33.026+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.026+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:28:33.026+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.026+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:33.027+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:28:33.027+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 49, CreateTime = 1679046027999, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:33.028+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.028+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 50, CreateTime = 1679046039430, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "660", "callId" : "8888"})
2023-03-18T18:28:33.029+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.029+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:28:33.029+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=660, callId=8888  ]
2023-03-18T18:28:33.030+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 51, CreateTime = 1679046051131, serialized key size = -1, serialized value size = 61, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "8888"})
2023-03-18T18:28:33.033+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.034+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:33.035+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.036+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=8888  ]
2023-03-18T18:28:33.037+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.037+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:33.037+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 8888
2023-03-18T18:28:33.038+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 52, CreateTime = 1679046221190, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:33.038+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.038+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 53, CreateTime = 1679046241713, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "100"})
2023-03-18T18:28:33.039+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.041+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=100  ]
2023-03-18T18:28:33.042+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:28:33.042+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 54, CreateTime = 1679046249813, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "100"})
2023-03-18T18:28:33.043+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.043+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=100  ]
2023-03-18T18:28:33.044+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.044+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.044+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-18T18:28:33.044+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 55, CreateTime = 1679046309426, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "101"})
2023-03-18T18:28:33.044+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.044+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=8888, callStartTimestamp=660, callEndTimestamp=700, callDuration=40]
2023-03-18T18:28:33.045+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.046+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:28:33.046+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.049+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=101  ]
2023-03-18T18:28:33.050+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.050+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 56, CreateTime = 1679046315468, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "101"})
2023-03-18T18:28:33.050+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=100, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.051+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.051+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=101  ]
2023-03-18T18:28:33.051+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.052+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.052+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-18T18:28:33.052+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 57, CreateTime = 1679046396319, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "102"})
2023-03-18T18:28:33.053+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.054+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:28:33.054+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.054+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=102  ]
2023-03-18T18:28:33.055+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 58, CreateTime = 1679046399528, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "102"})
2023-03-18T18:28:33.061+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.062+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=102  ]
2023-03-18T18:28:33.062+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.062+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.062+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-18T18:28:33.063+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 59, CreateTime = 1679046426470, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "103"})
2023-03-18T18:28:33.063+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.064+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=101, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.064+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.064+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:28:33.064+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.065+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=103  ]
2023-03-18T18:28:33.065+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 60, CreateTime = 1679046429595, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "103"})
2023-03-18T18:28:33.066+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.067+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=103  ]
2023-03-18T18:28:33.067+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.067+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.067+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-18T18:28:33.068+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 61, CreateTime = 1679046435538, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "104"})
2023-03-18T18:28:33.069+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.069+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:28:33.070+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.070+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.070+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=104  ]
2023-03-18T18:28:33.071+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=102, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.071+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 62, CreateTime = 1679046438089, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "105"})
2023-03-18T18:28:33.072+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.072+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:28:33.073+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=200, callId=105  ]
2023-03-18T18:28:33.073+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 63, CreateTime = 1679046454135, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "106"})
2023-03-18T18:28:33.074+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.074+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:28:33.074+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.074+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=106  ]
2023-03-18T18:28:33.075+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 64, CreateTime = 1679046458695, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "200", "callId" : "106"})
2023-03-18T18:28:33.076+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.077+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=200, callId=106  ]
2023-03-18T18:28:33.077+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.077+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.077+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-18T18:28:33.078+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 65, CreateTime = 1679048851089, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:33.079+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.081+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 66, CreateTime = 1679048870300, serialized key size = -1, serialized value size = 63, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "-200", "callId" : "110"})
2023-03-18T18:28:33.084+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.084+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-18T18:28:33.084+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 67, CreateTime = 1679048881173, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "110"})
2023-03-18T18:28:33.085+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.085+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:28:33.086+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.086+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=103, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.085+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=110  ]
2023-03-18T18:28:33.087+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 68, CreateTime = 1679048902004, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "110"})
2023-03-18T18:28:33.088+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.088+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=110  ]
2023-03-18T18:28:33.088+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.088+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:33.089+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 110
2023-03-18T18:28:33.089+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 69, CreateTime = 1679048913763, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "300", "callId" : "111"})
2023-03-18T18:28:33.092+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.092+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:28:33.093+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=300, callId=111  ]
2023-03-18T18:28:33.093+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 70, CreateTime = 1679048921342, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "111"})
2023-03-18T18:28:33.095+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.095+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=111  ]
2023-03-18T18:28:33.096+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Receive duplicate event
2023-03-18T18:28:33.096+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 71, CreateTime = 1679048924508, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "111"})
2023-03-18T18:28:33.097+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.098+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.099+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=106, callStartTimestamp=200, callEndTimestamp=700, callDuration=500]
2023-03-18T18:28:33.099+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=111  ]
2023-03-18T18:28:33.099+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.099+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:33.099+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 111
2023-03-18T18:28:33.100+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 72, CreateTime = 1679049614846, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:33.100+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.101+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 73, CreateTime = 1679049622589, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "112"})
2023-03-18T18:28:33.102+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.103+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:28:33.103+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.103+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=112  ]
2023-03-18T18:28:33.103+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 74, CreateTime = 1679049626162, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "112"})
2023-03-18T18:28:33.105+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.106+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=112  ]
2023-03-18T18:28:33.107+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.107+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:33.107+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.107+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 112
2023-03-18T18:28:33.107+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=110, callStartTimestamp=300, callEndTimestamp=700, callDuration=400]
2023-03-18T18:28:33.108+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 75, CreateTime = 1679052370447, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e)
2023-03-18T18:28:33.111+01:00 ERROR 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : Message need be in JSON format! 
2023-03-18T18:28:33.111+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 76, CreateTime = 1679052385843, serialized key size = -1, serialized value size = 60, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "END", "timestamp" : "700", "callId" : "200"})
2023-03-18T18:28:33.113+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.113+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:28:33.113+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-18T18:28:33.114+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=700, callId=200  ]
2023-03-18T18:28:33.114+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.SpringKafkaTaskApplication      : ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 77, CreateTime = 1679052389575, serialized key size = -1, serialized value size = 62, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"callStatus": "START", "timestamp" : "301", "callId" : "200"})
2023-03-18T18:28:33.115+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-18T18:28:33.116+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=301, callId=200  ]
2023-03-18T18:28:33.116+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-18T18:28:33.116+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:33.116+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-18T18:28:33.117+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.117+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=111, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:33.126+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.126+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=112, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:33.126+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : Messages from topic 2 
2023-03-18T18:28:33.126+01:00  INFO 68764 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.s.task.SpringKafkaTaskApplication      : ResponseMsg [callId=200, callStartTimestamp=301, callEndTimestamp=700, callDuration=399]
2023-03-18T18:28:40.364+01:00  INFO 72440 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 72440 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-18T18:28:40.368+01:00  INFO 72440 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-18T18:28:40.886+01:00  INFO 72440 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2023-03-18T18:28:40.907+01:00  INFO 72440 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-18T18:28:42.151+01:00  INFO 72440 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-18T18:28:42.316+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:42.318+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:42.318+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160522314
2023-03-18T18:28:42.608+01:00  INFO 72440 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-18T18:28:42.614+01:00  INFO 72440 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-18T18:28:42.614+01:00  INFO 72440 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-18T18:28:42.614+01:00  INFO 72440 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-18T18:28:42.619+01:00  INFO 72440 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2023-03-18T18:28:42.619+01:00  INFO 72440 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2023-03-18T18:28:42.620+01:00  INFO 72440 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2023-03-18T18:28:42.646+01:00  INFO 72440 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask_3-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask_3
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:28:42.686+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:42.686+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:42.686+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160522686
2023-03-18T18:28:42.689+01:00  INFO 72440 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Subscribed to topic(s): topicTask1
2023-03-18T18:28:42.696+01:00  INFO 72440 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask_3-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask_3
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-18T18:28:42.702+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-18T18:28:42.703+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-18T18:28:42.703+01:00  INFO 72440 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1679160522702
2023-03-18T18:28:42.704+01:00  INFO 72440 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Subscribed to topic(s): topicTask2
2023-03-18T18:28:42.713+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:28:42.713+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to fP5FeDXtREarfdKfWe2h3Q
2023-03-18T18:28:42.714+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to fd4vOPB3T9CiP1d2Epi0Lw
2023-03-18T18:28:42.715+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:28:42.715+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Cluster ID: DCKNfptMQ82ihbYja0cMrg
2023-03-18T18:28:42.717+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:28:42.717+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-18T18:28:42.718+01:00  INFO 72440 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.855 seconds (process running for 3.247)
2023-03-18T18:28:42.720+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:42.720+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:42.735+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask_3-2-71323532-52c4-437f-a4f8-3fe23e6c4d51
2023-03-18T18:28:42.735+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask_3-1-cb274d9b-623a-4cd9-aa91-8f61eadfa9ea
2023-03-18T18:28:42.736+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:28:42.736+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-18T18:28:42.736+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-2, groupId=springkafkatask_3] (Re-)joining group
2023-03-18T18:28:42.736+01:00  INFO 72440 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask_3-1, groupId=springkafkatask_3] (Re-)joining group
