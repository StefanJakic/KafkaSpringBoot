2023-03-06T00:00:07.926+01:00 ERROR 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=196, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6129b6ee, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678057206865, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 196, CreateTime = 1678057206865, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=0867ee19-9171-780a-aae4-4c3934aabf0d, sourceData=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 196, CreateTime = 1678057206865, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1678057207926}] for original GenericMessage [payload=e, headers={kafka_offset=196, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6129b6ee, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678057206865, kafka_groupId=springkafkatask33';}]
2023-03-06T00:00:19.616+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:00:19.617+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=56  ]
2023-03-06T00:00:19.617+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=56  ]
2023-03-06T00:00:30.865+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:00:30.865+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=56  ]
2023-03-06T00:00:30.866+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:00:30.866+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@591499b
2023-03-06T00:00:30.866+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 56
2023-03-06T00:00:30.915+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-06T00:00:30.924+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-06T00:00:30.939+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T00:00:30.940+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T00:00:30.940+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678057230939
2023-03-06T00:00:30.947+01:00  INFO 123800 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T00:00:30.948+01:00  INFO 123800 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T00:00:30.948+01:00  INFO 123800 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T00:00:30.948+01:00  INFO 123800 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-06T00:00:30.950+01:00  INFO 123800 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 28007 with epoch 0
2023-03-06T00:00:30.965+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@58eb2a32
2023-03-06T00:00:30.965+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:00:30.976+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-06T00:00:31.314+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31041eda
2023-03-06T00:00:31.316+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-06T00:01:40.762+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:01:40.762+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=33333333  ]
2023-03-06T00:01:40.763+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T00:01:40.763+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=33333333  ]
2023-03-06T00:02:01.991+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:02:01.992+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=57  ]
2023-03-06T00:02:01.992+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T00:02:01.992+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=57  ]
2023-03-06T00:02:07.707+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:02:07.707+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=57  ]
2023-03-06T00:02:07.708+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:02:07.708+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@6e4ea697
2023-03-06T00:02:07.708+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 57
2023-03-06T00:02:07.710+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@d06e920
2023-03-06T00:02:07.710+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:02:40.771+01:00  INFO 123800 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=202, callId=33333333  ]
2023-03-06T00:03:02.000+01:00  INFO 123800 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=202, callId=57  ]
2023-03-06T00:04:40.778+01:00  INFO 123800 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-06T00:04:40.778+01:00  INFO 123800 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 33333333
2023-03-06T00:05:02.016+01:00  INFO 123800 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-06T00:08:52.839+01:00  INFO 123800 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Node -1 disconnected.
2023-03-06T00:09:31.017+01:00  INFO 123800 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2023-03-06T00:42:46.550+01:00  INFO 109360 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 109360 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-06T00:42:46.553+01:00  INFO 109360 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-06T00:42:47.109+01:00  INFO 109360 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-06T00:42:48.487+01:00  INFO 109360 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-06T00:42:48.708+01:00  INFO 109360 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T00:42:48.709+01:00  INFO 109360 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T00:42:48.709+01:00  INFO 109360 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678059768706
2023-03-06T00:42:49.050+01:00  INFO 109360 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-06T00:42:49.058+01:00  INFO 109360 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-06T00:42:49.058+01:00  INFO 109360 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-06T00:42:49.059+01:00  INFO 109360 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-06T00:42:49.062+01:00  INFO 109360 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.exceptionChannel' has 1 subscriber(s).
2023-03-06T00:42:49.063+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'errorChannel.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method errorChannel'
2023-03-06T00:42:49.063+01:00  INFO 109360 --- [main] c.springkafka.task.EventMessageHandler   : started bean 'eventMessageHandler' for component 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'com.springkafka.task.EventKafkaFlow.eventMessageHandler()'
2023-03-06T00:42:49.064+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'fromKafkaFlow.channel#0' channel
2023-03-06T00:42:49.064+01:00  INFO 109360 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#0' has 1 subscriber(s).
2023-03-06T00:42:49.064+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T00:42:49.064+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {filter} as a subscriber to the 'fromKafkaFlow.channel#1' channel
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#1' has 1 subscriber(s).
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {} as a subscriber to the 'fromKafkaFlow.channel#2' channel
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#2' has 1 subscriber(s).
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {object-to-json-transformer} as a subscriber to the 'fromKafkaFlow.channel#3' channel
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#3' has 1 subscriber(s).
2023-03-06T00:42:49.065+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#3'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T00:42:49.066+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {kafka:outbound-channel-adapter} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-06T00:42:49.066+01:00  INFO 109360 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 1 subscriber(s).
2023-03-06T00:42:49.066+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toKafkaFlow'
2023-03-06T00:42:49.066+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-06T00:42:49.066+01:00  INFO 109360 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 2 subscriber(s).
2023-03-06T00:42:49.066+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-06T00:42:49.067+01:00  INFO 109360 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.toDBFlow.channel#0' has 1 subscriber(s).
2023-03-06T00:42:49.067+01:00  INFO 109360 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-06T00:42:49.091+01:00  INFO 109360 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33';-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33';
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-06T00:42:49.130+01:00  INFO 109360 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T00:42:49.131+01:00  INFO 109360 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T00:42:49.131+01:00  INFO 109360 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678059769130
2023-03-06T00:42:49.133+01:00  INFO 109360 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Subscribed to topic(s): topicTask1
2023-03-06T00:42:49.139+01:00  INFO 109360 --- [main] s.i.k.i.KafkaMessageDrivenChannelAdapter : started bean 'fromKafkaFlow.kafka:message-driven-channel-adapter#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T00:42:49.149+01:00  INFO 109360 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 3.068 seconds (process running for 3.457)
2023-03-06T00:42:49.157+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-06T00:42:49.157+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-2 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-06T00:42:49.158+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-06T00:42:49.159+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-06T00:42:49.160+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-06T00:42:49.163+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-06T00:42:49.182+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33';-1-02b5b59f-a616-4910-b7c7-1cb7dc9f9b5c
2023-03-06T00:42:49.183+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-06T00:42:49.183+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-06T00:43:17.845+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully joined group with generation Generation{generationId=90, memberId='consumer-springkafkatask33';-1-02b5b59f-a616-4910-b7c7-1cb7dc9f9b5c', protocol='range'}
2023-03-06T00:43:17.847+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Finished assignment for group at generation 90: {consumer-springkafkatask33';-1-02b5b59f-a616-4910-b7c7-1cb7dc9f9b5c=Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])}
2023-03-06T00:43:17.854+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully synced group in generation Generation{generationId=90, memberId='consumer-springkafkatask33';-1-02b5b59f-a616-4910-b7c7-1cb7dc9f9b5c', protocol='range'}
2023-03-06T00:43:17.856+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])
2023-03-06T00:43:17.859+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Adding newly assigned partitions: topicTask1-0, topicTask1-1, topicTask1-2
2023-03-06T00:43:17.871+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=182, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-06T00:43:17.872+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-2 to the committed offset FetchPosition{offset=135, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-06T00:43:17.872+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=202, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-06T00:43:17.873+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] s.k.l.ConcurrentMessageListenerContainer : springkafkatask33';: partitions assigned: [topicTask1-0, topicTask1-1, topicTask1-2]
2023-03-06T00:43:17.938+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=202, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1cbb472b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678059785967, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 202, CreateTime = 1678059785967, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=42d3c496-de96-b70b-de30-c740fc1df8b1, sourceData=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 202, CreateTime = 1678059785967, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1678059797938}] for original GenericMessage [payload=e, headers={kafka_offset=202, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1cbb472b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678059785967, kafka_groupId=springkafkatask33';}]
2023-03-06T00:43:23.954+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=203, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1cbb472b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678059802942, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 203, CreateTime = 1678059802942, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=985e5b6a-2e06-5fe2-3dfb-bb58ca7d006c, sourceData=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 203, CreateTime = 1678059802942, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1678059803954}] for original GenericMessage [payload=e, headers={kafka_offset=203, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1cbb472b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678059802942, kafka_groupId=springkafkatask33';}]
2023-03-06T00:43:34.636+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:43:34.636+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=58  ]
2023-03-06T00:43:34.637+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=58  ]
2023-03-06T00:43:55.669+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:43:55.669+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=58  ]
2023-03-06T00:43:55.670+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:43:55.670+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@18ab1234
2023-03-06T00:43:55.670+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 58
2023-03-06T00:43:55.718+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-06T00:43:55.728+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-06T00:43:55.748+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T00:43:55.749+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T00:43:55.750+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678059835748
2023-03-06T00:43:55.757+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T00:43:55.757+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T00:43:55.757+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T00:43:55.757+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-06T00:43:55.758+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 28008 with epoch 0
2023-03-06T00:43:55.777+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@7ba6d23a
2023-03-06T00:43:55.778+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:43:55.788+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-06T00:43:55.997+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e9d10b8
2023-03-06T00:43:56.000+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-06T00:44:03.273+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:44:03.274+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=88888888  ]
2023-03-06T00:44:03.274+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T00:44:03.275+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=88888888  ]
2023-03-06T00:44:25.869+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:44:25.869+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=59  ]
2023-03-06T00:44:25.870+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T00:44:25.870+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=59  ]
2023-03-06T00:44:38.337+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:44:38.338+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=59  ]
2023-03-06T00:44:38.338+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:44:38.338+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@48fc25a4
2023-03-06T00:44:38.338+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 59
2023-03-06T00:44:38.340+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@68049224
2023-03-06T00:44:38.340+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:45:03.284+01:00  INFO 109360 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=202, callId=88888888  ]
2023-03-06T00:46:06.173+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:46:06.173+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=88888888  ]
2023-03-06T00:46:06.174+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:46:06.174+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@6a3a1491
2023-03-06T00:46:06.174+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 88888888
2023-03-06T00:46:06.175+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@dfa41c9
2023-03-06T00:46:06.175+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:46:31.187+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:46:31.188+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=9999999999999999999  ]
2023-03-06T00:46:31.188+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T00:46:31.188+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=9999999999999999999  ]
2023-03-06T00:46:46.267+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:46:46.268+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=60  ]
2023-03-06T00:46:46.268+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=60  ]
2023-03-06T00:46:51.651+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:46:51.651+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=60  ]
2023-03-06T00:46:51.651+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:46:51.651+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@41a377e0
2023-03-06T00:46:51.651+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 60
2023-03-06T00:46:51.653+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@2e7bbeab
2023-03-06T00:46:51.653+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:47:31.198+01:00  INFO 109360 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=202, callId=9999999999999999999  ]
2023-03-06T00:49:31.202+01:00  INFO 109360 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 9999999999999999999
2023-03-06T00:49:31.203+01:00  INFO 109360 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message is deleted via schedule
2023-03-06T00:51:27.157+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:51:27.157+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=61  ]
2023-03-06T00:51:27.158+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T00:51:27.158+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=61  ]
2023-03-06T00:51:36.238+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:51:36.238+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=61  ]
2023-03-06T00:51:36.239+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:51:36.239+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@2b962309
2023-03-06T00:51:36.239+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 61
2023-03-06T00:51:36.240+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@18c28f3d
2023-03-06T00:51:36.240+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:51:49.243+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Node -1 disconnected.
2023-03-06T00:52:14.832+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:52:14.832+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-06T00:52:27.291+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:52:27.291+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-06T00:52:33.446+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:52:33.446+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId==  ]
2023-03-06T00:52:33.446+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId==  ]
2023-03-06T00:52:44.999+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:52:44.999+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId==  ]
2023-03-06T00:52:45.000+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:52:45.000+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@4414325
2023-03-06T00:52:45.000+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId =
2023-03-06T00:52:45.001+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@3dd2f78c
2023-03-06T00:52:45.001+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T00:53:15.009+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2023-03-06T00:57:33.064+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:57:33.065+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=asd  ]
2023-03-06T00:57:33.065+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=asd  ]
2023-03-06T00:57:41.871+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T00:57:41.871+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=asd  ]
2023-03-06T00:57:41.872+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T00:57:41.872+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@1dfac89e
2023-03-06T00:57:41.872+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId asd
2023-03-06T00:57:41.873+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@227fe58
2023-03-06T00:57:41.874+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:01:35.563+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:01:35.564+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-06T01:01:53.377+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:01:53.378+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : Invalid message inputs!
2023-03-06T01:10:37.032+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:10:37.032+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=300  ]
2023-03-06T01:10:37.033+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=300  ]
2023-03-06T01:10:43.039+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:10:43.039+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=300  ]
2023-03-06T01:10:43.039+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T01:10:43.039+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@566fe868
2023-03-06T01:10:43.039+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 300
2023-03-06T01:10:43.042+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T01:10:43.043+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T01:10:43.043+01:00  INFO 109360 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T01:10:43.047+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@1a0b704
2023-03-06T01:10:43.047+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:10:43.054+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5e9d10b8 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.055+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@26a755fd (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.055+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@ffb196d (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.056+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3dd5715d (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.056+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@39bafc31 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.056+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@25ae5e46 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.057+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@72c90bef (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.057+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6480d372 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.058+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@ab5e0a7 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:10:43.058+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5d3ec3d9 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:11:30.878+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:11:30.878+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=301  ]
2023-03-06T01:11:30.878+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=301  ]
2023-03-06T01:11:33.102+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:11:33.103+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=302  ]
2023-03-06T01:11:33.103+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T01:11:33.103+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=302  ]
2023-03-06T01:11:42.282+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:11:42.283+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=301  ]
2023-03-06T01:11:42.283+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T01:11:42.283+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@67122de2
2023-03-06T01:11:42.283+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 301
2023-03-06T01:11:42.284+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@207e01f3
2023-03-06T01:11:42.284+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:12:02.909+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:12:02.909+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=302  ]
2023-03-06T01:12:02.909+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T01:12:02.909+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@bf52e2e
2023-03-06T01:12:02.910+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 302
2023-03-06T01:12:02.910+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@230223e0
2023-03-06T01:12:02.910+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:12:41.891+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:12:41.892+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=303  ]
2023-03-06T01:12:41.892+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=303  ]
2023-03-06T01:12:47.100+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:12:47.100+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=303  ]
2023-03-06T01:12:47.101+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T01:12:47.101+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@73a3dfea
2023-03-06T01:12:47.101+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 303
2023-03-06T01:12:47.102+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@5f090446
2023-03-06T01:12:47.102+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:12:47.102+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6da63164 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.103+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@79b4ce32 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.104+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6e88ce76 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.104+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3279efd2 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.104+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@d2cd47f (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.105+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@52b64eb6 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.105+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@7ae5c1e8 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.106+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@71fa619 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.106+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6cfb05a9 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:12:47.106+01:00  WARN 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@cd8357e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-06T01:13:17.109+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-06T01:13:17.109+01:00 ERROR 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Fail to send message to database Failed to obtain JDBC Connection
2023-03-06T01:13:17.114+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:13:17.114+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=304  ]
2023-03-06T01:13:17.114+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=304  ]
2023-03-06T01:13:17.115+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:13:17.115+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=304  ]
2023-03-06T01:13:17.115+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T01:13:17.115+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@33139d8c
2023-03-06T01:13:17.116+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 304
2023-03-06T01:13:17.117+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@3c24c571
2023-03-06T01:13:17.118+01:00  INFO 109360 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-06T01:13:17.781+01:00  INFO 109360 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:32:36.657+01:00  INFO 76264 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 76264 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-06T01:32:36.660+01:00  INFO 76264 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-06T01:32:37.299+01:00  INFO 76264 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-06T01:32:38.524+01:00  INFO 76264 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-06T01:32:38.730+01:00  INFO 76264 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T01:32:38.731+01:00  INFO 76264 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T01:32:38.732+01:00  INFO 76264 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678062758728
2023-03-06T01:32:39.102+01:00  INFO 76264 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-06T01:32:39.107+01:00  INFO 76264 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-06T01:32:39.107+01:00  INFO 76264 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-06T01:32:39.107+01:00  INFO 76264 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-06T01:32:39.113+01:00  INFO 76264 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.exceptionChannel' has 1 subscriber(s).
2023-03-06T01:32:39.113+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'errorChannel.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method errorChannel'
2023-03-06T01:32:39.114+01:00  INFO 76264 --- [main] c.springkafka.task.EventMessageHandler   : started bean 'eventMessageHandler' for component 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'com.springkafka.task.EventKafkaFlow.eventMessageHandler()'
2023-03-06T01:32:39.114+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'fromKafkaFlow.channel#0' channel
2023-03-06T01:32:39.115+01:00  INFO 76264 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#0' has 1 subscriber(s).
2023-03-06T01:32:39.115+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T01:32:39.115+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {filter} as a subscriber to the 'fromKafkaFlow.channel#1' channel
2023-03-06T01:32:39.115+01:00  INFO 76264 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#1' has 1 subscriber(s).
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {} as a subscriber to the 'fromKafkaFlow.channel#2' channel
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#2' has 1 subscriber(s).
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {object-to-json-transformer} as a subscriber to the 'fromKafkaFlow.channel#3' channel
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#3' has 1 subscriber(s).
2023-03-06T01:32:39.116+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#3'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {kafka:outbound-channel-adapter} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 1 subscriber(s).
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toKafkaFlow'
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 2 subscriber(s).
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-06T01:32:39.117+01:00  INFO 76264 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.toDBFlow.channel#0' has 1 subscriber(s).
2023-03-06T01:32:39.118+01:00  INFO 76264 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-06T01:32:39.151+01:00  INFO 76264 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33';-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33';
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-06T01:32:39.189+01:00  INFO 76264 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T01:32:39.190+01:00  INFO 76264 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T01:32:39.190+01:00  INFO 76264 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678062759189
2023-03-06T01:32:39.192+01:00  INFO 76264 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Subscribed to topic(s): topicTask1
2023-03-06T01:32:39.199+01:00  INFO 76264 --- [main] s.i.k.i.KafkaMessageDrivenChannelAdapter : started bean 'fromKafkaFlow.kafka:message-driven-channel-adapter#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-06T01:32:39.210+01:00  INFO 76264 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.961 seconds (process running for 3.316)
2023-03-06T01:32:39.215+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-06T01:32:39.216+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-2 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-06T01:32:39.216+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-06T01:32:39.217+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-06T01:32:39.218+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Discovered group coordinator host.docker.internal:9092 (id: 2147483647 rack: null)
2023-03-06T01:32:39.221+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-06T01:32:39.240+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33';-1-9262393b-e740-42b7-9973-06570381a10a
2023-03-06T01:32:39.240+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-06T01:32:39.240+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-06T01:32:39.246+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully joined group with generation Generation{generationId=92, memberId='consumer-springkafkatask33';-1-9262393b-e740-42b7-9973-06570381a10a', protocol='range'}
2023-03-06T01:32:39.249+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Finished assignment for group at generation 92: {consumer-springkafkatask33';-1-9262393b-e740-42b7-9973-06570381a10a=Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])}
2023-03-06T01:32:39.255+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully synced group in generation Generation{generationId=92, memberId='consumer-springkafkatask33';-1-9262393b-e740-42b7-9973-06570381a10a', protocol='range'}
2023-03-06T01:32:39.256+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])
2023-03-06T01:32:39.259+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Adding newly assigned partitions: topicTask1-0, topicTask1-1, topicTask1-2
2023-03-06T01:32:39.270+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=182, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-06T01:32:39.271+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-2 to the committed offset FetchPosition{offset=135, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-06T01:32:39.271+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=233, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[host.docker.internal:9092 (id: 0 rack: null)], epoch=0}}
2023-03-06T01:32:39.272+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] s.k.l.ConcurrentMessageListenerContainer : springkafkatask33';: partitions assigned: [topicTask1-0, topicTask1-1, topicTask1-2]
2023-03-06T01:32:48.766+01:00 ERROR 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=233, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1cbb472b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678062767723, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 233, CreateTime = 1678062767723, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=1dc0b0ca-9ad8-e0c6-2af5-c446ad5f1481, sourceData=ConsumerRecord(topic = topicTask1, partition = 1, leaderEpoch = 0, offset = 233, CreateTime = 1678062767723, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1678062768766}] for original GenericMessage [payload=e, headers={kafka_offset=233, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1cbb472b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1678062767723, kafka_groupId=springkafkatask33';}]
2023-03-06T01:32:54.464+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:32:54.465+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=202, callId=305  ]
2023-03-06T01:32:54.465+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-06T01:32:54.466+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=202, callId=305  ]
2023-03-06T01:33:05.188+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-06T01:33:05.188+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=305  ]
2023-03-06T01:33:05.189+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-06T01:33:05.189+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@678df863
2023-03-06T01:33:05.189+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 305
2023-03-06T01:33:05.241+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-06T01:33:05.251+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-06T01:33:05.267+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-06T01:33:05.268+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-06T01:33:05.268+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1678062785267
2023-03-06T01:33:05.275+01:00  INFO 76264 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-06T01:33:05.278+01:00  INFO 76264 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 28009 with epoch 0
2023-03-06T01:33:05.283+01:00  INFO 76264 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T01:33:05.283+01:00  INFO 76264 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T01:33:05.283+01:00  INFO 76264 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-06T01:33:05.309+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Response message from handleMessage for database! : com.springkafka.task.messages.ResponseMsg@fa8719e
2023-03-06T01:33:05.310+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-06T01:33:05.318+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-06T01:33:05.524+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b1c5cd
2023-03-06T01:33:05.526+01:00  INFO 76264 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
