2023-03-01T00:00:10.156+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:00:10.161+01:00 ERROR 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T00:00:10.161+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:00:29.334+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:00:29.335+01:00 ERROR 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T00:00:29.339+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:00:29.339+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=12  ]
2023-03-01T00:00:29.339+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=12  ]
2023-03-01T00:00:29.340+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:00:29.340+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=12  ]
2023-03-01T00:00:29.340+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T00:00:29.340+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@4bd6128
2023-03-01T00:00:29.340+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 12
2023-03-01T00:00:29.341+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@1a554168
2023-03-01T00:00:29.341+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:00:29.343+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:00:29.343+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=13  ]
2023-03-01T00:00:29.343+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=13  ]
2023-03-01T00:00:29.344+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:00:29.344+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=13  ]
2023-03-01T00:00:29.344+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T00:00:29.344+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@244d04d5
2023-03-01T00:00:29.344+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 13
2023-03-01T00:00:29.346+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@3bd0fcfa
2023-03-01T00:00:29.346+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:00:40.177+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:00:40.177+01:00 ERROR 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T00:00:40.177+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:01:09.369+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:09.369+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=14  ]
2023-03-01T00:01:09.369+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=14  ]
2023-03-01T00:01:10.193+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:01:10.193+01:00 ERROR 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T00:01:10.193+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:01:11.176+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:11.176+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=15  ]
2023-03-01T00:01:11.176+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T00:01:11.177+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=15  ]
2023-03-01T00:01:13.520+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:13.521+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=16  ]
2023-03-01T00:01:13.521+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=16  ]
2023-03-01T00:01:15.971+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:15.972+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=17  ]
2023-03-01T00:01:15.972+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T00:01:15.972+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=17  ]
2023-03-01T00:01:18.343+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:18.343+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=18  ]
2023-03-01T00:01:18.343+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=18  ]
2023-03-01T00:01:21.538+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:21.538+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=19  ]
2023-03-01T00:01:21.538+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T00:01:21.538+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=19  ]
2023-03-01T00:01:25.100+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Node -1 disconnected.
2023-03-01T00:01:25.134+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:25.136+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=20  ]
2023-03-01T00:01:25.136+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=20  ]
2023-03-01T00:01:28.573+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T00:01:28.573+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=20  ]
2023-03-01T00:01:28.574+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T00:01:28.574+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@7b238361
2023-03-01T00:01:28.574+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 20
2023-03-01T00:01:28.575+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@29f651d4
2023-03-01T00:01:28.575+01:00  INFO 38716 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T00:01:35.998+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:01:35.999+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:01:36.000+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:01:36.001+01:00  INFO 38716 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T00:01:58.579+01:00  INFO 38716 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2023-03-01T00:06:11.192+01:00  INFO 38716 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=250, callId=15  ]
2023-03-01T00:06:15.986+01:00  INFO 38716 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=250, callId=17  ]
2023-03-01T00:06:21.552+01:00  INFO 38716 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=250, callId=19  ]
2023-03-01T00:07:34.078+01:00  INFO 38716 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T00:07:34.078+01:00  INFO 38716 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 2
2023-03-01T00:16:11.208+01:00  INFO 38716 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T00:16:11.208+01:00  INFO 38716 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Clean cache for callId 15
2023-03-01T00:16:16.005+01:00  INFO 38716 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T00:16:16.005+01:00  INFO 38716 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Clean cache for callId 17
2023-03-01T00:16:21.571+01:00  INFO 38716 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T00:16:21.571+01:00  INFO 38716 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 19
2023-03-01T07:11:32.009+01:00  INFO 6256 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 6256 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-01T07:11:32.012+01:00  INFO 6256 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-01T07:11:32.673+01:00  INFO 6256 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-01T07:11:33.822+01:00  INFO 6256 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-01T07:11:33.993+01:00  INFO 6256 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T07:11:33.995+01:00  INFO 6256 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T07:11:33.995+01:00  INFO 6256 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677651093992
2023-03-01T07:11:34.376+01:00  INFO 6256 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-01T07:11:34.380+01:00  INFO 6256 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-01T07:11:34.381+01:00  INFO 6256 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-01T07:11:34.381+01:00  INFO 6256 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-01T07:11:34.387+01:00  INFO 6256 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.exceptionChannel' has 1 subscriber(s).
2023-03-01T07:11:34.388+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'errorChannel.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method errorChannel'
2023-03-01T07:11:34.388+01:00  INFO 6256 --- [main] c.springkafka.task.EventMessageHandler   : started bean 'eventMessageHandler' for component 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'com.springkafka.task.EventKafkaFlow.eventMessageHandler()'
2023-03-01T07:11:34.389+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'fromKafkaFlow.channel#0' channel
2023-03-01T07:11:34.389+01:00  INFO 6256 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#0' has 1 subscriber(s).
2023-03-01T07:11:34.389+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T07:11:34.389+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {filter} as a subscriber to the 'fromKafkaFlow.channel#1' channel
2023-03-01T07:11:34.390+01:00  INFO 6256 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#1' has 1 subscriber(s).
2023-03-01T07:11:34.390+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T07:11:34.390+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {} as a subscriber to the 'fromKafkaFlow.channel#2' channel
2023-03-01T07:11:34.390+01:00  INFO 6256 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#2' has 1 subscriber(s).
2023-03-01T07:11:34.391+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T07:11:34.391+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {object-to-json-transformer} as a subscriber to the 'fromKafkaFlow.channel#3' channel
2023-03-01T07:11:34.391+01:00  INFO 6256 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#3' has 1 subscriber(s).
2023-03-01T07:11:34.391+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#3'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T07:11:34.391+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {kafka:outbound-channel-adapter} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-01T07:11:34.391+01:00  INFO 6256 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 1 subscriber(s).
2023-03-01T07:11:34.392+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toKafkaFlow'
2023-03-01T07:11:34.392+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-01T07:11:34.392+01:00  INFO 6256 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 2 subscriber(s).
2023-03-01T07:11:34.392+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-01T07:11:34.392+01:00  INFO 6256 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.toDBFlow.channel#0' has 1 subscriber(s).
2023-03-01T07:11:34.392+01:00  INFO 6256 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-01T07:11:34.427+01:00  INFO 6256 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33';-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33';
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-01T07:11:34.470+01:00  INFO 6256 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T07:11:34.470+01:00  INFO 6256 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T07:11:34.470+01:00  INFO 6256 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677651094470
2023-03-01T07:11:34.472+01:00  INFO 6256 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Subscribed to topic(s): topicTask1
2023-03-01T07:11:34.479+01:00  INFO 6256 --- [main] s.i.k.i.KafkaMessageDrivenChannelAdapter : started bean 'fromKafkaFlow.kafka:message-driven-channel-adapter#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T07:11:34.490+01:00  INFO 6256 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.866 seconds (process running for 3.197)
2023-03-01T07:11:34.500+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T07:11:34.501+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T07:11:34.501+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-2 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T07:11:34.502+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-01T07:11:34.505+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Discovered group coordinator RSM2650.mera.com:9092 (id: 2147483647 rack: null)
2023-03-01T07:11:34.507+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-01T07:11:34.532+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33';-1-c02b9346-9534-4682-8652-64371f2db30e
2023-03-01T07:11:34.532+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-01T07:11:34.532+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-01T07:11:34.545+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully joined group with generation Generation{generationId=46, memberId='consumer-springkafkatask33';-1-c02b9346-9534-4682-8652-64371f2db30e', protocol='range'}
2023-03-01T07:11:34.547+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Finished assignment for group at generation 46: {consumer-springkafkatask33';-1-c02b9346-9534-4682-8652-64371f2db30e=Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])}
2023-03-01T07:11:34.590+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully synced group in generation Generation{generationId=46, memberId='consumer-springkafkatask33';-1-c02b9346-9534-4682-8652-64371f2db30e', protocol='range'}
2023-03-01T07:11:34.591+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])
2023-03-01T07:11:34.593+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Adding newly assigned partitions: topicTask1-0, topicTask1-1, topicTask1-2
2023-03-01T07:11:34.603+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Found no committed offset for partition topicTask1-0
2023-03-01T07:11:34.607+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-2 to the committed offset FetchPosition{offset=135, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T07:11:34.607+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=129, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T07:11:34.620+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting offset for partition topicTask1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}.
2023-03-01T07:11:34.621+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] s.k.l.ConcurrentMessageListenerContainer : springkafkatask33';: partitions assigned: [topicTask1-0, topicTask1-1, topicTask1-2]
2023-03-01T07:13:01.457+01:00 ERROR 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7dafe00b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677651180392, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1677651180392, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=053b52bc-7ca5-9e8c-bdd6-c1d1fbf864c4, sourceData=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 0, CreateTime = 1677651180392, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1677651181457}] for original GenericMessage [payload=e, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7dafe00b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677651180392, kafka_groupId=springkafkatask33';}]
2023-03-01T07:13:32.549+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:13:32.549+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-01T07:13:32.550+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=100  ]
2023-03-01T07:13:44.241+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:13:44.241+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=100  ]
2023-03-01T07:13:44.241+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:13:44.242+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@1309631f
2023-03-01T07:13:44.242+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 100
2023-03-01T07:13:44.287+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-01T07:13:44.297+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-01T07:13:44.310+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T07:13:44.310+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T07:13:44.311+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677651224310
2023-03-01T07:13:44.317+01:00  INFO 6256 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T07:13:44.318+01:00  INFO 6256 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T07:13:44.318+01:00  INFO 6256 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T07:13:44.318+01:00  INFO 6256 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-01T07:13:44.318+01:00  INFO 6256 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 27001 with epoch 0
2023-03-01T07:13:44.331+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@7a1086a0
2023-03-01T07:13:44.332+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:13:44.338+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T07:13:44.659+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@15bce9c9
2023-03-01T07:13:44.661+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-01T07:15:51.234+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:15:51.235+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=101  ]
2023-03-01T07:15:51.235+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=101  ]
2023-03-01T07:15:55.508+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:15:55.508+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=101  ]
2023-03-01T07:15:55.508+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:15:55.508+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@33e69700
2023-03-01T07:15:55.508+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-01T07:15:55.509+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@6083078a
2023-03-01T07:15:55.509+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:15:55.516+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@15bce9c9 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.517+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@52e5d8e4 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.518+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5695eba3 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.518+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@69708131 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.519+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6dd5bbf3 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.519+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@110b7c55 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.520+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@683a4524 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.522+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5ae281b (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.522+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@45e4017e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:15:55.522+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@f473443 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:16:25.508+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:16:25.508+01:00  INFO 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:16:25.508+01:00 ERROR 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T07:16:55.504+01:00  INFO 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:16:55.504+01:00 ERROR 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:16:55.505+01:00  INFO 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:17:25.509+01:00  INFO 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:17:25.509+01:00 ERROR 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:17:25.510+01:00  INFO 6256 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:17:38.319+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:17:38.319+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=102  ]
2023-03-01T07:17:38.319+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=102  ]
2023-03-01T07:17:40.784+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:17:40.785+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=102  ]
2023-03-01T07:17:40.785+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:17:40.785+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@7a58300a
2023-03-01T07:17:40.785+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 102
2023-03-01T07:17:40.787+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@2374e8f8
2023-03-01T07:17:40.787+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:17:55.517+01:00  INFO 6256 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:17:55.517+01:00 ERROR 6256 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:17:55.518+01:00  INFO 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:25.518+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:25.519+01:00 ERROR 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T07:18:25.524+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.524+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=101  ]
2023-03-01T07:18:25.524+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=101  ]
2023-03-01T07:18:25.524+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.525+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=101  ]
2023-03-01T07:18:25.525+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:18:25.525+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@200775
2023-03-01T07:18:25.525+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 101
2023-03-01T07:18:25.527+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@20a21cc1
2023-03-01T07:18:25.527+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:25.527+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.528+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=103  ]
2023-03-01T07:18:25.528+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=103  ]
2023-03-01T07:18:25.528+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.528+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=103  ]
2023-03-01T07:18:25.528+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:18:25.529+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@24950305
2023-03-01T07:18:25.529+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 103
2023-03-01T07:18:25.530+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@2936ba0
2023-03-01T07:18:25.530+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:25.530+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.530+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=104  ]
2023-03-01T07:18:25.531+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=104  ]
2023-03-01T07:18:25.531+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.531+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=104  ]
2023-03-01T07:18:25.531+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:18:25.531+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@32e72b27
2023-03-01T07:18:25.531+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 104
2023-03-01T07:18:25.532+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@6fa3531f
2023-03-01T07:18:25.533+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:25.533+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.533+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=105  ]
2023-03-01T07:18:25.534+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=105  ]
2023-03-01T07:18:25.534+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.535+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=105  ]
2023-03-01T07:18:25.535+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:18:25.535+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@7674fb20
2023-03-01T07:18:25.535+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 105
2023-03-01T07:18:25.536+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@77774814
2023-03-01T07:18:25.536+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:25.537+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.537+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=106  ]
2023-03-01T07:18:25.537+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=106  ]
2023-03-01T07:18:25.539+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.539+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=106  ]
2023-03-01T07:18:25.539+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:18:25.539+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@3db9b4d0
2023-03-01T07:18:25.539+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 106
2023-03-01T07:18:25.541+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@1e5017fa
2023-03-01T07:18:25.541+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:25.542+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:25.542+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=107  ]
2023-03-01T07:18:25.542+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=107  ]
2023-03-01T07:18:28.644+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:18:28.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=107  ]
2023-03-01T07:18:28.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:18:28.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@1afddf79
2023-03-01T07:18:28.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 107
2023-03-01T07:18:28.646+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@34310e2c
2023-03-01T07:18:28.646+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:18:46.189+01:00  INFO 6256 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:46.190+01:00  INFO 6256 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:46.191+01:00  INFO 6256 --- [pool-2-thread-4] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:46.192+01:00  INFO 6256 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:46.193+01:00  INFO 6256 --- [pool-2-thread-5] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:46.194+01:00  INFO 6256 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:18:46.194+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:19:41.882+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:19:41.883+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=200  ]
2023-03-01T07:19:41.883+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=200  ]
2023-03-01T07:19:45.557+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:19:45.558+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=200  ]
2023-03-01T07:19:45.558+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:19:45.558+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@2a403097
2023-03-01T07:19:45.558+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 200
2023-03-01T07:19:45.559+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@8a61c4d
2023-03-01T07:19:45.559+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:20:15.352+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:20:15.353+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=201  ]
2023-03-01T07:20:15.353+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=201  ]
2023-03-01T07:20:17.045+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:20:17.046+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=202  ]
2023-03-01T07:20:17.046+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T07:20:17.047+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=202  ]
2023-03-01T07:20:24.300+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:20:24.300+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=201  ]
2023-03-01T07:20:24.301+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:20:24.301+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@50edd164
2023-03-01T07:20:24.301+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 201
2023-03-01T07:20:24.302+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@db6cfa2
2023-03-01T07:20:24.302+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:20:24.302+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@397ba60a (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.303+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@600f96ff (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.304+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5bff9e83 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.305+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3fd03800 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.306+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@21589fec (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.306+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3d7c4d56 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.307+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@1a50d7fc (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.307+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@247eec8e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.308+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@413ca012 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:24.308+01:00  WARN 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@1e75439e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T07:20:34.401+01:00  INFO 6256 --- [kafka-coordinator-heartbeat-thread | springkafkatask33';] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Node -1 disconnected.
2023-03-01T07:20:54.309+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:20:54.309+01:00 ERROR 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T07:20:54.309+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:20:54.314+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:20:54.315+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=202  ]
2023-03-01T07:20:54.315+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:20:54.315+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@286989b
2023-03-01T07:20:54.315+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 202
2023-03-01T07:20:54.316+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@755718c2
2023-03-01T07:20:54.316+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:21:24.313+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:21:24.313+01:00 ERROR 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:21:24.313+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:21:54.317+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:21:54.317+01:00 ERROR 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T07:21:54.322+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:21:54.322+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=203  ]
2023-03-01T07:21:54.322+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=203  ]
2023-03-01T07:21:54.323+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:21:54.323+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=203  ]
2023-03-01T07:21:54.323+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:21:54.323+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@418adc45
2023-03-01T07:21:54.323+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 203
2023-03-01T07:21:54.324+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@5eee375f
2023-03-01T07:21:54.324+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:06.422+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:06.423+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=204  ]
2023-03-01T07:22:06.423+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=204  ]
2023-03-01T07:22:08.339+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:08.339+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=204  ]
2023-03-01T07:22:08.339+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:08.340+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@1332a548
2023-03-01T07:22:08.340+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 204
2023-03-01T07:22:08.340+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@587de17
2023-03-01T07:22:08.341+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:10.923+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:10.924+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=205  ]
2023-03-01T07:22:10.924+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=205  ]
2023-03-01T07:22:13.481+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:13.482+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=205  ]
2023-03-01T07:22:13.482+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:13.482+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@2afc5537
2023-03-01T07:22:13.482+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 205
2023-03-01T07:22:13.483+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@419eea15
2023-03-01T07:22:13.483+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:16.418+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:16.419+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=206  ]
2023-03-01T07:22:16.419+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=206  ]
2023-03-01T07:22:19.006+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:19.007+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=206  ]
2023-03-01T07:22:19.007+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:19.007+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@7a52f357
2023-03-01T07:22:19.007+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 206
2023-03-01T07:22:19.009+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@5c07b9d4
2023-03-01T07:22:19.010+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:22.040+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:22.040+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=207  ]
2023-03-01T07:22:22.041+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=207  ]
2023-03-01T07:22:24.328+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:24.328+01:00 ERROR 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:22:24.328+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:22:24.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:24.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=207  ]
2023-03-01T07:22:24.645+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:24.646+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@31739cbe
2023-03-01T07:22:24.646+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 207
2023-03-01T07:22:24.647+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@2894b79d
2023-03-01T07:22:24.647+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:27.792+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:27.792+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=208  ]
2023-03-01T07:22:27.792+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=208  ]
2023-03-01T07:22:32.267+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:32.267+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=208  ]
2023-03-01T07:22:32.268+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:32.268+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@49bc6242
2023-03-01T07:22:32.268+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 208
2023-03-01T07:22:32.269+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@26d50fc1
2023-03-01T07:22:32.269+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:36.208+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:36.209+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=209  ]
2023-03-01T07:22:36.209+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=209  ]
2023-03-01T07:22:42.426+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:42.426+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=209  ]
2023-03-01T07:22:42.426+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:42.426+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@2b706cd9
2023-03-01T07:22:42.426+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 209
2023-03-01T07:22:42.427+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@592686a7
2023-03-01T07:22:42.428+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:48.499+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:48.499+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=210  ]
2023-03-01T07:22:48.499+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T07:22:48.500+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=210  ]
2023-03-01T07:22:54.331+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:22:54.331+01:00 ERROR 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:22:54.331+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:22:56.146+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T07:22:56.146+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=210  ]
2023-03-01T07:22:56.146+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T07:22:56.147+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@7f3d99c8
2023-03-01T07:22:56.147+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 210
2023-03-01T07:22:56.148+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@36bff544
2023-03-01T07:22:56.148+01:00  INFO 6256 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2023-03-01T07:22:56.148+01:00  INFO 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:23:15.107+01:00 ERROR 6256 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=41, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7dafe00b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677651794092, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1677651794092, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=869b6b4b-50e0-bcc3-380d-0a0f8469ed2a, sourceData=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1677651794092, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1677651795107}] for original GenericMessage [payload=e, headers={kafka_offset=41, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7dafe00b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677651794092, kafka_groupId=springkafkatask33';}]
2023-03-01T07:23:24.332+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T07:23:24.332+01:00 ERROR 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T07:23:24.333+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.053+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.054+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.054+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.055+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.055+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.056+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.056+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.058+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:23:25.059+01:00  INFO 6256 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T07:25:17.052+01:00  INFO 6256 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=250, callId=202  ]
2023-03-01T07:27:48.509+01:00  INFO 6256 --- [pool-1-thread-2] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=250, callId=210  ]
2023-03-01T07:35:17.062+01:00  INFO 6256 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T07:35:17.062+01:00  INFO 6256 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 202
2023-03-01T07:37:48.516+01:00  INFO 6256 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T07:37:48.516+01:00  INFO 6256 --- [pool-1-thread-3] c.s.task.cache.EventMessageCache         : Clean cache for callId 210
2023-03-01T08:04:04.690+01:00  INFO 15568 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 15568 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-01T08:04:04.693+01:00  INFO 15568 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-01T08:04:05.225+01:00  INFO 15568 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-01T08:04:06.424+01:00  INFO 15568 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-01T08:04:06.592+01:00  INFO 15568 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T08:04:06.593+01:00  INFO 15568 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T08:04:06.593+01:00  INFO 15568 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677654246590
2023-03-01T08:04:06.913+01:00  INFO 15568 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-01T08:04:06.919+01:00  INFO 15568 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-01T08:04:06.920+01:00  INFO 15568 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-01T08:04:06.920+01:00  INFO 15568 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-01T08:04:06.925+01:00  INFO 15568 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.exceptionChannel' has 1 subscriber(s).
2023-03-01T08:04:06.925+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'errorChannel.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method errorChannel'
2023-03-01T08:04:06.926+01:00  INFO 15568 --- [main] c.springkafka.task.EventMessageHandler   : started bean 'eventMessageHandler' for component 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'com.springkafka.task.EventKafkaFlow.eventMessageHandler()'
2023-03-01T08:04:06.926+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'fromKafkaFlow.channel#0' channel
2023-03-01T08:04:06.926+01:00  INFO 15568 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#0' has 1 subscriber(s).
2023-03-01T08:04:06.926+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:04:06.926+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {filter} as a subscriber to the 'fromKafkaFlow.channel#1' channel
2023-03-01T08:04:06.927+01:00  INFO 15568 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#1' has 1 subscriber(s).
2023-03-01T08:04:06.927+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:04:06.927+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {} as a subscriber to the 'fromKafkaFlow.channel#2' channel
2023-03-01T08:04:06.927+01:00  INFO 15568 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#2' has 1 subscriber(s).
2023-03-01T08:04:06.928+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:04:06.928+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {object-to-json-transformer} as a subscriber to the 'fromKafkaFlow.channel#3' channel
2023-03-01T08:04:06.928+01:00  INFO 15568 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#3' has 1 subscriber(s).
2023-03-01T08:04:06.928+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#3'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:04:06.928+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {kafka:outbound-channel-adapter} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-01T08:04:06.929+01:00  INFO 15568 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 1 subscriber(s).
2023-03-01T08:04:06.929+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toKafkaFlow'
2023-03-01T08:04:06.929+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-01T08:04:06.929+01:00  INFO 15568 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 2 subscriber(s).
2023-03-01T08:04:06.929+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-01T08:04:06.930+01:00  INFO 15568 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.toDBFlow.channel#0' has 1 subscriber(s).
2023-03-01T08:04:06.930+01:00  INFO 15568 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-01T08:04:06.957+01:00  INFO 15568 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33';-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33';
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-01T08:04:06.996+01:00  INFO 15568 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T08:04:06.997+01:00  INFO 15568 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T08:04:06.997+01:00  INFO 15568 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677654246996
2023-03-01T08:04:06.999+01:00  INFO 15568 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Subscribed to topic(s): topicTask1
2023-03-01T08:04:07.009+01:00  INFO 15568 --- [main] s.i.k.i.KafkaMessageDrivenChannelAdapter : started bean 'fromKafkaFlow.kafka:message-driven-channel-adapter#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:04:07.021+01:00  INFO 15568 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.773 seconds (process running for 3.138)
2023-03-01T08:04:07.027+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T08:04:07.028+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T08:04:07.028+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-2 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T08:04:07.029+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-01T08:04:07.031+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Discovered group coordinator RSM2650.mera.com:9092 (id: 2147483647 rack: null)
2023-03-01T08:04:07.034+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-01T08:04:07.053+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33';-1-76c0b0e0-beee-4415-8298-a1944751f4eb
2023-03-01T08:04:07.053+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-01T08:04:07.053+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-01T08:04:43.074+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully joined group with generation Generation{generationId=47, memberId='consumer-springkafkatask33';-1-76c0b0e0-beee-4415-8298-a1944751f4eb', protocol='range'}
2023-03-01T08:04:43.078+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Finished assignment for group at generation 47: {consumer-springkafkatask33';-1-76c0b0e0-beee-4415-8298-a1944751f4eb=Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])}
2023-03-01T08:04:43.083+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully synced group in generation Generation{generationId=47, memberId='consumer-springkafkatask33';-1-76c0b0e0-beee-4415-8298-a1944751f4eb', protocol='range'}
2023-03-01T08:04:43.084+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])
2023-03-01T08:04:43.087+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Adding newly assigned partitions: topicTask1-0, topicTask1-1, topicTask1-2
2023-03-01T08:04:43.097+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=42, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T08:04:43.098+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-2 to the committed offset FetchPosition{offset=135, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T08:04:43.098+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=129, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T08:04:43.100+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] s.k.l.ConcurrentMessageListenerContainer : springkafkatask33';: partitions assigned: [topicTask1-0, topicTask1-1, topicTask1-2]
2023-03-01T08:04:43.158+01:00 ERROR 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=42, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5b797df9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677654278769, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1677654278769, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=e32dfa37-a246-018c-95a4-1fb5dc10ee92, sourceData=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1677654278769, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1677654283158}] for original GenericMessage [payload=e, headers={kafka_offset=42, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5b797df9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677654278769, kafka_groupId=springkafkatask33';}]
2023-03-01T08:04:45.144+01:00 ERROR 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=43, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5b797df9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677654284125, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 43, CreateTime = 1677654284125, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=54a7f27a-43d1-3f03-3d3f-c0fc7392264c, sourceData=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 43, CreateTime = 1677654284125, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1677654285143}] for original GenericMessage [payload=e, headers={kafka_offset=43, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5b797df9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677654284125, kafka_groupId=springkafkatask33';}]
2023-03-01T08:04:53.932+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:04:53.932+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=500  ]
2023-03-01T08:04:53.933+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=500  ]
2023-03-01T08:04:59.507+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:04:59.507+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=500  ]
2023-03-01T08:04:59.508+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:04:59.508+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@26fadefd
2023-03-01T08:04:59.508+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 500
2023-03-01T08:04:59.562+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-01T08:04:59.572+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-01T08:04:59.587+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T08:04:59.587+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T08:04:59.588+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677654299587
2023-03-01T08:04:59.593+01:00  INFO 15568 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-01T08:04:59.594+01:00  INFO 15568 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 27002 with epoch 0
2023-03-01T08:04:59.598+01:00  INFO 15568 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:04:59.598+01:00  INFO 15568 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:04:59.598+01:00  INFO 15568 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:04:59.620+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@3d01d667
2023-03-01T08:04:59.621+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:04:59.628+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariConfig           : HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-03-01T08:04:59.628+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:04:59.821+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16d4ff5e
2023-03-01T08:04:59.823+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-01T08:05:31.071+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:05:31.072+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=501  ]
2023-03-01T08:05:31.072+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=501  ]
2023-03-01T08:05:34.675+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:05:34.675+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=501  ]
2023-03-01T08:05:34.675+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:05:34.675+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@70495e5f
2023-03-01T08:05:34.676+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 501
2023-03-01T08:05:34.676+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@6ef94102
2023-03-01T08:05:34.677+01:00  INFO 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:05:34.682+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@16d4ff5e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.683+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@4f4922e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.684+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@afd1bc0 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.684+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5a152ac8 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.685+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3e225a15 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.686+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@1ee7ca1d (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.688+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@7c26f11a (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.689+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@f96c73c (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.690+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@23c8c629 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:05:34.691+01:00  WARN 15568 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@35f476f (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:06:05.752+01:00  INFO 4140 --- [main] c.s.task.SpringKafkaTaskApplication      : Starting SpringKafkaTaskApplication using Java 17.0.4.1 with PID 4140 (C:\Users\stjakic\tasks-workspace\KafkaSpringBoot\target\classes started by stjakic in C:\Users\stjakic\tasks-workspace\KafkaSpringBoot)
2023-03-01T08:06:05.754+01:00  INFO 4140 --- [main] c.s.task.SpringKafkaTaskApplication      : No active profile set, falling back to 1 default profile: "default"
2023-03-01T08:06:06.261+01:00  INFO 4140 --- [main] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2023-03-01T08:06:07.497+01:00  INFO 4140 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-03-01T08:06:07.664+01:00  INFO 4140 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T08:06:07.665+01:00  INFO 4140 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T08:06:07.665+01:00  INFO 4140 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677654367663
2023-03-01T08:06:07.952+01:00  INFO 4140 --- [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
2023-03-01T08:06:07.960+01:00  INFO 4140 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2023-03-01T08:06:07.960+01:00  INFO 4140 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-03-01T08:06:07.961+01:00  INFO 4140 --- [kafka-admin-client-thread | adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2023-03-01T08:06:07.965+01:00  INFO 4140 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.exceptionChannel' has 1 subscriber(s).
2023-03-01T08:06:07.966+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'errorChannel.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method errorChannel'
2023-03-01T08:06:07.967+01:00  INFO 4140 --- [main] c.springkafka.task.EventMessageHandler   : started bean 'eventMessageHandler' for component 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'com.springkafka.task.EventKafkaFlow.eventMessageHandler()'
2023-03-01T08:06:07.967+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'fromKafkaFlow.channel#0' channel
2023-03-01T08:06:07.967+01:00  INFO 4140 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#0' has 1 subscriber(s).
2023-03-01T08:06:07.967+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:06:07.967+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {filter} as a subscriber to the 'fromKafkaFlow.channel#1' channel
2023-03-01T08:06:07.968+01:00  INFO 4140 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#1' has 1 subscriber(s).
2023-03-01T08:06:07.968+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:06:07.968+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {} as a subscriber to the 'fromKafkaFlow.channel#2' channel
2023-03-01T08:06:07.968+01:00  INFO 4140 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#2' has 1 subscriber(s).
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#2'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {object-to-json-transformer} as a subscriber to the 'fromKafkaFlow.channel#3' channel
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.fromKafkaFlow.channel#3' has 1 subscriber(s).
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'fromKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#3'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {kafka:outbound-channel-adapter} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 1 subscriber(s).
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toKafkaFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toKafkaFlow'
2023-03-01T08:06:07.969+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : Adding {json-to-object-transformer} as a subscriber to the 'kafkaOutputChannell' channel
2023-03-01T08:06:07.970+01:00  INFO 4140 --- [main] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.kafkaOutputChannell' has 2 subscriber(s).
2023-03-01T08:06:07.970+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-01T08:06:07.970+01:00  INFO 4140 --- [main] o.s.integration.channel.DirectChannel    : Channel 'application.toDBFlow.channel#0' has 1 subscriber(s).
2023-03-01T08:06:07.970+01:00  INFO 4140 --- [main] o.s.i.endpoint.EventDrivenConsumer       : started bean 'toDBFlow.org.springframework.integration.config.ConsumerEndpointFactoryBean#1'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method toDBFlow'
2023-03-01T08:06:07.993+01:00  INFO 4140 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-springkafkatask33';-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = springkafkatask33';
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-03-01T08:06:08.039+01:00  INFO 4140 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T08:06:08.039+01:00  INFO 4140 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T08:06:08.039+01:00  INFO 4140 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677654368039
2023-03-01T08:06:08.041+01:00  INFO 4140 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Subscribed to topic(s): topicTask1
2023-03-01T08:06:08.048+01:00  INFO 4140 --- [main] s.i.k.i.KafkaMessageDrivenChannelAdapter : started bean 'fromKafkaFlow.kafka:message-driven-channel-adapter#0'; defined in: 'class path resource [com/springkafka/task/EventKafkaFlow.class]'; from source: 'bean method fromKafkaFlow'
2023-03-01T08:06:08.058+01:00  INFO 4140 --- [main] c.s.task.SpringKafkaTaskApplication      : Started SpringKafkaTaskApplication in 2.75 seconds (process running for 3.15)
2023-03-01T08:06:08.065+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-0 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T08:06:08.066+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-1 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T08:06:08.066+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Resetting the last seen epoch of partition topicTask1-2 to 0 since the associated topicId changed from null to oAsmd34vQPaIMBMGyI8dag
2023-03-01T08:06:08.067+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-01T08:06:08.068+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Discovered group coordinator RSM2650.mera.com:9092 (id: 2147483647 rack: null)
2023-03-01T08:06:08.071+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-01T08:06:08.088+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: need to re-join with the given member-id: consumer-springkafkatask33';-1-c00ada6e-d641-44fc-83d5-32bb8df418c1
2023-03-01T08:06:08.088+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-03-01T08:06:08.088+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] (Re-)joining group
2023-03-01T08:06:44.017+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully joined group with generation Generation{generationId=48, memberId='consumer-springkafkatask33';-1-c00ada6e-d641-44fc-83d5-32bb8df418c1', protocol='range'}
2023-03-01T08:06:44.019+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Finished assignment for group at generation 48: {consumer-springkafkatask33';-1-c00ada6e-d641-44fc-83d5-32bb8df418c1=Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])}
2023-03-01T08:06:44.026+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Successfully synced group in generation Generation{generationId=48, memberId='consumer-springkafkatask33';-1-c00ada6e-d641-44fc-83d5-32bb8df418c1', protocol='range'}
2023-03-01T08:06:44.027+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Notifying assignor about the new Assignment(partitions=[topicTask1-0, topicTask1-1, topicTask1-2])
2023-03-01T08:06:44.029+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Adding newly assigned partitions: topicTask1-0, topicTask1-1, topicTask1-2
2023-03-01T08:06:44.037+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-0 to the committed offset FetchPosition{offset=47, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T08:06:44.037+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-2 to the committed offset FetchPosition{offset=135, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T08:06:44.038+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Setting offset for partition topicTask1-1 to the committed offset FetchPosition{offset=129, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[RSM2650.mera.com:9092 (id: 0 rack: null)], epoch=0}}
2023-03-01T08:06:44.039+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] s.k.l.ConcurrentMessageListenerContainer : springkafkatask33';: partitions assigned: [topicTask1-0, topicTask1-1, topicTask1-2]
2023-03-01T08:06:44.130+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:06:44.131+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=501  ]
2023-03-01T08:06:44.131+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T08:06:44.132+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=501  ]
2023-03-01T08:06:44.134+01:00 ERROR 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=48, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@51ef0d4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677654372607, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1677654372607, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=8e6f87bd-389c-7fc3-c961-34ef7a7095a0, sourceData=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1677654372607, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1677654404134}] for original GenericMessage [payload=e, headers={kafka_offset=48, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@51ef0d4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677654372607, kafka_groupId=springkafkatask33';}]
2023-03-01T08:06:54.318+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:06:54.318+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=502  ]
2023-03-01T08:06:54.318+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=502  ]
2023-03-01T08:06:57.737+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:06:57.737+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=502  ]
2023-03-01T08:06:57.738+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:06:57.738+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@3db38feb
2023-03-01T08:06:57.738+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 502
2023-03-01T08:06:57.787+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-03-01T08:06:57.794+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-03-01T08:06:57.808+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.3.1
2023-03-01T08:06:57.809+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: e23c59d00e687ff5
2023-03-01T08:06:57.809+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1677654417808
2023-03-01T08:06:57.817+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: Jv9IsbmTQAC1aV0PfVYjHA
2023-03-01T08:06:57.817+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 27003 with epoch 0
2023-03-01T08:06:57.821+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:06:57.822+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:06:57.822+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:06:57.839+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@485f0998
2023-03-01T08:06:57.839+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:06:57.847+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariConfig           : HikariPool-1 - maxLifetime is less than 30000ms, setting to default 1800000ms.
2023-03-01T08:06:57.847+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:06:58.910+01:00 ERROR 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.tryToSendToDatabase(DatabaseMessageHandler.java:87) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler.handleMessage(DatabaseMessageHandler.java:79) ~[classes/:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.sendInternal(AbstractMessageChannel.java:373) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:327) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:297) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:484) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.doProduceOutput(AbstractMessageProducingHandler.java:339) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:268) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:232) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.doHandleMessage(AbstractMessageHandler.java:105) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.BroadcastingDispatcher.invokeHandler(BroadcastingDispatcher.java:222) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.BroadcastingDispatcher.dispatch(BroadcastingDispatcher.java:178) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.sendInternal(AbstractMessageChannel.java:373) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:327) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:297) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:484) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.doProduceOutput(AbstractMessageProducingHandler.java:339) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:268) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:232) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.doHandleMessage(AbstractMessageHandler.java:105) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.sendInternal(AbstractMessageChannel.java:373) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:327) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:297) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.integration.endpoint.MessageProducerSupport.lambda$sendMessage$1(MessageProducerSupport.java:262) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at io.micrometer.observation.Observation.observe(Observation.java:492) ~[micrometer-observation-1.10.2.jar:1.10.2]
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:262) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at com.springkafka.task.EventMessageHandler.handleMessage(EventMessageHandler.java:88) ~[classes/:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.sendInternal(AbstractMessageChannel.java:373) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:327) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:297) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:484) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.doProduceOutput(AbstractMessageProducingHandler.java:339) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:268) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:232) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.doHandleMessage(AbstractMessageHandler.java:105) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.sendInternal(AbstractMessageChannel.java:373) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:327) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:297) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:484) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.doProduceOutput(AbstractMessageProducingHandler.java:339) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:268) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:232) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.doHandleMessage(AbstractMessageHandler.java:105) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.sendInternal(AbstractMessageChannel.java:373) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:327) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:297) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109) ~[spring-messaging-6.0.3.jar:6.0.3]
	at org.springframework.integration.endpoint.MessageProducerSupport.lambda$sendMessage$1(MessageProducerSupport.java:262) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at io.micrometer.observation.Observation.observe(Observation.java:492) ~[micrometer-observation-1.10.2.jar:1.10.2]
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:262) ~[spring-integration-core-6.0.1.jar:6.0.1]
	at org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.sendMessageIfAny(KafkaMessageDrivenChannelAdapter.java:394) ~[spring-integration-kafka-6.0.1.jar:6.0.1]
	at org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$IntegrationRecordMessageListener.onMessage(KafkaMessageDrivenChannelAdapter.java:469) ~[spring-integration-kafka-6.0.1.jar:6.0.1]
	at org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$IntegrationRecordMessageListener.onMessage(KafkaMessageDrivenChannelAdapter.java:425) ~[spring-integration-kafka-6.0.1.jar:6.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2859) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2839) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$56(KafkaMessageListenerContainer.java:2762) ~[spring-kafka-3.0.1.jar:3.0.1]
	at io.micrometer.observation.Observation.observe(Observation.java:559) ~[micrometer-observation-1.10.2.jar:1.10.2]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2760) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2612) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2498) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2144) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1499) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1463) ~[spring-kafka-3.0.1.jar:3.0.1]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1338) ~[spring-kafka-3.0.1.jar:3.0.1]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 137 common frames omitted

2023-03-01T08:06:58.917+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:06:58.918+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:06:58.918+01:00 ERROR 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T08:06:58.919+01:00  INFO 4140 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:06:59.924+01:00 ERROR 4140 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:06:59.925+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:06:59.925+01:00 ERROR 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:06:59.925+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:06:59.925+01:00  INFO 4140 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:00.929+01:00 ERROR 4140 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:00.930+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:00.930+01:00 ERROR 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:00.930+01:00  INFO 4140 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:00.931+01:00  INFO 4140 --- [pool-2-thread-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:01.936+01:00 ERROR 4140 --- [pool-2-thread-2] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:01.937+01:00  INFO 4140 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:01.937+01:00 ERROR 4140 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:01.937+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:01.938+01:00  INFO 4140 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:02.944+01:00 ERROR 4140 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:02.945+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:02.945+01:00 ERROR 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:02.945+01:00  INFO 4140 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:02.945+01:00  INFO 4140 --- [pool-2-thread-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:03.960+01:00 ERROR 4140 --- [pool-2-thread-3] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:03.961+01:00  INFO 4140 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:03.961+01:00 ERROR 4140 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:03.961+01:00  INFO 4140 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:03.961+01:00  INFO 4140 --- [pool-2-thread-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:04.974+01:00 ERROR 4140 --- [pool-2-thread-2] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:04.975+01:00  INFO 4140 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:04.975+01:00 ERROR 4140 --- [pool-2-thread-2] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:04.975+01:00  INFO 4140 --- [pool-2-thread-4] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:04.975+01:00  INFO 4140 --- [pool-2-thread-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:05.984+01:00 ERROR 4140 --- [pool-2-thread-4] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:05.985+01:00  INFO 4140 --- [pool-2-thread-4] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:05.985+01:00 ERROR 4140 --- [pool-2-thread-4] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:05.986+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:05.986+01:00  INFO 4140 --- [pool-2-thread-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:06.991+01:00 ERROR 4140 --- [pool-2-thread-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:06.992+01:00  INFO 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:06.992+01:00 ERROR 4140 --- [pool-2-thread-1] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:06.992+01:00  INFO 4140 --- [pool-2-thread-5] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:06.993+01:00  INFO 4140 --- [pool-2-thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:07.997+01:00 ERROR 4140 --- [pool-2-thread-5] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:07.998+01:00  INFO 4140 --- [pool-2-thread-5] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:07.998+01:00 ERROR 4140 --- [pool-2-thread-5] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:07.998+01:00  INFO 4140 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:07.999+01:00  INFO 4140 --- [pool-2-thread-3] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:09.014+01:00 ERROR 4140 --- [pool-2-thread-3] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:09.015+01:00  INFO 4140 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:09.015+01:00 ERROR 4140 --- [pool-2-thread-3] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:09.015+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:09.015+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:10.017+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:10.018+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:10.018+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:10.018+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:10.018+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:11.023+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:11.024+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:11.024+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:11.024+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:11.025+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:12.033+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:12.034+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:12.034+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:12.034+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:12.034+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:13.049+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:13.050+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:13.050+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:16.895+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:16.895+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:17.899+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:17.900+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:17.900+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:21.890+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:21.890+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:22.908+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:22.908+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:22.909+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:26.891+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:26.891+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:27.908+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:27.908+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:27.908+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:31.899+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:31.899+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:32.910+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:32.911+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:32.911+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:36.890+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:36.890+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:37.908+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:37.909+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:37.909+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:41.894+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:41.894+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:42.896+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:42.897+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:42.897+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:43.340+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:07:43.341+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=503  ]
2023-03-01T08:07:43.341+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=503  ]
2023-03-01T08:07:45.228+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:07:45.228+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=503  ]
2023-03-01T08:07:45.229+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:07:45.229+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@3ebe105
2023-03-01T08:07:45.229+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 503
2023-03-01T08:07:45.230+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@2ef41945
2023-03-01T08:07:45.230+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:46.886+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:46.886+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:47.900+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:47.901+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:47.901+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:51.893+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:51.893+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:52.215+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:07:52.215+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=504  ]
2023-03-01T08:07:52.216+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=504  ]
2023-03-01T08:07:52.897+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:52.898+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:52.898+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:07:55.172+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:07:55.172+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=504  ]
2023-03-01T08:07:55.172+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:07:55.172+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@19d004d
2023-03-01T08:07:55.173+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 504
2023-03-01T08:07:55.173+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@7ea81cdc
2023-03-01T08:07:55.174+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:56.887+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:07:56.887+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:07:57.893+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:07:57.894+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:07:57.894+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:08:01.890+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:08:01.890+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:08:02.905+01:00 ERROR 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:247) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.makeConnection(Driver.java:434) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.Driver.connect(Driver.java:291) ~[postgresql-42.5.1.jar:42.5.1]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100) ~[HikariCP-5.0.1.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-5.0.1.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1015) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1025) ~[spring-jdbc-6.0.3.jar:6.0.3]
	at com.springkafka.task.DatabaseMessageHandler.saveResponseMessageToDatabase(DatabaseMessageHandler.java:51) ~[classes/:na]
	at com.springkafka.task.DatabaseMessageHandler$CacheQueueMessagesForRetryingToSendToDatabase.run(DatabaseMessageHandler.java:104) ~[classes/:na]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.PGStream.<init>(PGStream.java:98) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109) ~[postgresql-42.5.1.jar:42.5.1]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235) ~[postgresql-42.5.1.jar:42.5.1]
	... 26 common frames omitted

2023-03-01T08:08:02.906+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:08:02.906+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:08:06.902+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:08:06.902+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-03-01T08:08:07.095+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7f52dd36
2023-03-01T08:08:07.097+01:00  INFO 4140 --- [pool-2-thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-03-01T08:08:11.892+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:08:16.889+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:08:53.024+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:08:53.025+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=600  ]
2023-03-01T08:08:53.025+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=600  ]
2023-03-01T08:08:56.648+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:08:56.648+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=600  ]
2023-03-01T08:08:56.648+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:08:56.648+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@70181c7d
2023-03-01T08:08:56.649+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 600
2023-03-01T08:08:56.649+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@55d5bb7e
2023-03-01T08:08:56.650+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:10:36.501+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:10:36.502+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=601  ]
2023-03-01T08:10:36.502+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=601  ]
2023-03-01T08:10:38.655+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:10:38.655+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=601  ]
2023-03-01T08:10:38.655+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:10:38.655+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@6ba503e4
2023-03-01T08:10:38.656+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 601
2023-03-01T08:10:38.657+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@35c46302
2023-03-01T08:10:38.657+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:10:38.658+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@7f52dd36 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.659+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@33cca526 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.660+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6fa64d98 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.661+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3c395c52 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.661+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@29dd9c04 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.662+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@7feee98c (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.662+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@2279b164 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.662+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@5454b2b5 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.663+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@11ac3987 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:10:38.664+01:00  WARN 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@198600b7 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2023-03-01T08:11:08.670+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:11:08.671+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:11:08.671+01:00 ERROR 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T08:11:38.682+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:11:38.682+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:11:38.682+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:11:44.147+01:00  INFO 4140 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Message schedule for delete: EventMessage: [ callStatus=END, timestamp=250, callId=501  ]
2023-03-01T08:12:08.687+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:12:08.687+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:12:08.687+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:12:38.690+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:12:38.690+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:12:38.691+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:13:08.698+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:13:08.698+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:13:08.699+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:13:32.942+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:13:32.943+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=602  ]
2023-03-01T08:13:32.943+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=START, timestamp=50, callId=602  ]
2023-03-01T08:13:35.538+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:13:35.538+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=602  ]
2023-03-01T08:13:35.539+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:13:35.539+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@26ff4e4c
2023-03-01T08:13:35.539+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 602
2023-03-01T08:13:35.540+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@7dd3c9ec
2023-03-01T08:13:35.540+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:13:38.715+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:13:38.715+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:13:38.715+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:14:05.550+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:14:05.550+01:00 ERROR 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : WHAT ERROR WE GET Failed to obtain JDBC Connection
2023-03-01T08:14:08.721+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : Put message to Cache!
2023-03-01T08:14:08.721+01:00 ERROR 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : FAILD TO AGAIN SEND TO DB!
2023-03-01T08:14:08.721+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:14:09.652+01:00  INFO 4140 --- [pool-2-thread-6] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
2023-03-01T08:15:08.426+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-springkafkatask33';-1, groupId=springkafkatask33';] Node -1 disconnected.
2023-03-01T08:16:05.579+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2023-03-01T08:21:44.155+01:00  INFO 4140 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Deleting message via schedule
2023-03-01T08:21:44.155+01:00  INFO 4140 --- [pool-1-thread-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 501
2023-03-01T08:31:20.906+01:00 ERROR 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFlow      : errorChanell message invalid format ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException: failed to transform message, failedMessage=GenericMessage [payload=e, headers={kafka_offset=61, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@51ef0d4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677655879890, kafka_groupId=springkafkatask33';}], headers={kafka_data=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 61, CreateTime = 1677655879890, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), id=8d40de91-0a3d-b70f-ceca-83096d2b1562, sourceData=ConsumerRecord(topic = topicTask1, partition = 0, leaderEpoch = 0, offset = 61, CreateTime = 1677655879890, serialized key size = -1, serialized value size = 1, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = e), timestamp=1677655880906}] for original GenericMessage [payload=e, headers={kafka_offset=61, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@51ef0d4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=topicTask1, kafka_receivedTimestamp=1677655879890, kafka_groupId=springkafkatask33';}]
2023-03-01T08:31:26.308+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:31:26.309+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=END, timestamp=250, callId=605  ]
2023-03-01T08:31:26.309+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : scheduleMessageDelete is called
2023-03-01T08:31:26.309+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Received message: EventMessage: [ callStatus=END, timestamp=250, callId=605  ]
2023-03-01T08:31:29.680+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] com.springkafka.task.EventKafkaFilter    : FILTER !
2023-03-01T08:31:29.680+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Message from handleMessage : EventMessage: [ callStatus=START, timestamp=50, callId=605  ]
2023-03-01T08:31:29.681+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Sending response to topic2
2023-03-01T08:31:29.681+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.springkafka.task.EventMessageHandler   : Topic2 Received ResponseMesg.json: com.springkafka.task.messages.ResponseMsg@56ffbb75
2023-03-01T08:31:29.681+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.cache.EventMessageCache         : Clean cache for callId 605
2023-03-01T08:31:29.683+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-0 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:31:29.683+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-1 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:31:29.683+01:00  INFO 4140 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Resetting the last seen epoch of partition topicTask2-2 to 0 since the associated topicId changed from null to EIA07ZX0RvyCb-KBUadfbA
2023-03-01T08:31:29.684+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : Message from handleMessage FOR DATABASE! : com.springkafka.task.messages.ResponseMsg@7726735e
2023-03-01T08:31:29.684+01:00  INFO 4140 --- [fromKafkaFlow.org.springframework.kafka.listener.ConcurrentMessageListenerContainer#0-0-C-1] c.s.task.DatabaseMessageHandler          : TRYING INSERT INTO kafka_messages MESSAGE --> 
